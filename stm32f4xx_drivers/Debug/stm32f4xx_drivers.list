
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004140  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003fc  08004310  08004310  00014310  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800470c  0800470c  000201d0  2**0
                  CONTENTS
  4 .ARM          00000000  0800470c  0800470c  000201d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800470c  0800470c  000201d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800470c  0800470c  0001470c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004710  08004710  00014710  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d0  20000000  08004714  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000050  200001d0  080048e4  000201d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000220  080048e4  00020220  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000201d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000205b  00000000  00000000  000201fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000075d  00000000  00000000  00022255  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000240  00000000  00000000  000229b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000001e8  00000000  00000000  00022bf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000316b  00000000  00000000  00022de0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002239  00000000  00000000  00025f4b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000b420  00000000  00000000  00028184  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000335a4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001964  00000000  00000000  000335f4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         000000cc  00000000  00000000  00034f58  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      000001b9  00000000  00000000  00035024  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001d0 	.word	0x200001d0
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080042f8 	.word	0x080042f8

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001d4 	.word	0x200001d4
 800020c:	080042f8 	.word	0x080042f8

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <RCC_HSEConfig>:
  *            @arg RCC_HSE_ON: habilita el HSE
  *            @arg RCC_HSE_BYP: habilita el HSE para ser usado por una señal de reloj externa
  * @retval None
  */
void RCC_HSEConfig(RCC_HSE_Status_t HSE_Status)
{
 8000be8:	b480      	push	{r7}
 8000bea:	b083      	sub	sp, #12
 8000bec:	af00      	add	r7, sp, #0
 8000bee:	4603      	mov	r3, r0
 8000bf0:	71fb      	strb	r3, [r7, #7]
	// Limpiar los bits del HSE antes de configurarlo (RCC_HSE_OFF)
	RCC->CR &= ~((RCC_CR_HSEON)|(RCC_CR_HSEBYP)|(RCC_CR_CSSON));
 8000bf2:	4b0f      	ldr	r3, [pc, #60]	; (8000c30 <RCC_HSEConfig+0x48>)
 8000bf4:	681b      	ldr	r3, [r3, #0]
 8000bf6:	4a0e      	ldr	r2, [pc, #56]	; (8000c30 <RCC_HSEConfig+0x48>)
 8000bf8:	f023 0313 	bic.w	r3, r3, #19
 8000bfc:	6013      	str	r3, [r2, #0]

	if(HSE_Status == RCC_HSE_ON){
 8000bfe:	79fb      	ldrb	r3, [r7, #7]
 8000c00:	2b01      	cmp	r3, #1
 8000c02:	d106      	bne.n	8000c12 <RCC_HSEConfig+0x2a>
		RCC->CR |= (1 << RCC_CR_HSEON);
 8000c04:	4b0a      	ldr	r3, [pc, #40]	; (8000c30 <RCC_HSEConfig+0x48>)
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	4a09      	ldr	r2, [pc, #36]	; (8000c30 <RCC_HSEConfig+0x48>)
 8000c0a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000c0e:	6013      	str	r3, [r2, #0]
	}else if(HSE_Status == RCC_HSE_BYP){
		RCC->CR |= ((1 << RCC_CR_HSEBYP)|(1 << RCC_CR_HSEON));
	}
}
 8000c10:	e008      	b.n	8000c24 <RCC_HSEConfig+0x3c>
	}else if(HSE_Status == RCC_HSE_BYP){
 8000c12:	79fb      	ldrb	r3, [r7, #7]
 8000c14:	2b02      	cmp	r3, #2
 8000c16:	d105      	bne.n	8000c24 <RCC_HSEConfig+0x3c>
		RCC->CR |= ((1 << RCC_CR_HSEBYP)|(1 << RCC_CR_HSEON));
 8000c18:	4b05      	ldr	r3, [pc, #20]	; (8000c30 <RCC_HSEConfig+0x48>)
 8000c1a:	681b      	ldr	r3, [r3, #0]
 8000c1c:	4a04      	ldr	r2, [pc, #16]	; (8000c30 <RCC_HSEConfig+0x48>)
 8000c1e:	f443 23a0 	orr.w	r3, r3, #327680	; 0x50000
 8000c22:	6013      	str	r3, [r2, #0]
}
 8000c24:	bf00      	nop
 8000c26:	370c      	adds	r7, #12
 8000c28:	46bd      	mov	sp, r7
 8000c2a:	bc80      	pop	{r7}
 8000c2c:	4770      	bx	lr
 8000c2e:	bf00      	nop
 8000c30:	40023800 	.word	0x40023800

08000c34 <RCC_PLLConfig>:
	}
}


void RCC_PLLConfig(RCC_PLL_Source_t PLL_Source, uint32_t PLLM, uint32_t PLLN, uint32_t PLLP, uint32_t PLLQ, uint32_t PLLR)
{
 8000c34:	b580      	push	{r7, lr}
 8000c36:	b086      	sub	sp, #24
 8000c38:	af00      	add	r7, sp, #0
 8000c3a:	60b9      	str	r1, [r7, #8]
 8000c3c:	607a      	str	r2, [r7, #4]
 8000c3e:	603b      	str	r3, [r7, #0]
 8000c40:	4603      	mov	r3, r0
 8000c42:	73fb      	strb	r3, [r7, #15]
	uint32_t temp_RCC_PLLCFGR;

	ASSERT_TRUE(IS_VALID_PLLM_VALUE(PLLM));
 8000c44:	68bb      	ldr	r3, [r7, #8]
 8000c46:	2b3f      	cmp	r3, #63	; 0x3f
 8000c48:	d802      	bhi.n	8000c50 <RCC_PLLConfig+0x1c>
 8000c4a:	68bb      	ldr	r3, [r7, #8]
 8000c4c:	2b01      	cmp	r3, #1
 8000c4e:	d803      	bhi.n	8000c58 <RCC_PLLConfig+0x24>
 8000c50:	2145      	movs	r1, #69	; 0x45
 8000c52:	4826      	ldr	r0, [pc, #152]	; (8000cec <RCC_PLLConfig+0xb8>)
 8000c54:	f000 fdb0 	bl	80017b8 <assert_failed>
	ASSERT_TRUE(IS_VALID_PLLN_VALUE(PLLN));
 8000c58:	687b      	ldr	r3, [r7, #4]
 8000c5a:	f5b3 7fd8 	cmp.w	r3, #432	; 0x1b0
 8000c5e:	d802      	bhi.n	8000c66 <RCC_PLLConfig+0x32>
 8000c60:	687b      	ldr	r3, [r7, #4]
 8000c62:	2b32      	cmp	r3, #50	; 0x32
 8000c64:	d803      	bhi.n	8000c6e <RCC_PLLConfig+0x3a>
 8000c66:	2146      	movs	r1, #70	; 0x46
 8000c68:	4820      	ldr	r0, [pc, #128]	; (8000cec <RCC_PLLConfig+0xb8>)
 8000c6a:	f000 fda5 	bl	80017b8 <assert_failed>
	ASSERT_TRUE(IS_VALID_PLLP_VALUE(PLLP));
 8000c6e:	683b      	ldr	r3, [r7, #0]
 8000c70:	2b02      	cmp	r3, #2
 8000c72:	d00c      	beq.n	8000c8e <RCC_PLLConfig+0x5a>
 8000c74:	683b      	ldr	r3, [r7, #0]
 8000c76:	2b04      	cmp	r3, #4
 8000c78:	d009      	beq.n	8000c8e <RCC_PLLConfig+0x5a>
 8000c7a:	683b      	ldr	r3, [r7, #0]
 8000c7c:	2b06      	cmp	r3, #6
 8000c7e:	d006      	beq.n	8000c8e <RCC_PLLConfig+0x5a>
 8000c80:	683b      	ldr	r3, [r7, #0]
 8000c82:	2b08      	cmp	r3, #8
 8000c84:	d003      	beq.n	8000c8e <RCC_PLLConfig+0x5a>
 8000c86:	2147      	movs	r1, #71	; 0x47
 8000c88:	4818      	ldr	r0, [pc, #96]	; (8000cec <RCC_PLLConfig+0xb8>)
 8000c8a:	f000 fd95 	bl	80017b8 <assert_failed>
	ASSERT_TRUE(IS_VALID_PLLQ_VALUE(PLLQ));
 8000c8e:	6a3b      	ldr	r3, [r7, #32]
 8000c90:	2b0f      	cmp	r3, #15
 8000c92:	d802      	bhi.n	8000c9a <RCC_PLLConfig+0x66>
 8000c94:	6a3b      	ldr	r3, [r7, #32]
 8000c96:	2b01      	cmp	r3, #1
 8000c98:	d803      	bhi.n	8000ca2 <RCC_PLLConfig+0x6e>
 8000c9a:	2148      	movs	r1, #72	; 0x48
 8000c9c:	4813      	ldr	r0, [pc, #76]	; (8000cec <RCC_PLLConfig+0xb8>)
 8000c9e:	f000 fd8b 	bl	80017b8 <assert_failed>
	ASSERT_TRUE(IS_VALID_PLLR_VALUE(PLLR));
 8000ca2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000ca4:	2b07      	cmp	r3, #7
 8000ca6:	d802      	bhi.n	8000cae <RCC_PLLConfig+0x7a>
 8000ca8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000caa:	2b01      	cmp	r3, #1
 8000cac:	d803      	bhi.n	8000cb6 <RCC_PLLConfig+0x82>
 8000cae:	2149      	movs	r1, #73	; 0x49
 8000cb0:	480e      	ldr	r0, [pc, #56]	; (8000cec <RCC_PLLConfig+0xb8>)
 8000cb2:	f000 fd81 	bl	80017b8 <assert_failed>

	temp_RCC_PLLCFGR = PLLM | ( PLLN << RCC_PLLCFGR_PLLN) | ((PLLP >> 1) - 1/*N1*/) << RCC_PLLCFGR_PLLP | (PLL_Source << RCC_PLLCFGR_PLLSRC) |
 8000cb6:	687b      	ldr	r3, [r7, #4]
 8000cb8:	019a      	lsls	r2, r3, #6
 8000cba:	68bb      	ldr	r3, [r7, #8]
 8000cbc:	431a      	orrs	r2, r3
 8000cbe:	683b      	ldr	r3, [r7, #0]
 8000cc0:	085b      	lsrs	r3, r3, #1
 8000cc2:	3b01      	subs	r3, #1
 8000cc4:	041b      	lsls	r3, r3, #16
 8000cc6:	4313      	orrs	r3, r2
 8000cc8:	7bfa      	ldrb	r2, [r7, #15]
 8000cca:	0592      	lsls	r2, r2, #22
 8000ccc:	431a      	orrs	r2, r3
				(PLLQ << RCC_PLLCFGR_PLLQ) | (PLLR << RCC_PLLCFGR_PLLR);
 8000cce:	6a3b      	ldr	r3, [r7, #32]
 8000cd0:	061b      	lsls	r3, r3, #24
	temp_RCC_PLLCFGR = PLLM | ( PLLN << RCC_PLLCFGR_PLLN) | ((PLLP >> 1) - 1/*N1*/) << RCC_PLLCFGR_PLLP | (PLL_Source << RCC_PLLCFGR_PLLSRC) |
 8000cd2:	431a      	orrs	r2, r3
				(PLLQ << RCC_PLLCFGR_PLLQ) | (PLLR << RCC_PLLCFGR_PLLR);
 8000cd4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000cd6:	071b      	lsls	r3, r3, #28
	temp_RCC_PLLCFGR = PLLM | ( PLLN << RCC_PLLCFGR_PLLN) | ((PLLP >> 1) - 1/*N1*/) << RCC_PLLCFGR_PLLP | (PLL_Source << RCC_PLLCFGR_PLLSRC) |
 8000cd8:	4313      	orrs	r3, r2
 8000cda:	617b      	str	r3, [r7, #20]
	//N1 page 130/1328    00= 2 -> (n/2 -1) n= 2 -> 00   01 = 4 (4/2 -1)= 1 y asi sucesivamente [>> = (/2)]  operaciones similares
	RCC->PLLCFGR = temp_RCC_PLLCFGR;
 8000cdc:	4a04      	ldr	r2, [pc, #16]	; (8000cf0 <RCC_PLLConfig+0xbc>)
 8000cde:	697b      	ldr	r3, [r7, #20]
 8000ce0:	6053      	str	r3, [r2, #4]
}
 8000ce2:	bf00      	nop
 8000ce4:	3718      	adds	r7, #24
 8000ce6:	46bd      	mov	sp, r7
 8000ce8:	bd80      	pop	{r7, pc}
 8000cea:	bf00      	nop
 8000cec:	08004310 	.word	0x08004310
 8000cf0:	40023800 	.word	0x40023800

08000cf4 <RCC_PLLCmd>:
	}else if(status == DISABLE){
		RCC->CSR &= ~(1 << RCC_CSR_LSION);
	}
}
void RCC_PLLCmd(uint8_t status)
{
 8000cf4:	b480      	push	{r7}
 8000cf6:	b083      	sub	sp, #12
 8000cf8:	af00      	add	r7, sp, #0
 8000cfa:	4603      	mov	r3, r0
 8000cfc:	71fb      	strb	r3, [r7, #7]
	if(status == ENABLE){
 8000cfe:	79fb      	ldrb	r3, [r7, #7]
 8000d00:	2b01      	cmp	r3, #1
 8000d02:	d106      	bne.n	8000d12 <RCC_PLLCmd+0x1e>
		RCC->CR |= (1 << RCC_CR_PLLON);
 8000d04:	4b0a      	ldr	r3, [pc, #40]	; (8000d30 <RCC_PLLCmd+0x3c>)
 8000d06:	681b      	ldr	r3, [r3, #0]
 8000d08:	4a09      	ldr	r2, [pc, #36]	; (8000d30 <RCC_PLLCmd+0x3c>)
 8000d0a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000d0e:	6013      	str	r3, [r2, #0]
	}else if(status == DISABLE){
		RCC->CR &= ~(1 << RCC_CR_PLLON);
	}
}
 8000d10:	e008      	b.n	8000d24 <RCC_PLLCmd+0x30>
	}else if(status == DISABLE){
 8000d12:	79fb      	ldrb	r3, [r7, #7]
 8000d14:	2b00      	cmp	r3, #0
 8000d16:	d105      	bne.n	8000d24 <RCC_PLLCmd+0x30>
		RCC->CR &= ~(1 << RCC_CR_PLLON);
 8000d18:	4b05      	ldr	r3, [pc, #20]	; (8000d30 <RCC_PLLCmd+0x3c>)
 8000d1a:	681b      	ldr	r3, [r3, #0]
 8000d1c:	4a04      	ldr	r2, [pc, #16]	; (8000d30 <RCC_PLLCmd+0x3c>)
 8000d1e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8000d22:	6013      	str	r3, [r2, #0]
}
 8000d24:	bf00      	nop
 8000d26:	370c      	adds	r7, #12
 8000d28:	46bd      	mov	sp, r7
 8000d2a:	bc80      	pop	{r7}
 8000d2c:	4770      	bx	lr
 8000d2e:	bf00      	nop
 8000d30:	40023800 	.word	0x40023800

08000d34 <RCC_WaitForCLKRDY>:

	RCC->CFGR = temp_RCC_CFGR;
}

void RCC_WaitForCLKRDY(RCC_Clock_t clk)
{
 8000d34:	b480      	push	{r7}
 8000d36:	b083      	sub	sp, #12
 8000d38:	af00      	add	r7, sp, #0
 8000d3a:	4603      	mov	r3, r0
 8000d3c:	71fb      	strb	r3, [r7, #7]
	if(clk == RCC_Clock_HSI){
 8000d3e:	79fb      	ldrb	r3, [r7, #7]
 8000d40:	2b00      	cmp	r3, #0
 8000d42:	d107      	bne.n	8000d54 <RCC_WaitForCLKRDY+0x20>
		while(!(RCC->CR & (1 << RCC_CR_HSIRDY)));
 8000d44:	bf00      	nop
 8000d46:	4b16      	ldr	r3, [pc, #88]	; (8000da0 <RCC_WaitForCLKRDY+0x6c>)
 8000d48:	681b      	ldr	r3, [r3, #0]
 8000d4a:	f003 0302 	and.w	r3, r3, #2
 8000d4e:	2b00      	cmp	r3, #0
 8000d50:	d0f9      	beq.n	8000d46 <RCC_WaitForCLKRDY+0x12>
	}else if(clk == RCC_Clock_PLL){
		while(!(RCC->CR & (1 << RCC_CR_PLLRDY)));
	}else if(clk == RCC_Clock_LSE){
		while(!(RCC->BDCR & (1 << RCC_BDCR_LSERDY)));
	}
}
 8000d52:	e01f      	b.n	8000d94 <RCC_WaitForCLKRDY+0x60>
	}else if(clk == RCC_Clock_HSE){
 8000d54:	79fb      	ldrb	r3, [r7, #7]
 8000d56:	2b01      	cmp	r3, #1
 8000d58:	d107      	bne.n	8000d6a <RCC_WaitForCLKRDY+0x36>
		while(!(RCC->CR & (1 << RCC_CR_HSERDY)));
 8000d5a:	bf00      	nop
 8000d5c:	4b10      	ldr	r3, [pc, #64]	; (8000da0 <RCC_WaitForCLKRDY+0x6c>)
 8000d5e:	681b      	ldr	r3, [r3, #0]
 8000d60:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000d64:	2b00      	cmp	r3, #0
 8000d66:	d0f9      	beq.n	8000d5c <RCC_WaitForCLKRDY+0x28>
}
 8000d68:	e014      	b.n	8000d94 <RCC_WaitForCLKRDY+0x60>
	}else if(clk == RCC_Clock_PLL){
 8000d6a:	79fb      	ldrb	r3, [r7, #7]
 8000d6c:	2b02      	cmp	r3, #2
 8000d6e:	d107      	bne.n	8000d80 <RCC_WaitForCLKRDY+0x4c>
		while(!(RCC->CR & (1 << RCC_CR_PLLRDY)));
 8000d70:	bf00      	nop
 8000d72:	4b0b      	ldr	r3, [pc, #44]	; (8000da0 <RCC_WaitForCLKRDY+0x6c>)
 8000d74:	681b      	ldr	r3, [r3, #0]
 8000d76:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000d7a:	2b00      	cmp	r3, #0
 8000d7c:	d0f9      	beq.n	8000d72 <RCC_WaitForCLKRDY+0x3e>
}
 8000d7e:	e009      	b.n	8000d94 <RCC_WaitForCLKRDY+0x60>
	}else if(clk == RCC_Clock_LSE){
 8000d80:	79fb      	ldrb	r3, [r7, #7]
 8000d82:	2b03      	cmp	r3, #3
 8000d84:	d106      	bne.n	8000d94 <RCC_WaitForCLKRDY+0x60>
		while(!(RCC->BDCR & (1 << RCC_BDCR_LSERDY)));
 8000d86:	bf00      	nop
 8000d88:	4b05      	ldr	r3, [pc, #20]	; (8000da0 <RCC_WaitForCLKRDY+0x6c>)
 8000d8a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000d8c:	f003 0302 	and.w	r3, r3, #2
 8000d90:	2b00      	cmp	r3, #0
 8000d92:	d0f9      	beq.n	8000d88 <RCC_WaitForCLKRDY+0x54>
}
 8000d94:	bf00      	nop
 8000d96:	370c      	adds	r7, #12
 8000d98:	46bd      	mov	sp, r7
 8000d9a:	bc80      	pop	{r7}
 8000d9c:	4770      	bx	lr
 8000d9e:	bf00      	nop
 8000da0:	40023800 	.word	0x40023800

08000da4 <RCC_SYSCLKConfig>:

void RCC_SYSCLKConfig(RCC_SYSCLK_Source_t SYSCLK_Source)
{
 8000da4:	b480      	push	{r7}
 8000da6:	b085      	sub	sp, #20
 8000da8:	af00      	add	r7, sp, #0
 8000daa:	4603      	mov	r3, r0
 8000dac:	71fb      	strb	r3, [r7, #7]
	uint32_t temp_RCC_CFGR;
	temp_RCC_CFGR = RCC->CFGR;
 8000dae:	4b09      	ldr	r3, [pc, #36]	; (8000dd4 <RCC_SYSCLKConfig+0x30>)
 8000db0:	689b      	ldr	r3, [r3, #8]
 8000db2:	60fb      	str	r3, [r7, #12]

	// Limpiar bits de source
	temp_RCC_CFGR &= ~(0x03 << RCC_CFGR_SW);
 8000db4:	68fb      	ldr	r3, [r7, #12]
 8000db6:	f023 0303 	bic.w	r3, r3, #3
 8000dba:	60fb      	str	r3, [r7, #12]

	// Setear bits de source
	temp_RCC_CFGR |= (SYSCLK_Source << RCC_CFGR_SW);
 8000dbc:	79fb      	ldrb	r3, [r7, #7]
 8000dbe:	68fa      	ldr	r2, [r7, #12]
 8000dc0:	4313      	orrs	r3, r2
 8000dc2:	60fb      	str	r3, [r7, #12]

	RCC->CFGR = temp_RCC_CFGR;
 8000dc4:	4a03      	ldr	r2, [pc, #12]	; (8000dd4 <RCC_SYSCLKConfig+0x30>)
 8000dc6:	68fb      	ldr	r3, [r7, #12]
 8000dc8:	6093      	str	r3, [r2, #8]
}
 8000dca:	bf00      	nop
 8000dcc:	3714      	adds	r7, #20
 8000dce:	46bd      	mov	sp, r7
 8000dd0:	bc80      	pop	{r7}
 8000dd2:	4770      	bx	lr
 8000dd4:	40023800 	.word	0x40023800

08000dd8 <RCC_APB1CLKConfig>:

	RCC->CFGR = temp_RCC_CFGR;
}

void RCC_APB1CLKConfig(RCC_APB_Prescaler_t APB1_Prescaler)
{
 8000dd8:	b480      	push	{r7}
 8000dda:	b085      	sub	sp, #20
 8000ddc:	af00      	add	r7, sp, #0
 8000dde:	4603      	mov	r3, r0
 8000de0:	71fb      	strb	r3, [r7, #7]
	uint32_t temp_RCC_CFGR;
	temp_RCC_CFGR = RCC->CFGR;
 8000de2:	4b0a      	ldr	r3, [pc, #40]	; (8000e0c <RCC_APB1CLKConfig+0x34>)
 8000de4:	689b      	ldr	r3, [r3, #8]
 8000de6:	60fb      	str	r3, [r7, #12]

	// Limpiar bits de prescaler
	temp_RCC_CFGR &= ~(0x07 << RCC_CFGR_PPRE1);//0x07 = 111 (tres bits)
 8000de8:	68fb      	ldr	r3, [r7, #12]
 8000dea:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8000dee:	60fb      	str	r3, [r7, #12]

	// Setear bits de prescaler
	temp_RCC_CFGR |= (APB1_Prescaler << RCC_CFGR_PPRE1);
 8000df0:	79fb      	ldrb	r3, [r7, #7]
 8000df2:	029b      	lsls	r3, r3, #10
 8000df4:	461a      	mov	r2, r3
 8000df6:	68fb      	ldr	r3, [r7, #12]
 8000df8:	4313      	orrs	r3, r2
 8000dfa:	60fb      	str	r3, [r7, #12]

	RCC->CFGR = temp_RCC_CFGR;
 8000dfc:	4a03      	ldr	r2, [pc, #12]	; (8000e0c <RCC_APB1CLKConfig+0x34>)
 8000dfe:	68fb      	ldr	r3, [r7, #12]
 8000e00:	6093      	str	r3, [r2, #8]
}
 8000e02:	bf00      	nop
 8000e04:	3714      	adds	r7, #20
 8000e06:	46bd      	mov	sp, r7
 8000e08:	bc80      	pop	{r7}
 8000e0a:	4770      	bx	lr
 8000e0c:	40023800 	.word	0x40023800

08000e10 <RCC_APB2CLKConfig>:

void RCC_APB2CLKConfig(RCC_APB_Prescaler_t APB2_Prescaler)
{
 8000e10:	b480      	push	{r7}
 8000e12:	b085      	sub	sp, #20
 8000e14:	af00      	add	r7, sp, #0
 8000e16:	4603      	mov	r3, r0
 8000e18:	71fb      	strb	r3, [r7, #7]
	uint32_t temp_RCC_CFGR;
	temp_RCC_CFGR = RCC->CFGR;
 8000e1a:	4b0a      	ldr	r3, [pc, #40]	; (8000e44 <RCC_APB2CLKConfig+0x34>)
 8000e1c:	689b      	ldr	r3, [r3, #8]
 8000e1e:	60fb      	str	r3, [r7, #12]

	// Limpiar bits de prescaler
	temp_RCC_CFGR &= ~(0x07 << RCC_CFGR_PPRE2);//0x07 = 111 (tres bits)
 8000e20:	68fb      	ldr	r3, [r7, #12]
 8000e22:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8000e26:	60fb      	str	r3, [r7, #12]

	// Setear bits de prescaler
	temp_RCC_CFGR |= (APB2_Prescaler << RCC_CFGR_PPRE2);
 8000e28:	79fb      	ldrb	r3, [r7, #7]
 8000e2a:	035b      	lsls	r3, r3, #13
 8000e2c:	461a      	mov	r2, r3
 8000e2e:	68fb      	ldr	r3, [r7, #12]
 8000e30:	4313      	orrs	r3, r2
 8000e32:	60fb      	str	r3, [r7, #12]

	RCC->CFGR = temp_RCC_CFGR;
 8000e34:	4a03      	ldr	r2, [pc, #12]	; (8000e44 <RCC_APB2CLKConfig+0x34>)
 8000e36:	68fb      	ldr	r3, [r7, #12]
 8000e38:	6093      	str	r3, [r2, #8]
}
 8000e3a:	bf00      	nop
 8000e3c:	3714      	adds	r7, #20
 8000e3e:	46bd      	mov	sp, r7
 8000e40:	bc80      	pop	{r7}
 8000e42:	4770      	bx	lr
 8000e44:	40023800 	.word	0x40023800

08000e48 <GPIO_ClkCtrl>:
//Activar el reloj
//inicializarlo
// opcion de resetear

void GPIO_ClkCtrl(GPIO_RegDef_t *pGPIOx, uint8_t status)
{
 8000e48:	b480      	push	{r7}
 8000e4a:	b083      	sub	sp, #12
 8000e4c:	af00      	add	r7, sp, #0
 8000e4e:	6078      	str	r0, [r7, #4]
 8000e50:	460b      	mov	r3, r1
 8000e52:	70fb      	strb	r3, [r7, #3]
	if(status == ENABLE){
 8000e54:	78fb      	ldrb	r3, [r7, #3]
 8000e56:	2b01      	cmp	r3, #1
 8000e58:	d157      	bne.n	8000f0a <GPIO_ClkCtrl+0xc2>
		if(pGPIOx == GPIOA)
 8000e5a:	687b      	ldr	r3, [r7, #4]
 8000e5c:	4a5a      	ldr	r2, [pc, #360]	; (8000fc8 <GPIO_ClkCtrl+0x180>)
 8000e5e:	4293      	cmp	r3, r2
 8000e60:	d106      	bne.n	8000e70 <GPIO_ClkCtrl+0x28>
			GPIOA_EN_CLK();
 8000e62:	4b5a      	ldr	r3, [pc, #360]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000e64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e66:	4a59      	ldr	r2, [pc, #356]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000e68:	f043 0301 	orr.w	r3, r3, #1
 8000e6c:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOG)
			GPIOG_DIS_CLK();
		else if(pGPIOx == GPIOH)
			GPIOH_DIS_CLK();
	}
}
 8000e6e:	e0a6      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOB)
 8000e70:	687b      	ldr	r3, [r7, #4]
 8000e72:	4a57      	ldr	r2, [pc, #348]	; (8000fd0 <GPIO_ClkCtrl+0x188>)
 8000e74:	4293      	cmp	r3, r2
 8000e76:	d106      	bne.n	8000e86 <GPIO_ClkCtrl+0x3e>
			GPIOB_EN_CLK();
 8000e78:	4b54      	ldr	r3, [pc, #336]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000e7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e7c:	4a53      	ldr	r2, [pc, #332]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000e7e:	f043 0302 	orr.w	r3, r3, #2
 8000e82:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000e84:	e09b      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOC)
 8000e86:	687b      	ldr	r3, [r7, #4]
 8000e88:	4a52      	ldr	r2, [pc, #328]	; (8000fd4 <GPIO_ClkCtrl+0x18c>)
 8000e8a:	4293      	cmp	r3, r2
 8000e8c:	d106      	bne.n	8000e9c <GPIO_ClkCtrl+0x54>
			GPIOC_EN_CLK();
 8000e8e:	4b4f      	ldr	r3, [pc, #316]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000e90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e92:	4a4e      	ldr	r2, [pc, #312]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000e94:	f043 0304 	orr.w	r3, r3, #4
 8000e98:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000e9a:	e090      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOD)
 8000e9c:	687b      	ldr	r3, [r7, #4]
 8000e9e:	4a4e      	ldr	r2, [pc, #312]	; (8000fd8 <GPIO_ClkCtrl+0x190>)
 8000ea0:	4293      	cmp	r3, r2
 8000ea2:	d106      	bne.n	8000eb2 <GPIO_ClkCtrl+0x6a>
			GPIOD_EN_CLK();
 8000ea4:	4b49      	ldr	r3, [pc, #292]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000ea6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ea8:	4a48      	ldr	r2, [pc, #288]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000eaa:	f043 0308 	orr.w	r3, r3, #8
 8000eae:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000eb0:	e085      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOE)
 8000eb2:	687b      	ldr	r3, [r7, #4]
 8000eb4:	4a49      	ldr	r2, [pc, #292]	; (8000fdc <GPIO_ClkCtrl+0x194>)
 8000eb6:	4293      	cmp	r3, r2
 8000eb8:	d106      	bne.n	8000ec8 <GPIO_ClkCtrl+0x80>
			GPIOE_EN_CLK();
 8000eba:	4b44      	ldr	r3, [pc, #272]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000ebc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ebe:	4a43      	ldr	r2, [pc, #268]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000ec0:	f043 0310 	orr.w	r3, r3, #16
 8000ec4:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000ec6:	e07a      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOF)
 8000ec8:	687b      	ldr	r3, [r7, #4]
 8000eca:	4a45      	ldr	r2, [pc, #276]	; (8000fe0 <GPIO_ClkCtrl+0x198>)
 8000ecc:	4293      	cmp	r3, r2
 8000ece:	d106      	bne.n	8000ede <GPIO_ClkCtrl+0x96>
			GPIOF_EN_CLK();
 8000ed0:	4b3e      	ldr	r3, [pc, #248]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000ed2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ed4:	4a3d      	ldr	r2, [pc, #244]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000ed6:	f043 0320 	orr.w	r3, r3, #32
 8000eda:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000edc:	e06f      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOG)
 8000ede:	687b      	ldr	r3, [r7, #4]
 8000ee0:	4a40      	ldr	r2, [pc, #256]	; (8000fe4 <GPIO_ClkCtrl+0x19c>)
 8000ee2:	4293      	cmp	r3, r2
 8000ee4:	d106      	bne.n	8000ef4 <GPIO_ClkCtrl+0xac>
			GPIOG_EN_CLK();
 8000ee6:	4b39      	ldr	r3, [pc, #228]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000ee8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000eea:	4a38      	ldr	r2, [pc, #224]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000eec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000ef0:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000ef2:	e064      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOH)
 8000ef4:	687b      	ldr	r3, [r7, #4]
 8000ef6:	4a3c      	ldr	r2, [pc, #240]	; (8000fe8 <GPIO_ClkCtrl+0x1a0>)
 8000ef8:	4293      	cmp	r3, r2
 8000efa:	d160      	bne.n	8000fbe <GPIO_ClkCtrl+0x176>
			GPIOH_EN_CLK();
 8000efc:	4b33      	ldr	r3, [pc, #204]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000efe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f00:	4a32      	ldr	r2, [pc, #200]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f02:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f06:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000f08:	e059      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
	}else if(status == DISABLE){
 8000f0a:	78fb      	ldrb	r3, [r7, #3]
 8000f0c:	2b00      	cmp	r3, #0
 8000f0e:	d156      	bne.n	8000fbe <GPIO_ClkCtrl+0x176>
		if(pGPIOx == GPIOA)
 8000f10:	687b      	ldr	r3, [r7, #4]
 8000f12:	4a2d      	ldr	r2, [pc, #180]	; (8000fc8 <GPIO_ClkCtrl+0x180>)
 8000f14:	4293      	cmp	r3, r2
 8000f16:	d106      	bne.n	8000f26 <GPIO_ClkCtrl+0xde>
			GPIOA_DIS_CLK();
 8000f18:	4b2c      	ldr	r3, [pc, #176]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f1c:	4a2b      	ldr	r2, [pc, #172]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f1e:	f023 0301 	bic.w	r3, r3, #1
 8000f22:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000f24:	e04b      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOB)
 8000f26:	687b      	ldr	r3, [r7, #4]
 8000f28:	4a29      	ldr	r2, [pc, #164]	; (8000fd0 <GPIO_ClkCtrl+0x188>)
 8000f2a:	4293      	cmp	r3, r2
 8000f2c:	d106      	bne.n	8000f3c <GPIO_ClkCtrl+0xf4>
			GPIOB_DIS_CLK();
 8000f2e:	4b27      	ldr	r3, [pc, #156]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f32:	4a26      	ldr	r2, [pc, #152]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f34:	f023 0302 	bic.w	r3, r3, #2
 8000f38:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000f3a:	e040      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOC)
 8000f3c:	687b      	ldr	r3, [r7, #4]
 8000f3e:	4a25      	ldr	r2, [pc, #148]	; (8000fd4 <GPIO_ClkCtrl+0x18c>)
 8000f40:	4293      	cmp	r3, r2
 8000f42:	d106      	bne.n	8000f52 <GPIO_ClkCtrl+0x10a>
			GPIOC_DIS_CLK();
 8000f44:	4b21      	ldr	r3, [pc, #132]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f48:	4a20      	ldr	r2, [pc, #128]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f4a:	f023 0304 	bic.w	r3, r3, #4
 8000f4e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000f50:	e035      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOD)
 8000f52:	687b      	ldr	r3, [r7, #4]
 8000f54:	4a20      	ldr	r2, [pc, #128]	; (8000fd8 <GPIO_ClkCtrl+0x190>)
 8000f56:	4293      	cmp	r3, r2
 8000f58:	d106      	bne.n	8000f68 <GPIO_ClkCtrl+0x120>
			GPIOD_DIS_CLK();
 8000f5a:	4b1c      	ldr	r3, [pc, #112]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f5e:	4a1b      	ldr	r2, [pc, #108]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f60:	f023 0308 	bic.w	r3, r3, #8
 8000f64:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000f66:	e02a      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOE)
 8000f68:	687b      	ldr	r3, [r7, #4]
 8000f6a:	4a1c      	ldr	r2, [pc, #112]	; (8000fdc <GPIO_ClkCtrl+0x194>)
 8000f6c:	4293      	cmp	r3, r2
 8000f6e:	d106      	bne.n	8000f7e <GPIO_ClkCtrl+0x136>
			GPIOE_DIS_CLK();
 8000f70:	4b16      	ldr	r3, [pc, #88]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f74:	4a15      	ldr	r2, [pc, #84]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f76:	f023 0310 	bic.w	r3, r3, #16
 8000f7a:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000f7c:	e01f      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOF)
 8000f7e:	687b      	ldr	r3, [r7, #4]
 8000f80:	4a17      	ldr	r2, [pc, #92]	; (8000fe0 <GPIO_ClkCtrl+0x198>)
 8000f82:	4293      	cmp	r3, r2
 8000f84:	d106      	bne.n	8000f94 <GPIO_ClkCtrl+0x14c>
			GPIOF_DIS_CLK();
 8000f86:	4b11      	ldr	r3, [pc, #68]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f8a:	4a10      	ldr	r2, [pc, #64]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f8c:	f023 0320 	bic.w	r3, r3, #32
 8000f90:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000f92:	e014      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOG)
 8000f94:	687b      	ldr	r3, [r7, #4]
 8000f96:	4a13      	ldr	r2, [pc, #76]	; (8000fe4 <GPIO_ClkCtrl+0x19c>)
 8000f98:	4293      	cmp	r3, r2
 8000f9a:	d106      	bne.n	8000faa <GPIO_ClkCtrl+0x162>
			GPIOG_DIS_CLK();
 8000f9c:	4b0b      	ldr	r3, [pc, #44]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000f9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fa0:	4a0a      	ldr	r2, [pc, #40]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000fa2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000fa6:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000fa8:	e009      	b.n	8000fbe <GPIO_ClkCtrl+0x176>
		else if(pGPIOx == GPIOH)
 8000faa:	687b      	ldr	r3, [r7, #4]
 8000fac:	4a0e      	ldr	r2, [pc, #56]	; (8000fe8 <GPIO_ClkCtrl+0x1a0>)
 8000fae:	4293      	cmp	r3, r2
 8000fb0:	d105      	bne.n	8000fbe <GPIO_ClkCtrl+0x176>
			GPIOH_DIS_CLK();
 8000fb2:	4b06      	ldr	r3, [pc, #24]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000fb4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fb6:	4a05      	ldr	r2, [pc, #20]	; (8000fcc <GPIO_ClkCtrl+0x184>)
 8000fb8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000fbc:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000fbe:	bf00      	nop
 8000fc0:	370c      	adds	r7, #12
 8000fc2:	46bd      	mov	sp, r7
 8000fc4:	bc80      	pop	{r7}
 8000fc6:	4770      	bx	lr
 8000fc8:	40020000 	.word	0x40020000
 8000fcc:	40023800 	.word	0x40023800
 8000fd0:	40020400 	.word	0x40020400
 8000fd4:	40020800 	.word	0x40020800
 8000fd8:	40020c00 	.word	0x40020c00
 8000fdc:	40021000 	.word	0x40021000
 8000fe0:	40021400 	.word	0x40021400
 8000fe4:	40021800 	.word	0x40021800
 8000fe8:	40021c00 	.word	0x40021c00

08000fec <GPIO_Init>:
void GPIO_Init(GPIO_handle_t *pGPIOHandle)
{
 8000fec:	b580      	push	{r7, lr}
 8000fee:	b084      	sub	sp, #16
 8000ff0:	af00      	add	r7, sp, #0
 8000ff2:	6078      	str	r0, [r7, #4]
	// 1. Habilitar clock
	GPIO_ClkCtrl(pGPIOHandle->pGPIOx, ENABLE);
 8000ff4:	687b      	ldr	r3, [r7, #4]
 8000ff6:	681b      	ldr	r3, [r3, #0]
 8000ff8:	2101      	movs	r1, #1
 8000ffa:	4618      	mov	r0, r3
 8000ffc:	f7ff ff24 	bl	8000e48 <GPIO_ClkCtrl>

	// 2. Configurar modo (IN, OUT, AF o AN)//resetear los dos bits 11 en binario = 0x03
	if(pGPIOHandle->GPIO_config.GPIO_Mode > GPIO_Mode_AN){
 8001000:	687b      	ldr	r3, [r7, #4]
 8001002:	795b      	ldrb	r3, [r3, #5]
 8001004:	2b03      	cmp	r3, #3
 8001006:	f240 80d5 	bls.w	80011b4 <GPIO_Init+0x1c8>
		//Modo con interrupcion
		//Configurar flancos de disparo
		if(pGPIOHandle->GPIO_config.GPIO_Mode == GPIO_Mode_IT_FE)
 800100a:	687b      	ldr	r3, [r7, #4]
 800100c:	795b      	ldrb	r3, [r3, #5]
 800100e:	2b05      	cmp	r3, #5
 8001010:	d117      	bne.n	8001042 <GPIO_Init+0x56>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_config.GPIO_Pin);
 8001012:	4b5e      	ldr	r3, [pc, #376]	; (800118c <GPIO_Init+0x1a0>)
 8001014:	68db      	ldr	r3, [r3, #12]
 8001016:	687a      	ldr	r2, [r7, #4]
 8001018:	7912      	ldrb	r2, [r2, #4]
 800101a:	4611      	mov	r1, r2
 800101c:	2201      	movs	r2, #1
 800101e:	408a      	lsls	r2, r1
 8001020:	4611      	mov	r1, r2
 8001022:	4a5a      	ldr	r2, [pc, #360]	; (800118c <GPIO_Init+0x1a0>)
 8001024:	430b      	orrs	r3, r1
 8001026:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_config.GPIO_Pin);
 8001028:	4b58      	ldr	r3, [pc, #352]	; (800118c <GPIO_Init+0x1a0>)
 800102a:	689b      	ldr	r3, [r3, #8]
 800102c:	687a      	ldr	r2, [r7, #4]
 800102e:	7912      	ldrb	r2, [r2, #4]
 8001030:	4611      	mov	r1, r2
 8001032:	2201      	movs	r2, #1
 8001034:	408a      	lsls	r2, r1
 8001036:	43d2      	mvns	r2, r2
 8001038:	4611      	mov	r1, r2
 800103a:	4a54      	ldr	r2, [pc, #336]	; (800118c <GPIO_Init+0x1a0>)
 800103c:	400b      	ands	r3, r1
 800103e:	6093      	str	r3, [r2, #8]
 8001040:	e035      	b.n	80010ae <GPIO_Init+0xc2>
		}
		else if(pGPIOHandle->GPIO_config.GPIO_Mode == GPIO_Mode_IT_RE)
 8001042:	687b      	ldr	r3, [r7, #4]
 8001044:	795b      	ldrb	r3, [r3, #5]
 8001046:	2b04      	cmp	r3, #4
 8001048:	d117      	bne.n	800107a <GPIO_Init+0x8e>
		{
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_config.GPIO_Pin);
 800104a:	4b50      	ldr	r3, [pc, #320]	; (800118c <GPIO_Init+0x1a0>)
 800104c:	689b      	ldr	r3, [r3, #8]
 800104e:	687a      	ldr	r2, [r7, #4]
 8001050:	7912      	ldrb	r2, [r2, #4]
 8001052:	4611      	mov	r1, r2
 8001054:	2201      	movs	r2, #1
 8001056:	408a      	lsls	r2, r1
 8001058:	4611      	mov	r1, r2
 800105a:	4a4c      	ldr	r2, [pc, #304]	; (800118c <GPIO_Init+0x1a0>)
 800105c:	430b      	orrs	r3, r1
 800105e:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_config.GPIO_Pin);
 8001060:	4b4a      	ldr	r3, [pc, #296]	; (800118c <GPIO_Init+0x1a0>)
 8001062:	68db      	ldr	r3, [r3, #12]
 8001064:	687a      	ldr	r2, [r7, #4]
 8001066:	7912      	ldrb	r2, [r2, #4]
 8001068:	4611      	mov	r1, r2
 800106a:	2201      	movs	r2, #1
 800106c:	408a      	lsls	r2, r1
 800106e:	43d2      	mvns	r2, r2
 8001070:	4611      	mov	r1, r2
 8001072:	4a46      	ldr	r2, [pc, #280]	; (800118c <GPIO_Init+0x1a0>)
 8001074:	400b      	ands	r3, r1
 8001076:	60d3      	str	r3, [r2, #12]
 8001078:	e019      	b.n	80010ae <GPIO_Init+0xc2>
		}
		else if(pGPIOHandle->GPIO_config.GPIO_Mode == GPIO_Mode_IT_RFE)
 800107a:	687b      	ldr	r3, [r7, #4]
 800107c:	795b      	ldrb	r3, [r3, #5]
 800107e:	2b06      	cmp	r3, #6
 8001080:	d115      	bne.n	80010ae <GPIO_Init+0xc2>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_config.GPIO_Pin);
 8001082:	4b42      	ldr	r3, [pc, #264]	; (800118c <GPIO_Init+0x1a0>)
 8001084:	68db      	ldr	r3, [r3, #12]
 8001086:	687a      	ldr	r2, [r7, #4]
 8001088:	7912      	ldrb	r2, [r2, #4]
 800108a:	4611      	mov	r1, r2
 800108c:	2201      	movs	r2, #1
 800108e:	408a      	lsls	r2, r1
 8001090:	4611      	mov	r1, r2
 8001092:	4a3e      	ldr	r2, [pc, #248]	; (800118c <GPIO_Init+0x1a0>)
 8001094:	430b      	orrs	r3, r1
 8001096:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_config.GPIO_Pin);
 8001098:	4b3c      	ldr	r3, [pc, #240]	; (800118c <GPIO_Init+0x1a0>)
 800109a:	689b      	ldr	r3, [r3, #8]
 800109c:	687a      	ldr	r2, [r7, #4]
 800109e:	7912      	ldrb	r2, [r2, #4]
 80010a0:	4611      	mov	r1, r2
 80010a2:	2201      	movs	r2, #1
 80010a4:	408a      	lsls	r2, r1
 80010a6:	4611      	mov	r1, r2
 80010a8:	4a38      	ldr	r2, [pc, #224]	; (800118c <GPIO_Init+0x1a0>)
 80010aa:	430b      	orrs	r3, r1
 80010ac:	6093      	str	r3, [r2, #8]
		}
		//Configurar SYSCFG
		SYSCFG_EN_CLK();
 80010ae:	4b38      	ldr	r3, [pc, #224]	; (8001190 <GPIO_Init+0x1a4>)
 80010b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80010b2:	4a37      	ldr	r2, [pc, #220]	; (8001190 <GPIO_Init+0x1a4>)
 80010b4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80010b8:	6453      	str	r3, [r2, #68]	; 0x44
		uint8_t regidx;
		uint8_t blkidx;

		regidx = pGPIOHandle->GPIO_config.GPIO_Pin / 4;/*pagina 198 recordar que 	se definio volatile uint32_t AFR[2];
 80010ba:	687b      	ldr	r3, [r7, #4]
 80010bc:	791b      	ldrb	r3, [r3, #4]
 80010be:	089b      	lsrs	r3, r3, #2
 80010c0:	73fb      	strb	r3, [r7, #15]
		por lo que l dividir el numero de pin entre 8 los pines de 0 a 7 darian 0 con lo cual actualizariamos el indice 0   * */
		blkidx = pGPIOHandle->GPIO_config.GPIO_Pin % 4;//y para los pines de 8 a 15 darian 1 con lo que se actualizaria el indice 1
 80010c2:	687b      	ldr	r3, [r7, #4]
 80010c4:	791b      	ldrb	r3, [r3, #4]
 80010c6:	f003 0303 	and.w	r3, r3, #3
 80010ca:	73bb      	strb	r3, [r7, #14]
		//para saber que grupo de pins actualizar se hace %8

		SYSCFG->EXTICR[regidx] &= ~(0x0f << (blkidx * 4));
 80010cc:	4a31      	ldr	r2, [pc, #196]	; (8001194 <GPIO_Init+0x1a8>)
 80010ce:	7bfb      	ldrb	r3, [r7, #15]
 80010d0:	3302      	adds	r3, #2
 80010d2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80010d6:	7bbb      	ldrb	r3, [r7, #14]
 80010d8:	009b      	lsls	r3, r3, #2
 80010da:	210f      	movs	r1, #15
 80010dc:	fa01 f303 	lsl.w	r3, r1, r3
 80010e0:	43db      	mvns	r3, r3
 80010e2:	4618      	mov	r0, r3
 80010e4:	492b      	ldr	r1, [pc, #172]	; (8001194 <GPIO_Init+0x1a8>)
 80010e6:	7bfb      	ldrb	r3, [r7, #15]
 80010e8:	4002      	ands	r2, r0
 80010ea:	3302      	adds	r3, #2
 80010ec:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		SYSCFG->EXTICR[regidx] |= (PORT_NUMBER(pGPIOHandle->pGPIOx) << (blkidx * 4));
 80010f0:	4a28      	ldr	r2, [pc, #160]	; (8001194 <GPIO_Init+0x1a8>)
 80010f2:	7bfb      	ldrb	r3, [r7, #15]
 80010f4:	3302      	adds	r3, #2
 80010f6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80010fa:	687b      	ldr	r3, [r7, #4]
 80010fc:	681b      	ldr	r3, [r3, #0]
 80010fe:	4926      	ldr	r1, [pc, #152]	; (8001198 <GPIO_Init+0x1ac>)
 8001100:	428b      	cmp	r3, r1
 8001102:	d02b      	beq.n	800115c <GPIO_Init+0x170>
 8001104:	687b      	ldr	r3, [r7, #4]
 8001106:	681b      	ldr	r3, [r3, #0]
 8001108:	4924      	ldr	r1, [pc, #144]	; (800119c <GPIO_Init+0x1b0>)
 800110a:	428b      	cmp	r3, r1
 800110c:	d024      	beq.n	8001158 <GPIO_Init+0x16c>
 800110e:	687b      	ldr	r3, [r7, #4]
 8001110:	681b      	ldr	r3, [r3, #0]
 8001112:	4923      	ldr	r1, [pc, #140]	; (80011a0 <GPIO_Init+0x1b4>)
 8001114:	428b      	cmp	r3, r1
 8001116:	d01d      	beq.n	8001154 <GPIO_Init+0x168>
 8001118:	687b      	ldr	r3, [r7, #4]
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	4921      	ldr	r1, [pc, #132]	; (80011a4 <GPIO_Init+0x1b8>)
 800111e:	428b      	cmp	r3, r1
 8001120:	d016      	beq.n	8001150 <GPIO_Init+0x164>
 8001122:	687b      	ldr	r3, [r7, #4]
 8001124:	681b      	ldr	r3, [r3, #0]
 8001126:	4920      	ldr	r1, [pc, #128]	; (80011a8 <GPIO_Init+0x1bc>)
 8001128:	428b      	cmp	r3, r1
 800112a:	d00f      	beq.n	800114c <GPIO_Init+0x160>
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	681b      	ldr	r3, [r3, #0]
 8001130:	491e      	ldr	r1, [pc, #120]	; (80011ac <GPIO_Init+0x1c0>)
 8001132:	428b      	cmp	r3, r1
 8001134:	d008      	beq.n	8001148 <GPIO_Init+0x15c>
 8001136:	687b      	ldr	r3, [r7, #4]
 8001138:	681b      	ldr	r3, [r3, #0]
 800113a:	491d      	ldr	r1, [pc, #116]	; (80011b0 <GPIO_Init+0x1c4>)
 800113c:	428b      	cmp	r3, r1
 800113e:	d101      	bne.n	8001144 <GPIO_Init+0x158>
 8001140:	2306      	movs	r3, #6
 8001142:	e00c      	b.n	800115e <GPIO_Init+0x172>
 8001144:	2307      	movs	r3, #7
 8001146:	e00a      	b.n	800115e <GPIO_Init+0x172>
 8001148:	2305      	movs	r3, #5
 800114a:	e008      	b.n	800115e <GPIO_Init+0x172>
 800114c:	2304      	movs	r3, #4
 800114e:	e006      	b.n	800115e <GPIO_Init+0x172>
 8001150:	2303      	movs	r3, #3
 8001152:	e004      	b.n	800115e <GPIO_Init+0x172>
 8001154:	2302      	movs	r3, #2
 8001156:	e002      	b.n	800115e <GPIO_Init+0x172>
 8001158:	2301      	movs	r3, #1
 800115a:	e000      	b.n	800115e <GPIO_Init+0x172>
 800115c:	2300      	movs	r3, #0
 800115e:	7bb9      	ldrb	r1, [r7, #14]
 8001160:	0089      	lsls	r1, r1, #2
 8001162:	408b      	lsls	r3, r1
 8001164:	4618      	mov	r0, r3
 8001166:	490b      	ldr	r1, [pc, #44]	; (8001194 <GPIO_Init+0x1a8>)
 8001168:	7bfb      	ldrb	r3, [r7, #15]
 800116a:	4302      	orrs	r2, r0
 800116c:	3302      	adds	r3, #2
 800116e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		//Habilitar la interrupcion EXTI
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_config.GPIO_Pin);
 8001172:	4b06      	ldr	r3, [pc, #24]	; (800118c <GPIO_Init+0x1a0>)
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	687a      	ldr	r2, [r7, #4]
 8001178:	7912      	ldrb	r2, [r2, #4]
 800117a:	4611      	mov	r1, r2
 800117c:	2201      	movs	r2, #1
 800117e:	408a      	lsls	r2, r1
 8001180:	4611      	mov	r1, r2
 8001182:	4a02      	ldr	r2, [pc, #8]	; (800118c <GPIO_Init+0x1a0>)
 8001184:	430b      	orrs	r3, r1
 8001186:	6013      	str	r3, [r2, #0]
 8001188:	e033      	b.n	80011f2 <GPIO_Init+0x206>
 800118a:	bf00      	nop
 800118c:	40013c00 	.word	0x40013c00
 8001190:	40023800 	.word	0x40023800
 8001194:	40013800 	.word	0x40013800
 8001198:	40020000 	.word	0x40020000
 800119c:	40020400 	.word	0x40020400
 80011a0:	40020800 	.word	0x40020800
 80011a4:	40020c00 	.word	0x40020c00
 80011a8:	40021000 	.word	0x40021000
 80011ac:	40021400 	.word	0x40021400
 80011b0:	40021800 	.word	0x40021800

	}else{
		//Modo sin interrupcion
		pGPIOHandle->pGPIOx->MODER &= ~(0x03 << (pGPIOHandle->GPIO_config.GPIO_Pin * 2));
 80011b4:	687b      	ldr	r3, [r7, #4]
 80011b6:	681b      	ldr	r3, [r3, #0]
 80011b8:	681a      	ldr	r2, [r3, #0]
 80011ba:	687b      	ldr	r3, [r7, #4]
 80011bc:	791b      	ldrb	r3, [r3, #4]
 80011be:	005b      	lsls	r3, r3, #1
 80011c0:	2103      	movs	r1, #3
 80011c2:	fa01 f303 	lsl.w	r3, r1, r3
 80011c6:	43db      	mvns	r3, r3
 80011c8:	4619      	mov	r1, r3
 80011ca:	687b      	ldr	r3, [r7, #4]
 80011cc:	681b      	ldr	r3, [r3, #0]
 80011ce:	400a      	ands	r2, r1
 80011d0:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= (pGPIOHandle->GPIO_config.GPIO_Mode << (pGPIOHandle->GPIO_config.GPIO_Pin * 2));
 80011d2:	687b      	ldr	r3, [r7, #4]
 80011d4:	681b      	ldr	r3, [r3, #0]
 80011d6:	681a      	ldr	r2, [r3, #0]
 80011d8:	687b      	ldr	r3, [r7, #4]
 80011da:	795b      	ldrb	r3, [r3, #5]
 80011dc:	4619      	mov	r1, r3
 80011de:	687b      	ldr	r3, [r7, #4]
 80011e0:	791b      	ldrb	r3, [r3, #4]
 80011e2:	005b      	lsls	r3, r3, #1
 80011e4:	fa01 f303 	lsl.w	r3, r1, r3
 80011e8:	4619      	mov	r1, r3
 80011ea:	687b      	ldr	r3, [r7, #4]
 80011ec:	681b      	ldr	r3, [r3, #0]
 80011ee:	430a      	orrs	r2, r1
 80011f0:	601a      	str	r2, [r3, #0]
	}
	// 3. COnfigurar speed
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x03 << (pGPIOHandle->GPIO_config.GPIO_Pin * 2));
 80011f2:	687b      	ldr	r3, [r7, #4]
 80011f4:	681b      	ldr	r3, [r3, #0]
 80011f6:	689a      	ldr	r2, [r3, #8]
 80011f8:	687b      	ldr	r3, [r7, #4]
 80011fa:	791b      	ldrb	r3, [r3, #4]
 80011fc:	005b      	lsls	r3, r3, #1
 80011fe:	2103      	movs	r1, #3
 8001200:	fa01 f303 	lsl.w	r3, r1, r3
 8001204:	43db      	mvns	r3, r3
 8001206:	4619      	mov	r1, r3
 8001208:	687b      	ldr	r3, [r7, #4]
 800120a:	681b      	ldr	r3, [r3, #0]
 800120c:	400a      	ands	r2, r1
 800120e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= (pGPIOHandle->GPIO_config.GPIO_Speed << (pGPIOHandle->GPIO_config.GPIO_Pin * 2));
 8001210:	687b      	ldr	r3, [r7, #4]
 8001212:	681b      	ldr	r3, [r3, #0]
 8001214:	689a      	ldr	r2, [r3, #8]
 8001216:	687b      	ldr	r3, [r7, #4]
 8001218:	799b      	ldrb	r3, [r3, #6]
 800121a:	4619      	mov	r1, r3
 800121c:	687b      	ldr	r3, [r7, #4]
 800121e:	791b      	ldrb	r3, [r3, #4]
 8001220:	005b      	lsls	r3, r3, #1
 8001222:	fa01 f303 	lsl.w	r3, r1, r3
 8001226:	4619      	mov	r1, r3
 8001228:	687b      	ldr	r3, [r7, #4]
 800122a:	681b      	ldr	r3, [r3, #0]
 800122c:	430a      	orrs	r2, r1
 800122e:	609a      	str	r2, [r3, #8]

	// 4. Configurar pull-up/pull-down
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x03 << (pGPIOHandle->GPIO_config.GPIO_Pin * 2));
 8001230:	687b      	ldr	r3, [r7, #4]
 8001232:	681b      	ldr	r3, [r3, #0]
 8001234:	68da      	ldr	r2, [r3, #12]
 8001236:	687b      	ldr	r3, [r7, #4]
 8001238:	791b      	ldrb	r3, [r3, #4]
 800123a:	005b      	lsls	r3, r3, #1
 800123c:	2103      	movs	r1, #3
 800123e:	fa01 f303 	lsl.w	r3, r1, r3
 8001242:	43db      	mvns	r3, r3
 8001244:	4619      	mov	r1, r3
 8001246:	687b      	ldr	r3, [r7, #4]
 8001248:	681b      	ldr	r3, [r3, #0]
 800124a:	400a      	ands	r2, r1
 800124c:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= (pGPIOHandle->GPIO_config.GPIO_PuPd << (pGPIOHandle->GPIO_config.GPIO_Pin * 2));
 800124e:	687b      	ldr	r3, [r7, #4]
 8001250:	681b      	ldr	r3, [r3, #0]
 8001252:	68da      	ldr	r2, [r3, #12]
 8001254:	687b      	ldr	r3, [r7, #4]
 8001256:	79db      	ldrb	r3, [r3, #7]
 8001258:	4619      	mov	r1, r3
 800125a:	687b      	ldr	r3, [r7, #4]
 800125c:	791b      	ldrb	r3, [r3, #4]
 800125e:	005b      	lsls	r3, r3, #1
 8001260:	fa01 f303 	lsl.w	r3, r1, r3
 8001264:	4619      	mov	r1, r3
 8001266:	687b      	ldr	r3, [r7, #4]
 8001268:	681b      	ldr	r3, [r3, #0]
 800126a:	430a      	orrs	r2, r1
 800126c:	60da      	str	r2, [r3, #12]

	// 5. Configurar tipo de salida (Push-Pull/Open drain)
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x01 << pGPIOHandle->GPIO_config.GPIO_Pin);
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	681b      	ldr	r3, [r3, #0]
 8001272:	685a      	ldr	r2, [r3, #4]
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	791b      	ldrb	r3, [r3, #4]
 8001278:	4619      	mov	r1, r3
 800127a:	2301      	movs	r3, #1
 800127c:	408b      	lsls	r3, r1
 800127e:	43db      	mvns	r3, r3
 8001280:	4619      	mov	r1, r3
 8001282:	687b      	ldr	r3, [r7, #4]
 8001284:	681b      	ldr	r3, [r3, #0]
 8001286:	400a      	ands	r2, r1
 8001288:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= (pGPIOHandle->GPIO_config.GPIO_OType << pGPIOHandle->GPIO_config.GPIO_Pin);
 800128a:	687b      	ldr	r3, [r7, #4]
 800128c:	681b      	ldr	r3, [r3, #0]
 800128e:	685a      	ldr	r2, [r3, #4]
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	7a1b      	ldrb	r3, [r3, #8]
 8001294:	4619      	mov	r1, r3
 8001296:	687b      	ldr	r3, [r7, #4]
 8001298:	791b      	ldrb	r3, [r3, #4]
 800129a:	fa01 f303 	lsl.w	r3, r1, r3
 800129e:	4619      	mov	r1, r3
 80012a0:	687b      	ldr	r3, [r7, #4]
 80012a2:	681b      	ldr	r3, [r3, #0]
 80012a4:	430a      	orrs	r2, r1
 80012a6:	605a      	str	r2, [r3, #4]

	// 6. Configurar funcion alternativa
	if(pGPIOHandle->GPIO_config.GPIO_Mode == GPIO_Mode_AF){
 80012a8:	687b      	ldr	r3, [r7, #4]
 80012aa:	795b      	ldrb	r3, [r3, #5]
 80012ac:	2b02      	cmp	r3, #2
 80012ae:	d131      	bne.n	8001314 <GPIO_Init+0x328>
		uint8_t regidx;
		uint8_t blkidx;

		regidx = pGPIOHandle->GPIO_config.GPIO_AltFun / 8;/*pagina 198 recordar que 	se definio volatile uint32_t AFR[2];
 80012b0:	687b      	ldr	r3, [r7, #4]
 80012b2:	7a5b      	ldrb	r3, [r3, #9]
 80012b4:	08db      	lsrs	r3, r3, #3
 80012b6:	737b      	strb	r3, [r7, #13]
		por lo que l dividir el numero de pin entre 8 los pines de 0 a 7 darian 0 con lo cual actualizariamos el indice 0   * */
		blkidx = pGPIOHandle->GPIO_config.GPIO_AltFun % 8;//y para los pines de 8 a 15 darian 1 con lo que se actualizaria el indice 1
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	7a5b      	ldrb	r3, [r3, #9]
 80012bc:	f003 0307 	and.w	r3, r3, #7
 80012c0:	733b      	strb	r3, [r7, #12]
		//para saber que grupo de pins actualizar se hace %8

		pGPIOHandle->pGPIOx->AFR[regidx] &= ~(0x0f << (blkidx * 4));
 80012c2:	687b      	ldr	r3, [r7, #4]
 80012c4:	681b      	ldr	r3, [r3, #0]
 80012c6:	7b7a      	ldrb	r2, [r7, #13]
 80012c8:	3208      	adds	r2, #8
 80012ca:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80012ce:	7b3b      	ldrb	r3, [r7, #12]
 80012d0:	009b      	lsls	r3, r3, #2
 80012d2:	220f      	movs	r2, #15
 80012d4:	fa02 f303 	lsl.w	r3, r2, r3
 80012d8:	43db      	mvns	r3, r3
 80012da:	4618      	mov	r0, r3
 80012dc:	687b      	ldr	r3, [r7, #4]
 80012de:	681b      	ldr	r3, [r3, #0]
 80012e0:	7b7a      	ldrb	r2, [r7, #13]
 80012e2:	4001      	ands	r1, r0
 80012e4:	3208      	adds	r2, #8
 80012e6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[regidx] |= (pGPIOHandle->GPIO_config.GPIO_AltFun << (blkidx * 4));
 80012ea:	687b      	ldr	r3, [r7, #4]
 80012ec:	681b      	ldr	r3, [r3, #0]
 80012ee:	7b7a      	ldrb	r2, [r7, #13]
 80012f0:	3208      	adds	r2, #8
 80012f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80012f6:	687b      	ldr	r3, [r7, #4]
 80012f8:	7a5b      	ldrb	r3, [r3, #9]
 80012fa:	461a      	mov	r2, r3
 80012fc:	7b3b      	ldrb	r3, [r7, #12]
 80012fe:	009b      	lsls	r3, r3, #2
 8001300:	fa02 f303 	lsl.w	r3, r2, r3
 8001304:	4618      	mov	r0, r3
 8001306:	687b      	ldr	r3, [r7, #4]
 8001308:	681b      	ldr	r3, [r3, #0]
 800130a:	7b7a      	ldrb	r2, [r7, #13]
 800130c:	4301      	orrs	r1, r0
 800130e:	3208      	adds	r2, #8
 8001310:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8001314:	bf00      	nop
 8001316:	3710      	adds	r7, #16
 8001318:	46bd      	mov	sp, r7
 800131a:	bd80      	pop	{r7, pc}

0800131c <GPIO_ReadPin>:
	else if(pGPIOx == GPIOH)
		GPIOH_RESET();
}

uint8_t GPIO_ReadPin(GPIO_RegDef_t *pGPIOx, GPIO_Pin_t pin)
{
 800131c:	b480      	push	{r7}
 800131e:	b083      	sub	sp, #12
 8001320:	af00      	add	r7, sp, #0
 8001322:	6078      	str	r0, [r7, #4]
 8001324:	460b      	mov	r3, r1
 8001326:	70fb      	strb	r3, [r7, #3]
	return (uint8_t)((pGPIOx->IDR >> pin) & 0x01);; //IDR devuelve el puerto compleo empleando [>>pin] se recorre el numero de pines hasta el pin deseado
 8001328:	687b      	ldr	r3, [r7, #4]
 800132a:	691a      	ldr	r2, [r3, #16]
 800132c:	78fb      	ldrb	r3, [r7, #3]
 800132e:	fa22 f303 	lsr.w	r3, r2, r3
 8001332:	b2db      	uxtb	r3, r3
 8001334:	f003 0301 	and.w	r3, r3, #1
 8001338:	b2db      	uxtb	r3, r3
}												 //el el valor ahora se inicia en el la casilla cero se hace un and con 1 y las demas casillas de vuelven 0
 800133a:	4618      	mov	r0, r3
 800133c:	370c      	adds	r7, #12
 800133e:	46bd      	mov	sp, r7
 8001340:	bc80      	pop	{r7}
 8001342:	4770      	bx	lr

08001344 <GPIO_WritePin>:
{
	return (uint16_t)(pGPIOx->IDR & 0xFFFF);// El puerto es de 32 por lo que se hace una mascara a 16bits con 0xFFFF
}

void GPIO_WritePin(GPIO_RegDef_t *pGPIOx, GPIO_Pin_t pin, uint8_t value)
{
 8001344:	b480      	push	{r7}
 8001346:	b083      	sub	sp, #12
 8001348:	af00      	add	r7, sp, #0
 800134a:	6078      	str	r0, [r7, #4]
 800134c:	460b      	mov	r3, r1
 800134e:	70fb      	strb	r3, [r7, #3]
 8001350:	4613      	mov	r3, r2
 8001352:	70bb      	strb	r3, [r7, #2]
	if(value == SET){
 8001354:	78bb      	ldrb	r3, [r7, #2]
 8001356:	2b01      	cmp	r3, #1
 8001358:	d109      	bne.n	800136e <GPIO_WritePin+0x2a>
		pGPIOx->ODR |= (1 << pin);
 800135a:	687b      	ldr	r3, [r7, #4]
 800135c:	695b      	ldr	r3, [r3, #20]
 800135e:	78fa      	ldrb	r2, [r7, #3]
 8001360:	2101      	movs	r1, #1
 8001362:	fa01 f202 	lsl.w	r2, r1, r2
 8001366:	431a      	orrs	r2, r3
 8001368:	687b      	ldr	r3, [r7, #4]
 800136a:	615a      	str	r2, [r3, #20]
	}else if(value == RESET){
		pGPIOx->ODR &= ~(1 << pin);
	}
}
 800136c:	e00c      	b.n	8001388 <GPIO_WritePin+0x44>
	}else if(value == RESET){
 800136e:	78bb      	ldrb	r3, [r7, #2]
 8001370:	2b00      	cmp	r3, #0
 8001372:	d109      	bne.n	8001388 <GPIO_WritePin+0x44>
		pGPIOx->ODR &= ~(1 << pin);
 8001374:	687b      	ldr	r3, [r7, #4]
 8001376:	695b      	ldr	r3, [r3, #20]
 8001378:	78fa      	ldrb	r2, [r7, #3]
 800137a:	2101      	movs	r1, #1
 800137c:	fa01 f202 	lsl.w	r2, r1, r2
 8001380:	43d2      	mvns	r2, r2
 8001382:	401a      	ands	r2, r3
 8001384:	687b      	ldr	r3, [r7, #4]
 8001386:	615a      	str	r2, [r3, #20]
}
 8001388:	bf00      	nop
 800138a:	370c      	adds	r7, #12
 800138c:	46bd      	mov	sp, r7
 800138e:	bc80      	pop	{r7}
 8001390:	4770      	bx	lr
	...

08001394 <SYSTICK_Init>:

#include "stm32f446xx_systick.h"


void SYSTICK_Init(SYSTICK_Config_t *SYSTICK_config)
{
 8001394:	b580      	push	{r7, lr}
 8001396:	b082      	sub	sp, #8
 8001398:	af00      	add	r7, sp, #0
 800139a:	6078      	str	r0, [r7, #4]
	SYSTICK_Cmd(DISABLE);
 800139c:	2000      	movs	r0, #0
 800139e:	f000 f81d 	bl	80013dc <SYSTICK_Cmd>
	SYSTICK->CSR &= (1 << SYSTICK_CSR_CLKSOURCE);
 80013a2:	4b0d      	ldr	r3, [pc, #52]	; (80013d8 <SYSTICK_Init+0x44>)
 80013a4:	681b      	ldr	r3, [r3, #0]
 80013a6:	4a0c      	ldr	r2, [pc, #48]	; (80013d8 <SYSTICK_Init+0x44>)
 80013a8:	f003 0304 	and.w	r3, r3, #4
 80013ac:	6013      	str	r3, [r2, #0]
	SYSTICK->CSR |= (SYSTICK_config->SYSTICK_Clock_Source << SYSTICK_CSR_CLKSOURCE);
 80013ae:	4b0a      	ldr	r3, [pc, #40]	; (80013d8 <SYSTICK_Init+0x44>)
 80013b0:	681b      	ldr	r3, [r3, #0]
 80013b2:	687a      	ldr	r2, [r7, #4]
 80013b4:	7912      	ldrb	r2, [r2, #4]
 80013b6:	0092      	lsls	r2, r2, #2
 80013b8:	4611      	mov	r1, r2
 80013ba:	4a07      	ldr	r2, [pc, #28]	; (80013d8 <SYSTICK_Init+0x44>)
 80013bc:	430b      	orrs	r3, r1
 80013be:	6013      	str	r3, [r2, #0]
	SYSTICK->RVR = SYSTICK_config->SYSTICK_Period;
 80013c0:	4a05      	ldr	r2, [pc, #20]	; (80013d8 <SYSTICK_Init+0x44>)
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	681b      	ldr	r3, [r3, #0]
 80013c6:	6053      	str	r3, [r2, #4]
	SYSTICK->CVR = 0;
 80013c8:	4b03      	ldr	r3, [pc, #12]	; (80013d8 <SYSTICK_Init+0x44>)
 80013ca:	2200      	movs	r2, #0
 80013cc:	609a      	str	r2, [r3, #8]
}
 80013ce:	bf00      	nop
 80013d0:	3708      	adds	r7, #8
 80013d2:	46bd      	mov	sp, r7
 80013d4:	bd80      	pop	{r7, pc}
 80013d6:	bf00      	nop
 80013d8:	e000e010 	.word	0xe000e010

080013dc <SYSTICK_Cmd>:

void SYSTICK_Cmd(uint8_t status)
{
 80013dc:	b480      	push	{r7}
 80013de:	b083      	sub	sp, #12
 80013e0:	af00      	add	r7, sp, #0
 80013e2:	4603      	mov	r3, r0
 80013e4:	71fb      	strb	r3, [r7, #7]
	if(status == ENABLE){
 80013e6:	79fb      	ldrb	r3, [r7, #7]
 80013e8:	2b01      	cmp	r3, #1
 80013ea:	d106      	bne.n	80013fa <SYSTICK_Cmd+0x1e>
		SYSTICK->CSR |= (1 << SYSTICK_CSR_ENABLE);
 80013ec:	4b0a      	ldr	r3, [pc, #40]	; (8001418 <SYSTICK_Cmd+0x3c>)
 80013ee:	681b      	ldr	r3, [r3, #0]
 80013f0:	4a09      	ldr	r2, [pc, #36]	; (8001418 <SYSTICK_Cmd+0x3c>)
 80013f2:	f043 0301 	orr.w	r3, r3, #1
 80013f6:	6013      	str	r3, [r2, #0]
	}else if(status == DISABLE){
		SYSTICK->CSR &= ~(1 << SYSTICK_CSR_ENABLE);
	}
}
 80013f8:	e008      	b.n	800140c <SYSTICK_Cmd+0x30>
	}else if(status == DISABLE){
 80013fa:	79fb      	ldrb	r3, [r7, #7]
 80013fc:	2b00      	cmp	r3, #0
 80013fe:	d105      	bne.n	800140c <SYSTICK_Cmd+0x30>
		SYSTICK->CSR &= ~(1 << SYSTICK_CSR_ENABLE);
 8001400:	4b05      	ldr	r3, [pc, #20]	; (8001418 <SYSTICK_Cmd+0x3c>)
 8001402:	681b      	ldr	r3, [r3, #0]
 8001404:	4a04      	ldr	r2, [pc, #16]	; (8001418 <SYSTICK_Cmd+0x3c>)
 8001406:	f023 0301 	bic.w	r3, r3, #1
 800140a:	6013      	str	r3, [r2, #0]
}
 800140c:	bf00      	nop
 800140e:	370c      	adds	r7, #12
 8001410:	46bd      	mov	sp, r7
 8001412:	bc80      	pop	{r7}
 8001414:	4770      	bx	lr
 8001416:	bf00      	nop
 8001418:	e000e010 	.word	0xe000e010

0800141c <SYSTICK_ITConfig>:

void SYSTICK_ITConfig(uint8_t status)
{
 800141c:	b480      	push	{r7}
 800141e:	b083      	sub	sp, #12
 8001420:	af00      	add	r7, sp, #0
 8001422:	4603      	mov	r3, r0
 8001424:	71fb      	strb	r3, [r7, #7]
	if(status == ENABLE){
 8001426:	79fb      	ldrb	r3, [r7, #7]
 8001428:	2b01      	cmp	r3, #1
 800142a:	d106      	bne.n	800143a <SYSTICK_ITConfig+0x1e>
		SYSTICK->CSR |= (1 << SYSTICK_CSR_TICKINT);
 800142c:	4b0a      	ldr	r3, [pc, #40]	; (8001458 <SYSTICK_ITConfig+0x3c>)
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	4a09      	ldr	r2, [pc, #36]	; (8001458 <SYSTICK_ITConfig+0x3c>)
 8001432:	f043 0302 	orr.w	r3, r3, #2
 8001436:	6013      	str	r3, [r2, #0]
	}else if(status == DISABLE){
		SYSTICK->CSR &= ~(1 << SYSTICK_CSR_TICKINT);
	}
}
 8001438:	e008      	b.n	800144c <SYSTICK_ITConfig+0x30>
	}else if(status == DISABLE){
 800143a:	79fb      	ldrb	r3, [r7, #7]
 800143c:	2b00      	cmp	r3, #0
 800143e:	d105      	bne.n	800144c <SYSTICK_ITConfig+0x30>
		SYSTICK->CSR &= ~(1 << SYSTICK_CSR_TICKINT);
 8001440:	4b05      	ldr	r3, [pc, #20]	; (8001458 <SYSTICK_ITConfig+0x3c>)
 8001442:	681b      	ldr	r3, [r3, #0]
 8001444:	4a04      	ldr	r2, [pc, #16]	; (8001458 <SYSTICK_ITConfig+0x3c>)
 8001446:	f023 0302 	bic.w	r3, r3, #2
 800144a:	6013      	str	r3, [r2, #0]
}
 800144c:	bf00      	nop
 800144e:	370c      	adds	r7, #12
 8001450:	46bd      	mov	sp, r7
 8001452:	bc80      	pop	{r7}
 8001454:	4770      	bx	lr
 8001456:	bf00      	nop
 8001458:	e000e010 	.word	0xe000e010

0800145c <SYSTICK_GetCalib>:
{
	return ((SYSTICK->CSR & (1 << SYSTICK_CSR_COUNTFLAG)) != 0);
}

uint32_t SYSTICK_GetCalib(void)
{
 800145c:	b480      	push	{r7}
 800145e:	af00      	add	r7, sp, #0
	return SYSTICK->CALIB;
 8001460:	4b02      	ldr	r3, [pc, #8]	; (800146c <SYSTICK_GetCalib+0x10>)
 8001462:	68db      	ldr	r3, [r3, #12]
}
 8001464:	4618      	mov	r0, r3
 8001466:	46bd      	mov	sp, r7
 8001468:	bc80      	pop	{r7}
 800146a:	4770      	bx	lr
 800146c:	e000e010 	.word	0xe000e010

08001470 <WWDG_Init>:

#include "stm32f446xx_wwdg.h"

void WWDG_Init(WWDG_Config_t *WWDG_Config)
{
 8001470:	b480      	push	{r7}
 8001472:	b085      	sub	sp, #20
 8001474:	af00      	add	r7, sp, #0
 8001476:	6078      	str	r0, [r7, #4]
	uint32_t temp_reg;

	// Habilitar clock
	WWDG_EN_CLK();
 8001478:	4b1e      	ldr	r3, [pc, #120]	; (80014f4 <WWDG_Init+0x84>)
 800147a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800147c:	4a1d      	ldr	r2, [pc, #116]	; (80014f4 <WWDG_Init+0x84>)
 800147e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8001482:	6413      	str	r3, [r2, #64]	; 0x40

	// Set prescaler
	temp_reg = WWDG->CFR;
 8001484:	4b1c      	ldr	r3, [pc, #112]	; (80014f8 <WWDG_Init+0x88>)
 8001486:	685b      	ldr	r3, [r3, #4]
 8001488:	60fb      	str	r3, [r7, #12]
	temp_reg &= ~(0x03 << WWDG_CFR_WDGTB);
 800148a:	68fb      	ldr	r3, [r7, #12]
 800148c:	f423 73c0 	bic.w	r3, r3, #384	; 0x180
 8001490:	60fb      	str	r3, [r7, #12]
	temp_reg |= WWDG_Config->WWDG_Prescaler << WWDG_CFR_WDGTB;
 8001492:	687b      	ldr	r3, [r7, #4]
 8001494:	781b      	ldrb	r3, [r3, #0]
 8001496:	01db      	lsls	r3, r3, #7
 8001498:	461a      	mov	r2, r3
 800149a:	68fb      	ldr	r3, [r7, #12]
 800149c:	4313      	orrs	r3, r2
 800149e:	60fb      	str	r3, [r7, #12]
	WWDG->CFR = temp_reg;
 80014a0:	4a15      	ldr	r2, [pc, #84]	; (80014f8 <WWDG_Init+0x88>)
 80014a2:	68fb      	ldr	r3, [r7, #12]
 80014a4:	6053      	str	r3, [r2, #4]

	// Set counter
	temp_reg = WWDG->CR;
 80014a6:	4b14      	ldr	r3, [pc, #80]	; (80014f8 <WWDG_Init+0x88>)
 80014a8:	681b      	ldr	r3, [r3, #0]
 80014aa:	60fb      	str	r3, [r7, #12]
	temp_reg &= ~0x7F;
 80014ac:	68fb      	ldr	r3, [r7, #12]
 80014ae:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 80014b2:	60fb      	str	r3, [r7, #12]
	temp_reg |= WWDG_Config->WWDG_Counter & 0x7F;
 80014b4:	687b      	ldr	r3, [r7, #4]
 80014b6:	785b      	ldrb	r3, [r3, #1]
 80014b8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80014bc:	68fa      	ldr	r2, [r7, #12]
 80014be:	4313      	orrs	r3, r2
 80014c0:	60fb      	str	r3, [r7, #12]
	WWDG->CR = temp_reg;
 80014c2:	4a0d      	ldr	r2, [pc, #52]	; (80014f8 <WWDG_Init+0x88>)
 80014c4:	68fb      	ldr	r3, [r7, #12]
 80014c6:	6013      	str	r3, [r2, #0]

	// Set window
	temp_reg = WWDG->CFR;
 80014c8:	4b0b      	ldr	r3, [pc, #44]	; (80014f8 <WWDG_Init+0x88>)
 80014ca:	685b      	ldr	r3, [r3, #4]
 80014cc:	60fb      	str	r3, [r7, #12]
	temp_reg &= ~0x7F;
 80014ce:	68fb      	ldr	r3, [r7, #12]
 80014d0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 80014d4:	60fb      	str	r3, [r7, #12]
	temp_reg |= WWDG_Config->WWDG_Window & 0x7F;
 80014d6:	687b      	ldr	r3, [r7, #4]
 80014d8:	789b      	ldrb	r3, [r3, #2]
 80014da:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80014de:	68fa      	ldr	r2, [r7, #12]
 80014e0:	4313      	orrs	r3, r2
 80014e2:	60fb      	str	r3, [r7, #12]
	WWDG->CFR = temp_reg;
 80014e4:	4a04      	ldr	r2, [pc, #16]	; (80014f8 <WWDG_Init+0x88>)
 80014e6:	68fb      	ldr	r3, [r7, #12]
 80014e8:	6053      	str	r3, [r2, #4]
}
 80014ea:	bf00      	nop
 80014ec:	3714      	adds	r7, #20
 80014ee:	46bd      	mov	sp, r7
 80014f0:	bc80      	pop	{r7}
 80014f2:	4770      	bx	lr
 80014f4:	40023800 	.word	0x40023800
 80014f8:	40002c00 	.word	0x40002c00

080014fc <WWDG_cmd>:
{
	WWDG_RESET();
}

void WWDG_cmd(uint8_t status)
{
 80014fc:	b480      	push	{r7}
 80014fe:	b083      	sub	sp, #12
 8001500:	af00      	add	r7, sp, #0
 8001502:	4603      	mov	r3, r0
 8001504:	71fb      	strb	r3, [r7, #7]
	if(status == ENABLE){
 8001506:	79fb      	ldrb	r3, [r7, #7]
 8001508:	2b01      	cmp	r3, #1
 800150a:	d106      	bne.n	800151a <WWDG_cmd+0x1e>
		WWDG->CR |= (1 << WWDG_CR_WDGA);
 800150c:	4b0a      	ldr	r3, [pc, #40]	; (8001538 <WWDG_cmd+0x3c>)
 800150e:	681b      	ldr	r3, [r3, #0]
 8001510:	4a09      	ldr	r2, [pc, #36]	; (8001538 <WWDG_cmd+0x3c>)
 8001512:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001516:	6013      	str	r3, [r2, #0]
	}else if(status == DISABLE){
		WWDG->CR &= ~(1 << WWDG_CR_WDGA);
	}
}
 8001518:	e008      	b.n	800152c <WWDG_cmd+0x30>
	}else if(status == DISABLE){
 800151a:	79fb      	ldrb	r3, [r7, #7]
 800151c:	2b00      	cmp	r3, #0
 800151e:	d105      	bne.n	800152c <WWDG_cmd+0x30>
		WWDG->CR &= ~(1 << WWDG_CR_WDGA);
 8001520:	4b05      	ldr	r3, [pc, #20]	; (8001538 <WWDG_cmd+0x3c>)
 8001522:	681b      	ldr	r3, [r3, #0]
 8001524:	4a04      	ldr	r2, [pc, #16]	; (8001538 <WWDG_cmd+0x3c>)
 8001526:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800152a:	6013      	str	r3, [r2, #0]
}
 800152c:	bf00      	nop
 800152e:	370c      	adds	r7, #12
 8001530:	46bd      	mov	sp, r7
 8001532:	bc80      	pop	{r7}
 8001534:	4770      	bx	lr
 8001536:	bf00      	nop
 8001538:	40002c00 	.word	0x40002c00

0800153c <WWDG_Refresh>:

void WWDG_Refresh(WWDG_Config_t *WWDG_Config)
{
 800153c:	b480      	push	{r7}
 800153e:	b085      	sub	sp, #20
 8001540:	af00      	add	r7, sp, #0
 8001542:	6078      	str	r0, [r7, #4]
	uint32_t temp_reg;
	temp_reg = WWDG->CR;
 8001544:	4b0a      	ldr	r3, [pc, #40]	; (8001570 <WWDG_Refresh+0x34>)
 8001546:	681b      	ldr	r3, [r3, #0]
 8001548:	60fb      	str	r3, [r7, #12]

	temp_reg &= ~0x7F;
 800154a:	68fb      	ldr	r3, [r7, #12]
 800154c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8001550:	60fb      	str	r3, [r7, #12]
	temp_reg |= WWDG_Config->WWDG_Counter & 0x7F;
 8001552:	687b      	ldr	r3, [r7, #4]
 8001554:	785b      	ldrb	r3, [r3, #1]
 8001556:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800155a:	68fa      	ldr	r2, [r7, #12]
 800155c:	4313      	orrs	r3, r2
 800155e:	60fb      	str	r3, [r7, #12]

	WWDG->CR = temp_reg;
 8001560:	4a03      	ldr	r2, [pc, #12]	; (8001570 <WWDG_Refresh+0x34>)
 8001562:	68fb      	ldr	r3, [r7, #12]
 8001564:	6013      	str	r3, [r2, #0]
}
 8001566:	bf00      	nop
 8001568:	3714      	adds	r7, #20
 800156a:	46bd      	mov	sp, r7
 800156c:	bc80      	pop	{r7}
 800156e:	4770      	bx	lr
 8001570:	40002c00 	.word	0x40002c00

08001574 <delay_ms>:
void SYSCLK_PLL_setup(void);
void min11max25(uint8_t val);
void generate_fault(void);

void delay_ms(uint32_t ms)
{
 8001574:	b480      	push	{r7}
 8001576:	b083      	sub	sp, #12
 8001578:	af00      	add	r7, sp, #0
 800157a:	6078      	str	r0, [r7, #4]
	systick_delay = ms;
 800157c:	4a06      	ldr	r2, [pc, #24]	; (8001598 <delay_ms+0x24>)
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	6013      	str	r3, [r2, #0]
	while(systick_delay);
 8001582:	bf00      	nop
 8001584:	4b04      	ldr	r3, [pc, #16]	; (8001598 <delay_ms+0x24>)
 8001586:	681b      	ldr	r3, [r3, #0]
 8001588:	2b00      	cmp	r3, #0
 800158a:	d1fb      	bne.n	8001584 <delay_ms+0x10>
}
 800158c:	bf00      	nop
 800158e:	bf00      	nop
 8001590:	370c      	adds	r7, #12
 8001592:	46bd      	mov	sp, r7
 8001594:	bc80      	pop	{r7}
 8001596:	4770      	bx	lr
 8001598:	20000204 	.word	0x20000204

0800159c <SysTick_Handler>:

void SysTick_Handler(void)
{
 800159c:	b480      	push	{r7}
 800159e:	af00      	add	r7, sp, #0
	if(systick_delay > 0)
 80015a0:	4b06      	ldr	r3, [pc, #24]	; (80015bc <SysTick_Handler+0x20>)
 80015a2:	681b      	ldr	r3, [r3, #0]
 80015a4:	2b00      	cmp	r3, #0
 80015a6:	d004      	beq.n	80015b2 <SysTick_Handler+0x16>
		systick_delay--;
 80015a8:	4b04      	ldr	r3, [pc, #16]	; (80015bc <SysTick_Handler+0x20>)
 80015aa:	681b      	ldr	r3, [r3, #0]
 80015ac:	3b01      	subs	r3, #1
 80015ae:	4a03      	ldr	r2, [pc, #12]	; (80015bc <SysTick_Handler+0x20>)
 80015b0:	6013      	str	r3, [r2, #0]
}
 80015b2:	bf00      	nop
 80015b4:	46bd      	mov	sp, r7
 80015b6:	bc80      	pop	{r7}
 80015b8:	4770      	bx	lr
 80015ba:	bf00      	nop
 80015bc:	20000204 	.word	0x20000204

080015c0 <GPIO_setup>:

void GPIO_setup(void)
{
 80015c0:	b580      	push	{r7, lr}
 80015c2:	af00      	add	r7, sp, #0
	LED.pGPIOx = GPIOA;
 80015c4:	4b14      	ldr	r3, [pc, #80]	; (8001618 <GPIO_setup+0x58>)
 80015c6:	4a15      	ldr	r2, [pc, #84]	; (800161c <GPIO_setup+0x5c>)
 80015c8:	601a      	str	r2, [r3, #0]
	LED.GPIO_config.GPIO_Mode = GPIO_Mode_OUT;
 80015ca:	4b13      	ldr	r3, [pc, #76]	; (8001618 <GPIO_setup+0x58>)
 80015cc:	2201      	movs	r2, #1
 80015ce:	715a      	strb	r2, [r3, #5]
	LED.GPIO_config.GPIO_OType = GPIO_OType_PP;
 80015d0:	4b11      	ldr	r3, [pc, #68]	; (8001618 <GPIO_setup+0x58>)
 80015d2:	2200      	movs	r2, #0
 80015d4:	721a      	strb	r2, [r3, #8]
	LED.GPIO_config.GPIO_Pin = GPIO_PIN_5;
 80015d6:	4b10      	ldr	r3, [pc, #64]	; (8001618 <GPIO_setup+0x58>)
 80015d8:	2205      	movs	r2, #5
 80015da:	711a      	strb	r2, [r3, #4]
	LED.GPIO_config.GPIO_PuPd = GPIO_PuPd_NONE;
 80015dc:	4b0e      	ldr	r3, [pc, #56]	; (8001618 <GPIO_setup+0x58>)
 80015de:	2200      	movs	r2, #0
 80015e0:	71da      	strb	r2, [r3, #7]
	LED.GPIO_config.GPIO_Speed = GPIO_Speed_LOW;
 80015e2:	4b0d      	ldr	r3, [pc, #52]	; (8001618 <GPIO_setup+0x58>)
 80015e4:	2200      	movs	r2, #0
 80015e6:	719a      	strb	r2, [r3, #6]

	GPIO_Init(&LED);
 80015e8:	480b      	ldr	r0, [pc, #44]	; (8001618 <GPIO_setup+0x58>)
 80015ea:	f7ff fcff 	bl	8000fec <GPIO_Init>

	Button.pGPIOx = GPIOC;
 80015ee:	4b0c      	ldr	r3, [pc, #48]	; (8001620 <GPIO_setup+0x60>)
 80015f0:	4a0c      	ldr	r2, [pc, #48]	; (8001624 <GPIO_setup+0x64>)
 80015f2:	601a      	str	r2, [r3, #0]
	Button.GPIO_config.GPIO_Mode = GPIO_Mode_IN;
 80015f4:	4b0a      	ldr	r3, [pc, #40]	; (8001620 <GPIO_setup+0x60>)
 80015f6:	2200      	movs	r2, #0
 80015f8:	715a      	strb	r2, [r3, #5]
	Button.GPIO_config.GPIO_Pin = GPIO_PIN_13;
 80015fa:	4b09      	ldr	r3, [pc, #36]	; (8001620 <GPIO_setup+0x60>)
 80015fc:	220d      	movs	r2, #13
 80015fe:	711a      	strb	r2, [r3, #4]
	Button.GPIO_config.GPIO_PuPd = GPIO_PuPd_NONE;
 8001600:	4b07      	ldr	r3, [pc, #28]	; (8001620 <GPIO_setup+0x60>)
 8001602:	2200      	movs	r2, #0
 8001604:	71da      	strb	r2, [r3, #7]
	Button.GPIO_config.GPIO_Speed = GPIO_Speed_LOW;
 8001606:	4b06      	ldr	r3, [pc, #24]	; (8001620 <GPIO_setup+0x60>)
 8001608:	2200      	movs	r2, #0
 800160a:	719a      	strb	r2, [r3, #6]

	GPIO_Init(&Button);
 800160c:	4804      	ldr	r0, [pc, #16]	; (8001620 <GPIO_setup+0x60>)
 800160e:	f7ff fced 	bl	8000fec <GPIO_Init>
}
 8001612:	bf00      	nop
 8001614:	bd80      	pop	{r7, pc}
 8001616:	bf00      	nop
 8001618:	200001ec 	.word	0x200001ec
 800161c:	40020000 	.word	0x40020000
 8001620:	200001f8 	.word	0x200001f8
 8001624:	40020800 	.word	0x40020800

08001628 <SYSTICK_setup>:

void SYSTICK_setup(void)
{
 8001628:	b580      	push	{r7, lr}
 800162a:	b082      	sub	sp, #8
 800162c:	af00      	add	r7, sp, #0
	SYSTICK_Config_t SYSTICK_Config = {0};
 800162e:	463b      	mov	r3, r7
 8001630:	2200      	movs	r2, #0
 8001632:	601a      	str	r2, [r3, #0]
 8001634:	605a      	str	r2, [r3, #4]

	SYSTICK_Config.SYSTICK_Clock_Source = SYSTICK_Clk_Source_External;
 8001636:	2300      	movs	r3, #0
 8001638:	713b      	strb	r3, [r7, #4]
	SYSTICK_Config.SYSTICK_Period = (SYSTICK_GetCalib() & 0x00FFFFFF) - 1;
 800163a:	f7ff ff0f 	bl	800145c <SYSTICK_GetCalib>
 800163e:	4603      	mov	r3, r0
 8001640:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8001644:	3b01      	subs	r3, #1
 8001646:	603b      	str	r3, [r7, #0]

	SYSTICK_Init(&SYSTICK_Config);
 8001648:	463b      	mov	r3, r7
 800164a:	4618      	mov	r0, r3
 800164c:	f7ff fea2 	bl	8001394 <SYSTICK_Init>
}
 8001650:	bf00      	nop
 8001652:	3708      	adds	r7, #8
 8001654:	46bd      	mov	sp, r7
 8001656:	bd80      	pop	{r7, pc}

08001658 <WWDG_setup>:

void WWDG_setup(void)
{
 8001658:	b580      	push	{r7, lr}
 800165a:	af00      	add	r7, sp, #0
	WWDG_Config.WWDG_Prescaler = WWDG_Prescaler_4096x4;
 800165c:	4b06      	ldr	r3, [pc, #24]	; (8001678 <WWDG_setup+0x20>)
 800165e:	2202      	movs	r2, #2
 8001660:	701a      	strb	r2, [r3, #0]
	WWDG_Config.WWDG_Window = 97;		// Tmin: 10.48ms (1/37.5MHz)x4096x4x(valor_contaje - valor_ventana)
 8001662:	4b05      	ldr	r3, [pc, #20]	; (8001678 <WWDG_setup+0x20>)
 8001664:	2261      	movs	r2, #97	; 0x61
 8001666:	709a      	strb	r2, [r3, #2]
	WWDG_Config.WWDG_Counter = 121;		//Tmax: 25.34ms (1/37.5MHz)x4096x4x(valor_contaje - 0x40 + 1)
 8001668:	4b03      	ldr	r3, [pc, #12]	; (8001678 <WWDG_setup+0x20>)
 800166a:	2279      	movs	r2, #121	; 0x79
 800166c:	705a      	strb	r2, [r3, #1]

	WWDG_Init(&WWDG_Config);
 800166e:	4802      	ldr	r0, [pc, #8]	; (8001678 <WWDG_setup+0x20>)
 8001670:	f7ff fefe 	bl	8001470 <WWDG_Init>
}
 8001674:	bf00      	nop
 8001676:	bd80      	pop	{r7, pc}
 8001678:	20000208 	.word	0x20000208

0800167c <main>:

int main(void)
{
 800167c:	b580      	push	{r7, lr}
 800167e:	af00      	add	r7, sp, #0
	SYSCLK_PLL_setup();
 8001680:	f000 f864 	bl	800174c <SYSCLK_PLL_setup>
	GPIO_setup();
 8001684:	f7ff ff9c 	bl	80015c0 <GPIO_setup>
	SYSTICK_setup();
 8001688:	f7ff ffce 	bl	8001628 <SYSTICK_setup>
	SYSTICK_ITConfig(ENABLE);
 800168c:	2001      	movs	r0, #1
 800168e:	f7ff fec5 	bl	800141c <SYSTICK_ITConfig>
	SYSTICK_Cmd(ENABLE);
 8001692:	2001      	movs	r0, #1
 8001694:	f7ff fea2 	bl	80013dc <SYSTICK_Cmd>

	delay_ms(300);
 8001698:	f44f 7096 	mov.w	r0, #300	; 0x12c
 800169c:	f7ff ff6a 	bl	8001574 <delay_ms>
	GPIO_WritePin(LED.pGPIOx, LED.GPIO_config.GPIO_Pin, SET);
 80016a0:	4b13      	ldr	r3, [pc, #76]	; (80016f0 <main+0x74>)
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	4a12      	ldr	r2, [pc, #72]	; (80016f0 <main+0x74>)
 80016a6:	7911      	ldrb	r1, [r2, #4]
 80016a8:	2201      	movs	r2, #1
 80016aa:	4618      	mov	r0, r3
 80016ac:	f7ff fe4a 	bl	8001344 <GPIO_WritePin>

	*((volatile uint32_t *)0xE0042008UL) |= (1 << 11);
 80016b0:	4b10      	ldr	r3, [pc, #64]	; (80016f4 <main+0x78>)
 80016b2:	681b      	ldr	r3, [r3, #0]
 80016b4:	4a0f      	ldr	r2, [pc, #60]	; (80016f4 <main+0x78>)
 80016b6:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80016ba:	6013      	str	r3, [r2, #0]

	WWDG_setup();
 80016bc:	f7ff ffcc 	bl	8001658 <WWDG_setup>
	//WWDG_Refresh(&WWDG_Config); // Cargar antes de habilitar (como ya lo hacemos en WWDG_setup() no hace falta volver a hacerlo)
	WWDG_cmd(ENABLE);
 80016c0:	2001      	movs	r0, #1
 80016c2:	f7ff ff1b 	bl	80014fc <WWDG_cmd>

	while(1){
		if(!GPIO_ReadPin(Button.pGPIOx, Button.GPIO_config.GPIO_Pin))
 80016c6:	4b0c      	ldr	r3, [pc, #48]	; (80016f8 <main+0x7c>)
 80016c8:	681b      	ldr	r3, [r3, #0]
 80016ca:	4a0b      	ldr	r2, [pc, #44]	; (80016f8 <main+0x7c>)
 80016cc:	7912      	ldrb	r2, [r2, #4]
 80016ce:	4611      	mov	r1, r2
 80016d0:	4618      	mov	r0, r3
 80016d2:	f7ff fe23 	bl	800131c <GPIO_ReadPin>
 80016d6:	4603      	mov	r3, r0
 80016d8:	2b00      	cmp	r3, #0
 80016da:	d101      	bne.n	80016e0 <main+0x64>
			generate_fault();
 80016dc:	f000 f81e 	bl	800171c <generate_fault>

		min11max25(24);
 80016e0:	2018      	movs	r0, #24
 80016e2:	f000 f80d 	bl	8001700 <min11max25>
		WWDG_Refresh(&WWDG_Config);
 80016e6:	4805      	ldr	r0, [pc, #20]	; (80016fc <main+0x80>)
 80016e8:	f7ff ff28 	bl	800153c <WWDG_Refresh>
		if(!GPIO_ReadPin(Button.pGPIOx, Button.GPIO_config.GPIO_Pin))
 80016ec:	e7eb      	b.n	80016c6 <main+0x4a>
 80016ee:	bf00      	nop
 80016f0:	200001ec 	.word	0x200001ec
 80016f4:	e0042008 	.word	0xe0042008
 80016f8:	200001f8 	.word	0x200001f8
 80016fc:	20000208 	.word	0x20000208

08001700 <min11max25>:
	}
}

void min11max25(uint8_t val)
{
 8001700:	b580      	push	{r7, lr}
 8001702:	b082      	sub	sp, #8
 8001704:	af00      	add	r7, sp, #0
 8001706:	4603      	mov	r3, r0
 8001708:	71fb      	strb	r3, [r7, #7]
	delay_ms(val);
 800170a:	79fb      	ldrb	r3, [r7, #7]
 800170c:	4618      	mov	r0, r3
 800170e:	f7ff ff31 	bl	8001574 <delay_ms>
}
 8001712:	bf00      	nop
 8001714:	3708      	adds	r7, #8
 8001716:	46bd      	mov	sp, r7
 8001718:	bd80      	pop	{r7, pc}
	...

0800171c <generate_fault>:

void generate_fault(void)
{
 800171c:	b580      	push	{r7, lr}
 800171e:	b082      	sub	sp, #8
 8001720:	af00      	add	r7, sp, #0
	uint32_t *sram_address = (uint32_t *)0x20014000;
 8001722:	4b07      	ldr	r3, [pc, #28]	; (8001740 <generate_fault+0x24>)
 8001724:	607b      	str	r3, [r7, #4]
	*sram_address = 0xFFFFFFFF;
 8001726:	687b      	ldr	r3, [r7, #4]
 8001728:	f04f 32ff 	mov.w	r2, #4294967295
 800172c:	601a      	str	r2, [r3, #0]
	void (*function_pointer)(void);

	function_pointer = (void *)sram_address;
 800172e:	687b      	ldr	r3, [r7, #4]
 8001730:	603b      	str	r3, [r7, #0]
	function_pointer();
 8001732:	683b      	ldr	r3, [r7, #0]
 8001734:	4798      	blx	r3
}
 8001736:	bf00      	nop
 8001738:	3708      	adds	r7, #8
 800173a:	46bd      	mov	sp, r7
 800173c:	bd80      	pop	{r7, pc}
 800173e:	bf00      	nop
 8001740:	20014000 	.word	0x20014000

08001744 <HardFault_Handler>:

void HardFault_Handler(void)
{
 8001744:	b480      	push	{r7}
 8001746:	af00      	add	r7, sp, #0
	while(1);
 8001748:	e7fe      	b.n	8001748 <HardFault_Handler+0x4>
	...

0800174c <SYSCLK_PLL_setup>:
}

void SYSCLK_PLL_setup(void)
{
 800174c:	b580      	push	{r7, lr}
 800174e:	b088      	sub	sp, #32
 8001750:	af02      	add	r7, sp, #8
	uint32_t PLLM, PLLN, PLLP, PLLQ, PLLR;
	// 150MHz
	PLLM = 4;
 8001752:	2304      	movs	r3, #4
 8001754:	617b      	str	r3, [r7, #20]
	PLLN = 150;
 8001756:	2396      	movs	r3, #150	; 0x96
 8001758:	613b      	str	r3, [r7, #16]
	PLLP = 2;
 800175a:	2302      	movs	r3, #2
 800175c:	60fb      	str	r3, [r7, #12]
	PLLR = 2;
 800175e:	2302      	movs	r3, #2
 8001760:	60bb      	str	r3, [r7, #8]
	PLLQ = 8;
 8001762:	2308      	movs	r3, #8
 8001764:	607b      	str	r3, [r7, #4]

	// Configurar prescaler APB1 y APB2
	RCC_APB1CLKConfig(RCC_APB_Prescaler_4); // 37.5MHz
 8001766:	2005      	movs	r0, #5
 8001768:	f7ff fb36 	bl	8000dd8 <RCC_APB1CLKConfig>
	RCC_APB2CLKConfig(RCC_APB_Prescaler_2); // 75MHz
 800176c:	2004      	movs	r0, #4
 800176e:	f7ff fb4f 	bl	8000e10 <RCC_APB2CLKConfig>

	// Habilitar HSE
	RCC_HSEConfig(RCC_HSE_ON);
 8001772:	2001      	movs	r0, #1
 8001774:	f7ff fa38 	bl	8000be8 <RCC_HSEConfig>

	// Esperar a que HSE este OK
	RCC_WaitForCLKRDY(RCC_Clock_HSE);
 8001778:	2001      	movs	r0, #1
 800177a:	f7ff fadb 	bl	8000d34 <RCC_WaitForCLKRDY>

	// Configurar el PLL
	RCC_PLLConfig(RCC_PLL_Source_HSE, PLLM, PLLN, PLLP, PLLQ, PLLR);
 800177e:	68bb      	ldr	r3, [r7, #8]
 8001780:	9301      	str	r3, [sp, #4]
 8001782:	687b      	ldr	r3, [r7, #4]
 8001784:	9300      	str	r3, [sp, #0]
 8001786:	68fb      	ldr	r3, [r7, #12]
 8001788:	693a      	ldr	r2, [r7, #16]
 800178a:	6979      	ldr	r1, [r7, #20]
 800178c:	2001      	movs	r0, #1
 800178e:	f7ff fa51 	bl	8000c34 <RCC_PLLConfig>

	// Habilitar PLL
	RCC_PLLCmd(ENABLE);
 8001792:	2001      	movs	r0, #1
 8001794:	f7ff faae 	bl	8000cf4 <RCC_PLLCmd>

	// Esperar a que PLL este OK
	RCC_WaitForCLKRDY(RCC_Clock_PLL);
 8001798:	2002      	movs	r0, #2
 800179a:	f7ff facb 	bl	8000d34 <RCC_WaitForCLKRDY>

	// Flash latency
	*((volatile uint32_t *)0x40023C00) = 0x04;
 800179e:	4b05      	ldr	r3, [pc, #20]	; (80017b4 <SYSCLK_PLL_setup+0x68>)
 80017a0:	2204      	movs	r2, #4
 80017a2:	601a      	str	r2, [r3, #0]

	// Seleccionar PLL_P como fuente de reloj del sistema
	RCC_SYSCLKConfig(RCC_SYSCLK_Source_PLL_P);
 80017a4:	2002      	movs	r0, #2
 80017a6:	f7ff fafd 	bl	8000da4 <RCC_SYSCLKConfig>

}
 80017aa:	bf00      	nop
 80017ac:	3718      	adds	r7, #24
 80017ae:	46bd      	mov	sp, r7
 80017b0:	bd80      	pop	{r7, pc}
 80017b2:	bf00      	nop
 80017b4:	40023c00 	.word	0x40023c00

080017b8 <assert_failed>:

void assert_failed(uint8_t *file, uint32_t line){
 80017b8:	b480      	push	{r7}
 80017ba:	b083      	sub	sp, #12
 80017bc:	af00      	add	r7, sp, #0
 80017be:	6078      	str	r0, [r7, #4]
 80017c0:	6039      	str	r1, [r7, #0]
	while(1);
 80017c2:	e7fe      	b.n	80017c2 <assert_failed+0xa>

080017c4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80017c4:	480d      	ldr	r0, [pc, #52]	; (80017fc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80017c6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80017c8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80017cc:	480c      	ldr	r0, [pc, #48]	; (8001800 <LoopForever+0x6>)
  ldr r1, =_edata
 80017ce:	490d      	ldr	r1, [pc, #52]	; (8001804 <LoopForever+0xa>)
  ldr r2, =_sidata
 80017d0:	4a0d      	ldr	r2, [pc, #52]	; (8001808 <LoopForever+0xe>)
  movs r3, #0
 80017d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80017d4:	e002      	b.n	80017dc <LoopCopyDataInit>

080017d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80017d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80017d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80017da:	3304      	adds	r3, #4

080017dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80017dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80017de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80017e0:	d3f9      	bcc.n	80017d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80017e2:	4a0a      	ldr	r2, [pc, #40]	; (800180c <LoopForever+0x12>)
  ldr r4, =_ebss
 80017e4:	4c0a      	ldr	r4, [pc, #40]	; (8001810 <LoopForever+0x16>)
  movs r3, #0
 80017e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80017e8:	e001      	b.n	80017ee <LoopFillZerobss>

080017ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80017ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80017ec:	3204      	adds	r2, #4

080017ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80017ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80017f0:	d3fb      	bcc.n	80017ea <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80017f2:	f000 f811 	bl	8001818 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80017f6:	f7ff ff41 	bl	800167c <main>

080017fa <LoopForever>:

LoopForever:
    b LoopForever
 80017fa:	e7fe      	b.n	80017fa <LoopForever>
  ldr   r0, =_estack
 80017fc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001800:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001804:	200001d0 	.word	0x200001d0
  ldr r2, =_sidata
 8001808:	08004714 	.word	0x08004714
  ldr r2, =_sbss
 800180c:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8001810:	20000220 	.word	0x20000220

08001814 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001814:	e7fe      	b.n	8001814 <ADC_IRQHandler>
	...

08001818 <__libc_init_array>:
 8001818:	b570      	push	{r4, r5, r6, lr}
 800181a:	4d0d      	ldr	r5, [pc, #52]	; (8001850 <__libc_init_array+0x38>)
 800181c:	4c0d      	ldr	r4, [pc, #52]	; (8001854 <__libc_init_array+0x3c>)
 800181e:	1b64      	subs	r4, r4, r5
 8001820:	10a4      	asrs	r4, r4, #2
 8001822:	2600      	movs	r6, #0
 8001824:	42a6      	cmp	r6, r4
 8001826:	d109      	bne.n	800183c <__libc_init_array+0x24>
 8001828:	4d0b      	ldr	r5, [pc, #44]	; (8001858 <__libc_init_array+0x40>)
 800182a:	4c0c      	ldr	r4, [pc, #48]	; (800185c <__libc_init_array+0x44>)
 800182c:	f002 fd64 	bl	80042f8 <_init>
 8001830:	1b64      	subs	r4, r4, r5
 8001832:	10a4      	asrs	r4, r4, #2
 8001834:	2600      	movs	r6, #0
 8001836:	42a6      	cmp	r6, r4
 8001838:	d105      	bne.n	8001846 <__libc_init_array+0x2e>
 800183a:	bd70      	pop	{r4, r5, r6, pc}
 800183c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001840:	4798      	blx	r3
 8001842:	3601      	adds	r6, #1
 8001844:	e7ee      	b.n	8001824 <__libc_init_array+0xc>
 8001846:	f855 3b04 	ldr.w	r3, [r5], #4
 800184a:	4798      	blx	r3
 800184c:	3601      	adds	r6, #1
 800184e:	e7f2      	b.n	8001836 <__libc_init_array+0x1e>
 8001850:	0800470c 	.word	0x0800470c
 8001854:	0800470c 	.word	0x0800470c
 8001858:	0800470c 	.word	0x0800470c
 800185c:	08004710 	.word	0x08004710

08001860 <memset>:
 8001860:	4402      	add	r2, r0
 8001862:	4603      	mov	r3, r0
 8001864:	4293      	cmp	r3, r2
 8001866:	d100      	bne.n	800186a <memset+0xa>
 8001868:	4770      	bx	lr
 800186a:	f803 1b01 	strb.w	r1, [r3], #1
 800186e:	e7f9      	b.n	8001864 <memset+0x4>

08001870 <__cvt>:
 8001870:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001874:	b088      	sub	sp, #32
 8001876:	2b00      	cmp	r3, #0
 8001878:	461f      	mov	r7, r3
 800187a:	4614      	mov	r4, r2
 800187c:	bfb8      	it	lt
 800187e:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001882:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001884:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8001886:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 800188a:	bfb6      	itet	lt
 800188c:	461f      	movlt	r7, r3
 800188e:	2300      	movge	r3, #0
 8001890:	232d      	movlt	r3, #45	; 0x2d
 8001892:	7013      	strb	r3, [r2, #0]
 8001894:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8001896:	f023 0820 	bic.w	r8, r3, #32
 800189a:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800189e:	d005      	beq.n	80018ac <__cvt+0x3c>
 80018a0:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80018a4:	d100      	bne.n	80018a8 <__cvt+0x38>
 80018a6:	3501      	adds	r5, #1
 80018a8:	2302      	movs	r3, #2
 80018aa:	e000      	b.n	80018ae <__cvt+0x3e>
 80018ac:	2303      	movs	r3, #3
 80018ae:	aa07      	add	r2, sp, #28
 80018b0:	9204      	str	r2, [sp, #16]
 80018b2:	aa06      	add	r2, sp, #24
 80018b4:	e9cd a202 	strd	sl, r2, [sp, #8]
 80018b8:	e9cd 3500 	strd	r3, r5, [sp]
 80018bc:	4622      	mov	r2, r4
 80018be:	463b      	mov	r3, r7
 80018c0:	f000 fcba 	bl	8002238 <_dtoa_r>
 80018c4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80018c8:	4606      	mov	r6, r0
 80018ca:	d102      	bne.n	80018d2 <__cvt+0x62>
 80018cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80018ce:	07db      	lsls	r3, r3, #31
 80018d0:	d522      	bpl.n	8001918 <__cvt+0xa8>
 80018d2:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80018d6:	eb06 0905 	add.w	r9, r6, r5
 80018da:	d110      	bne.n	80018fe <__cvt+0x8e>
 80018dc:	7833      	ldrb	r3, [r6, #0]
 80018de:	2b30      	cmp	r3, #48	; 0x30
 80018e0:	d10a      	bne.n	80018f8 <__cvt+0x88>
 80018e2:	2200      	movs	r2, #0
 80018e4:	2300      	movs	r3, #0
 80018e6:	4620      	mov	r0, r4
 80018e8:	4639      	mov	r1, r7
 80018ea:	f7ff f90d 	bl	8000b08 <__aeabi_dcmpeq>
 80018ee:	b918      	cbnz	r0, 80018f8 <__cvt+0x88>
 80018f0:	f1c5 0501 	rsb	r5, r5, #1
 80018f4:	f8ca 5000 	str.w	r5, [sl]
 80018f8:	f8da 3000 	ldr.w	r3, [sl]
 80018fc:	4499      	add	r9, r3
 80018fe:	2200      	movs	r2, #0
 8001900:	2300      	movs	r3, #0
 8001902:	4620      	mov	r0, r4
 8001904:	4639      	mov	r1, r7
 8001906:	f7ff f8ff 	bl	8000b08 <__aeabi_dcmpeq>
 800190a:	b108      	cbz	r0, 8001910 <__cvt+0xa0>
 800190c:	f8cd 901c 	str.w	r9, [sp, #28]
 8001910:	2230      	movs	r2, #48	; 0x30
 8001912:	9b07      	ldr	r3, [sp, #28]
 8001914:	454b      	cmp	r3, r9
 8001916:	d307      	bcc.n	8001928 <__cvt+0xb8>
 8001918:	9b07      	ldr	r3, [sp, #28]
 800191a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800191c:	1b9b      	subs	r3, r3, r6
 800191e:	4630      	mov	r0, r6
 8001920:	6013      	str	r3, [r2, #0]
 8001922:	b008      	add	sp, #32
 8001924:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001928:	1c59      	adds	r1, r3, #1
 800192a:	9107      	str	r1, [sp, #28]
 800192c:	701a      	strb	r2, [r3, #0]
 800192e:	e7f0      	b.n	8001912 <__cvt+0xa2>

08001930 <__exponent>:
 8001930:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001932:	4603      	mov	r3, r0
 8001934:	2900      	cmp	r1, #0
 8001936:	bfb8      	it	lt
 8001938:	4249      	neglt	r1, r1
 800193a:	f803 2b02 	strb.w	r2, [r3], #2
 800193e:	bfb4      	ite	lt
 8001940:	222d      	movlt	r2, #45	; 0x2d
 8001942:	222b      	movge	r2, #43	; 0x2b
 8001944:	2909      	cmp	r1, #9
 8001946:	7042      	strb	r2, [r0, #1]
 8001948:	dd2a      	ble.n	80019a0 <__exponent+0x70>
 800194a:	f10d 0407 	add.w	r4, sp, #7
 800194e:	46a4      	mov	ip, r4
 8001950:	270a      	movs	r7, #10
 8001952:	46a6      	mov	lr, r4
 8001954:	460a      	mov	r2, r1
 8001956:	fb91 f6f7 	sdiv	r6, r1, r7
 800195a:	fb07 1516 	mls	r5, r7, r6, r1
 800195e:	3530      	adds	r5, #48	; 0x30
 8001960:	2a63      	cmp	r2, #99	; 0x63
 8001962:	f104 34ff 	add.w	r4, r4, #4294967295
 8001966:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800196a:	4631      	mov	r1, r6
 800196c:	dcf1      	bgt.n	8001952 <__exponent+0x22>
 800196e:	3130      	adds	r1, #48	; 0x30
 8001970:	f1ae 0502 	sub.w	r5, lr, #2
 8001974:	f804 1c01 	strb.w	r1, [r4, #-1]
 8001978:	1c44      	adds	r4, r0, #1
 800197a:	4629      	mov	r1, r5
 800197c:	4561      	cmp	r1, ip
 800197e:	d30a      	bcc.n	8001996 <__exponent+0x66>
 8001980:	f10d 0209 	add.w	r2, sp, #9
 8001984:	eba2 020e 	sub.w	r2, r2, lr
 8001988:	4565      	cmp	r5, ip
 800198a:	bf88      	it	hi
 800198c:	2200      	movhi	r2, #0
 800198e:	4413      	add	r3, r2
 8001990:	1a18      	subs	r0, r3, r0
 8001992:	b003      	add	sp, #12
 8001994:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001996:	f811 2b01 	ldrb.w	r2, [r1], #1
 800199a:	f804 2f01 	strb.w	r2, [r4, #1]!
 800199e:	e7ed      	b.n	800197c <__exponent+0x4c>
 80019a0:	2330      	movs	r3, #48	; 0x30
 80019a2:	3130      	adds	r1, #48	; 0x30
 80019a4:	7083      	strb	r3, [r0, #2]
 80019a6:	70c1      	strb	r1, [r0, #3]
 80019a8:	1d03      	adds	r3, r0, #4
 80019aa:	e7f1      	b.n	8001990 <__exponent+0x60>

080019ac <_printf_float>:
 80019ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80019b0:	b091      	sub	sp, #68	; 0x44
 80019b2:	460c      	mov	r4, r1
 80019b4:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 80019b8:	4616      	mov	r6, r2
 80019ba:	461f      	mov	r7, r3
 80019bc:	4605      	mov	r5, r0
 80019be:	f001 fa29 	bl	8002e14 <_localeconv_r>
 80019c2:	6803      	ldr	r3, [r0, #0]
 80019c4:	9309      	str	r3, [sp, #36]	; 0x24
 80019c6:	4618      	mov	r0, r3
 80019c8:	f7fe fc22 	bl	8000210 <strlen>
 80019cc:	2300      	movs	r3, #0
 80019ce:	930e      	str	r3, [sp, #56]	; 0x38
 80019d0:	f8d8 3000 	ldr.w	r3, [r8]
 80019d4:	900a      	str	r0, [sp, #40]	; 0x28
 80019d6:	3307      	adds	r3, #7
 80019d8:	f023 0307 	bic.w	r3, r3, #7
 80019dc:	f103 0208 	add.w	r2, r3, #8
 80019e0:	f894 9018 	ldrb.w	r9, [r4, #24]
 80019e4:	f8d4 b000 	ldr.w	fp, [r4]
 80019e8:	f8c8 2000 	str.w	r2, [r8]
 80019ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019f0:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80019f4:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 80019f8:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 80019fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80019fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001a00:	4b9c      	ldr	r3, [pc, #624]	; (8001c74 <_printf_float+0x2c8>)
 8001a02:	f04f 32ff 	mov.w	r2, #4294967295
 8001a06:	4640      	mov	r0, r8
 8001a08:	f7ff f8b0 	bl	8000b6c <__aeabi_dcmpun>
 8001a0c:	bb70      	cbnz	r0, 8001a6c <_printf_float+0xc0>
 8001a0e:	4b99      	ldr	r3, [pc, #612]	; (8001c74 <_printf_float+0x2c8>)
 8001a10:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001a12:	f04f 32ff 	mov.w	r2, #4294967295
 8001a16:	4640      	mov	r0, r8
 8001a18:	f7ff f88a 	bl	8000b30 <__aeabi_dcmple>
 8001a1c:	bb30      	cbnz	r0, 8001a6c <_printf_float+0xc0>
 8001a1e:	2200      	movs	r2, #0
 8001a20:	2300      	movs	r3, #0
 8001a22:	4640      	mov	r0, r8
 8001a24:	4651      	mov	r1, sl
 8001a26:	f7ff f879 	bl	8000b1c <__aeabi_dcmplt>
 8001a2a:	b110      	cbz	r0, 8001a32 <_printf_float+0x86>
 8001a2c:	232d      	movs	r3, #45	; 0x2d
 8001a2e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001a32:	4b91      	ldr	r3, [pc, #580]	; (8001c78 <_printf_float+0x2cc>)
 8001a34:	4891      	ldr	r0, [pc, #580]	; (8001c7c <_printf_float+0x2d0>)
 8001a36:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8001a3a:	bf94      	ite	ls
 8001a3c:	4698      	movls	r8, r3
 8001a3e:	4680      	movhi	r8, r0
 8001a40:	2303      	movs	r3, #3
 8001a42:	6123      	str	r3, [r4, #16]
 8001a44:	f02b 0304 	bic.w	r3, fp, #4
 8001a48:	6023      	str	r3, [r4, #0]
 8001a4a:	f04f 0a00 	mov.w	sl, #0
 8001a4e:	9700      	str	r7, [sp, #0]
 8001a50:	4633      	mov	r3, r6
 8001a52:	aa0f      	add	r2, sp, #60	; 0x3c
 8001a54:	4621      	mov	r1, r4
 8001a56:	4628      	mov	r0, r5
 8001a58:	f000 f9d2 	bl	8001e00 <_printf_common>
 8001a5c:	3001      	adds	r0, #1
 8001a5e:	f040 808f 	bne.w	8001b80 <_printf_float+0x1d4>
 8001a62:	f04f 30ff 	mov.w	r0, #4294967295
 8001a66:	b011      	add	sp, #68	; 0x44
 8001a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001a6c:	4642      	mov	r2, r8
 8001a6e:	4653      	mov	r3, sl
 8001a70:	4640      	mov	r0, r8
 8001a72:	4651      	mov	r1, sl
 8001a74:	f7ff f87a 	bl	8000b6c <__aeabi_dcmpun>
 8001a78:	b140      	cbz	r0, 8001a8c <_printf_float+0xe0>
 8001a7a:	f1ba 0f00 	cmp.w	sl, #0
 8001a7e:	bfbc      	itt	lt
 8001a80:	232d      	movlt	r3, #45	; 0x2d
 8001a82:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8001a86:	487e      	ldr	r0, [pc, #504]	; (8001c80 <_printf_float+0x2d4>)
 8001a88:	4b7e      	ldr	r3, [pc, #504]	; (8001c84 <_printf_float+0x2d8>)
 8001a8a:	e7d4      	b.n	8001a36 <_printf_float+0x8a>
 8001a8c:	6863      	ldr	r3, [r4, #4]
 8001a8e:	1c5a      	adds	r2, r3, #1
 8001a90:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8001a94:	d142      	bne.n	8001b1c <_printf_float+0x170>
 8001a96:	2306      	movs	r3, #6
 8001a98:	6063      	str	r3, [r4, #4]
 8001a9a:	2200      	movs	r2, #0
 8001a9c:	9206      	str	r2, [sp, #24]
 8001a9e:	aa0e      	add	r2, sp, #56	; 0x38
 8001aa0:	e9cd 9204 	strd	r9, r2, [sp, #16]
 8001aa4:	aa0d      	add	r2, sp, #52	; 0x34
 8001aa6:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 8001aaa:	9203      	str	r2, [sp, #12]
 8001aac:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8001ab0:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001ab4:	6023      	str	r3, [r4, #0]
 8001ab6:	6863      	ldr	r3, [r4, #4]
 8001ab8:	9300      	str	r3, [sp, #0]
 8001aba:	4642      	mov	r2, r8
 8001abc:	4653      	mov	r3, sl
 8001abe:	4628      	mov	r0, r5
 8001ac0:	910b      	str	r1, [sp, #44]	; 0x2c
 8001ac2:	f7ff fed5 	bl	8001870 <__cvt>
 8001ac6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001ac8:	2947      	cmp	r1, #71	; 0x47
 8001aca:	4680      	mov	r8, r0
 8001acc:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001ace:	d108      	bne.n	8001ae2 <_printf_float+0x136>
 8001ad0:	1cc8      	adds	r0, r1, #3
 8001ad2:	db02      	blt.n	8001ada <_printf_float+0x12e>
 8001ad4:	6863      	ldr	r3, [r4, #4]
 8001ad6:	4299      	cmp	r1, r3
 8001ad8:	dd40      	ble.n	8001b5c <_printf_float+0x1b0>
 8001ada:	f1a9 0902 	sub.w	r9, r9, #2
 8001ade:	fa5f f989 	uxtb.w	r9, r9
 8001ae2:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8001ae6:	d81f      	bhi.n	8001b28 <_printf_float+0x17c>
 8001ae8:	3901      	subs	r1, #1
 8001aea:	464a      	mov	r2, r9
 8001aec:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001af0:	910d      	str	r1, [sp, #52]	; 0x34
 8001af2:	f7ff ff1d 	bl	8001930 <__exponent>
 8001af6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001af8:	1813      	adds	r3, r2, r0
 8001afa:	2a01      	cmp	r2, #1
 8001afc:	4682      	mov	sl, r0
 8001afe:	6123      	str	r3, [r4, #16]
 8001b00:	dc02      	bgt.n	8001b08 <_printf_float+0x15c>
 8001b02:	6822      	ldr	r2, [r4, #0]
 8001b04:	07d2      	lsls	r2, r2, #31
 8001b06:	d501      	bpl.n	8001b0c <_printf_float+0x160>
 8001b08:	3301      	adds	r3, #1
 8001b0a:	6123      	str	r3, [r4, #16]
 8001b0c:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8001b10:	2b00      	cmp	r3, #0
 8001b12:	d09c      	beq.n	8001a4e <_printf_float+0xa2>
 8001b14:	232d      	movs	r3, #45	; 0x2d
 8001b16:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001b1a:	e798      	b.n	8001a4e <_printf_float+0xa2>
 8001b1c:	2947      	cmp	r1, #71	; 0x47
 8001b1e:	d1bc      	bne.n	8001a9a <_printf_float+0xee>
 8001b20:	2b00      	cmp	r3, #0
 8001b22:	d1ba      	bne.n	8001a9a <_printf_float+0xee>
 8001b24:	2301      	movs	r3, #1
 8001b26:	e7b7      	b.n	8001a98 <_printf_float+0xec>
 8001b28:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8001b2c:	d118      	bne.n	8001b60 <_printf_float+0x1b4>
 8001b2e:	2900      	cmp	r1, #0
 8001b30:	6863      	ldr	r3, [r4, #4]
 8001b32:	dd0b      	ble.n	8001b4c <_printf_float+0x1a0>
 8001b34:	6121      	str	r1, [r4, #16]
 8001b36:	b913      	cbnz	r3, 8001b3e <_printf_float+0x192>
 8001b38:	6822      	ldr	r2, [r4, #0]
 8001b3a:	07d0      	lsls	r0, r2, #31
 8001b3c:	d502      	bpl.n	8001b44 <_printf_float+0x198>
 8001b3e:	3301      	adds	r3, #1
 8001b40:	440b      	add	r3, r1
 8001b42:	6123      	str	r3, [r4, #16]
 8001b44:	65a1      	str	r1, [r4, #88]	; 0x58
 8001b46:	f04f 0a00 	mov.w	sl, #0
 8001b4a:	e7df      	b.n	8001b0c <_printf_float+0x160>
 8001b4c:	b913      	cbnz	r3, 8001b54 <_printf_float+0x1a8>
 8001b4e:	6822      	ldr	r2, [r4, #0]
 8001b50:	07d2      	lsls	r2, r2, #31
 8001b52:	d501      	bpl.n	8001b58 <_printf_float+0x1ac>
 8001b54:	3302      	adds	r3, #2
 8001b56:	e7f4      	b.n	8001b42 <_printf_float+0x196>
 8001b58:	2301      	movs	r3, #1
 8001b5a:	e7f2      	b.n	8001b42 <_printf_float+0x196>
 8001b5c:	f04f 0967 	mov.w	r9, #103	; 0x67
 8001b60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001b62:	4299      	cmp	r1, r3
 8001b64:	db05      	blt.n	8001b72 <_printf_float+0x1c6>
 8001b66:	6823      	ldr	r3, [r4, #0]
 8001b68:	6121      	str	r1, [r4, #16]
 8001b6a:	07d8      	lsls	r0, r3, #31
 8001b6c:	d5ea      	bpl.n	8001b44 <_printf_float+0x198>
 8001b6e:	1c4b      	adds	r3, r1, #1
 8001b70:	e7e7      	b.n	8001b42 <_printf_float+0x196>
 8001b72:	2900      	cmp	r1, #0
 8001b74:	bfd4      	ite	le
 8001b76:	f1c1 0202 	rsble	r2, r1, #2
 8001b7a:	2201      	movgt	r2, #1
 8001b7c:	4413      	add	r3, r2
 8001b7e:	e7e0      	b.n	8001b42 <_printf_float+0x196>
 8001b80:	6823      	ldr	r3, [r4, #0]
 8001b82:	055a      	lsls	r2, r3, #21
 8001b84:	d407      	bmi.n	8001b96 <_printf_float+0x1ea>
 8001b86:	6923      	ldr	r3, [r4, #16]
 8001b88:	4642      	mov	r2, r8
 8001b8a:	4631      	mov	r1, r6
 8001b8c:	4628      	mov	r0, r5
 8001b8e:	47b8      	blx	r7
 8001b90:	3001      	adds	r0, #1
 8001b92:	d12b      	bne.n	8001bec <_printf_float+0x240>
 8001b94:	e765      	b.n	8001a62 <_printf_float+0xb6>
 8001b96:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8001b9a:	f240 80dc 	bls.w	8001d56 <_printf_float+0x3aa>
 8001b9e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001ba2:	2200      	movs	r2, #0
 8001ba4:	2300      	movs	r3, #0
 8001ba6:	f7fe ffaf 	bl	8000b08 <__aeabi_dcmpeq>
 8001baa:	2800      	cmp	r0, #0
 8001bac:	d033      	beq.n	8001c16 <_printf_float+0x26a>
 8001bae:	4a36      	ldr	r2, [pc, #216]	; (8001c88 <_printf_float+0x2dc>)
 8001bb0:	2301      	movs	r3, #1
 8001bb2:	4631      	mov	r1, r6
 8001bb4:	4628      	mov	r0, r5
 8001bb6:	47b8      	blx	r7
 8001bb8:	3001      	adds	r0, #1
 8001bba:	f43f af52 	beq.w	8001a62 <_printf_float+0xb6>
 8001bbe:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001bc2:	429a      	cmp	r2, r3
 8001bc4:	db02      	blt.n	8001bcc <_printf_float+0x220>
 8001bc6:	6823      	ldr	r3, [r4, #0]
 8001bc8:	07d8      	lsls	r0, r3, #31
 8001bca:	d50f      	bpl.n	8001bec <_printf_float+0x240>
 8001bcc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001bd0:	4631      	mov	r1, r6
 8001bd2:	4628      	mov	r0, r5
 8001bd4:	47b8      	blx	r7
 8001bd6:	3001      	adds	r0, #1
 8001bd8:	f43f af43 	beq.w	8001a62 <_printf_float+0xb6>
 8001bdc:	f04f 0800 	mov.w	r8, #0
 8001be0:	f104 091a 	add.w	r9, r4, #26
 8001be4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001be6:	3b01      	subs	r3, #1
 8001be8:	4543      	cmp	r3, r8
 8001bea:	dc09      	bgt.n	8001c00 <_printf_float+0x254>
 8001bec:	6823      	ldr	r3, [r4, #0]
 8001bee:	079b      	lsls	r3, r3, #30
 8001bf0:	f100 8101 	bmi.w	8001df6 <_printf_float+0x44a>
 8001bf4:	68e0      	ldr	r0, [r4, #12]
 8001bf6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8001bf8:	4298      	cmp	r0, r3
 8001bfa:	bfb8      	it	lt
 8001bfc:	4618      	movlt	r0, r3
 8001bfe:	e732      	b.n	8001a66 <_printf_float+0xba>
 8001c00:	2301      	movs	r3, #1
 8001c02:	464a      	mov	r2, r9
 8001c04:	4631      	mov	r1, r6
 8001c06:	4628      	mov	r0, r5
 8001c08:	47b8      	blx	r7
 8001c0a:	3001      	adds	r0, #1
 8001c0c:	f43f af29 	beq.w	8001a62 <_printf_float+0xb6>
 8001c10:	f108 0801 	add.w	r8, r8, #1
 8001c14:	e7e6      	b.n	8001be4 <_printf_float+0x238>
 8001c16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001c18:	2b00      	cmp	r3, #0
 8001c1a:	dc37      	bgt.n	8001c8c <_printf_float+0x2e0>
 8001c1c:	4a1a      	ldr	r2, [pc, #104]	; (8001c88 <_printf_float+0x2dc>)
 8001c1e:	2301      	movs	r3, #1
 8001c20:	4631      	mov	r1, r6
 8001c22:	4628      	mov	r0, r5
 8001c24:	47b8      	blx	r7
 8001c26:	3001      	adds	r0, #1
 8001c28:	f43f af1b 	beq.w	8001a62 <_printf_float+0xb6>
 8001c2c:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001c30:	4313      	orrs	r3, r2
 8001c32:	d102      	bne.n	8001c3a <_printf_float+0x28e>
 8001c34:	6823      	ldr	r3, [r4, #0]
 8001c36:	07d9      	lsls	r1, r3, #31
 8001c38:	d5d8      	bpl.n	8001bec <_printf_float+0x240>
 8001c3a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001c3e:	4631      	mov	r1, r6
 8001c40:	4628      	mov	r0, r5
 8001c42:	47b8      	blx	r7
 8001c44:	3001      	adds	r0, #1
 8001c46:	f43f af0c 	beq.w	8001a62 <_printf_float+0xb6>
 8001c4a:	f04f 0900 	mov.w	r9, #0
 8001c4e:	f104 0a1a 	add.w	sl, r4, #26
 8001c52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001c54:	425b      	negs	r3, r3
 8001c56:	454b      	cmp	r3, r9
 8001c58:	dc01      	bgt.n	8001c5e <_printf_float+0x2b2>
 8001c5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001c5c:	e794      	b.n	8001b88 <_printf_float+0x1dc>
 8001c5e:	2301      	movs	r3, #1
 8001c60:	4652      	mov	r2, sl
 8001c62:	4631      	mov	r1, r6
 8001c64:	4628      	mov	r0, r5
 8001c66:	47b8      	blx	r7
 8001c68:	3001      	adds	r0, #1
 8001c6a:	f43f aefa 	beq.w	8001a62 <_printf_float+0xb6>
 8001c6e:	f109 0901 	add.w	r9, r9, #1
 8001c72:	e7ee      	b.n	8001c52 <_printf_float+0x2a6>
 8001c74:	7fefffff 	.word	0x7fefffff
 8001c78:	08004334 	.word	0x08004334
 8001c7c:	08004338 	.word	0x08004338
 8001c80:	08004340 	.word	0x08004340
 8001c84:	0800433c 	.word	0x0800433c
 8001c88:	08004344 	.word	0x08004344
 8001c8c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001c8e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001c90:	429a      	cmp	r2, r3
 8001c92:	bfa8      	it	ge
 8001c94:	461a      	movge	r2, r3
 8001c96:	2a00      	cmp	r2, #0
 8001c98:	4691      	mov	r9, r2
 8001c9a:	dc37      	bgt.n	8001d0c <_printf_float+0x360>
 8001c9c:	f04f 0b00 	mov.w	fp, #0
 8001ca0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001ca4:	f104 021a 	add.w	r2, r4, #26
 8001ca8:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8001cac:	ebaa 0309 	sub.w	r3, sl, r9
 8001cb0:	455b      	cmp	r3, fp
 8001cb2:	dc33      	bgt.n	8001d1c <_printf_float+0x370>
 8001cb4:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001cb8:	429a      	cmp	r2, r3
 8001cba:	db3b      	blt.n	8001d34 <_printf_float+0x388>
 8001cbc:	6823      	ldr	r3, [r4, #0]
 8001cbe:	07da      	lsls	r2, r3, #31
 8001cc0:	d438      	bmi.n	8001d34 <_printf_float+0x388>
 8001cc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001cc4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001cc6:	eba3 020a 	sub.w	r2, r3, sl
 8001cca:	eba3 0901 	sub.w	r9, r3, r1
 8001cce:	4591      	cmp	r9, r2
 8001cd0:	bfa8      	it	ge
 8001cd2:	4691      	movge	r9, r2
 8001cd4:	f1b9 0f00 	cmp.w	r9, #0
 8001cd8:	dc34      	bgt.n	8001d44 <_printf_float+0x398>
 8001cda:	f04f 0800 	mov.w	r8, #0
 8001cde:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001ce2:	f104 0a1a 	add.w	sl, r4, #26
 8001ce6:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001cea:	1a9b      	subs	r3, r3, r2
 8001cec:	eba3 0309 	sub.w	r3, r3, r9
 8001cf0:	4543      	cmp	r3, r8
 8001cf2:	f77f af7b 	ble.w	8001bec <_printf_float+0x240>
 8001cf6:	2301      	movs	r3, #1
 8001cf8:	4652      	mov	r2, sl
 8001cfa:	4631      	mov	r1, r6
 8001cfc:	4628      	mov	r0, r5
 8001cfe:	47b8      	blx	r7
 8001d00:	3001      	adds	r0, #1
 8001d02:	f43f aeae 	beq.w	8001a62 <_printf_float+0xb6>
 8001d06:	f108 0801 	add.w	r8, r8, #1
 8001d0a:	e7ec      	b.n	8001ce6 <_printf_float+0x33a>
 8001d0c:	4613      	mov	r3, r2
 8001d0e:	4631      	mov	r1, r6
 8001d10:	4642      	mov	r2, r8
 8001d12:	4628      	mov	r0, r5
 8001d14:	47b8      	blx	r7
 8001d16:	3001      	adds	r0, #1
 8001d18:	d1c0      	bne.n	8001c9c <_printf_float+0x2f0>
 8001d1a:	e6a2      	b.n	8001a62 <_printf_float+0xb6>
 8001d1c:	2301      	movs	r3, #1
 8001d1e:	4631      	mov	r1, r6
 8001d20:	4628      	mov	r0, r5
 8001d22:	920b      	str	r2, [sp, #44]	; 0x2c
 8001d24:	47b8      	blx	r7
 8001d26:	3001      	adds	r0, #1
 8001d28:	f43f ae9b 	beq.w	8001a62 <_printf_float+0xb6>
 8001d2c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8001d2e:	f10b 0b01 	add.w	fp, fp, #1
 8001d32:	e7b9      	b.n	8001ca8 <_printf_float+0x2fc>
 8001d34:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001d38:	4631      	mov	r1, r6
 8001d3a:	4628      	mov	r0, r5
 8001d3c:	47b8      	blx	r7
 8001d3e:	3001      	adds	r0, #1
 8001d40:	d1bf      	bne.n	8001cc2 <_printf_float+0x316>
 8001d42:	e68e      	b.n	8001a62 <_printf_float+0xb6>
 8001d44:	464b      	mov	r3, r9
 8001d46:	eb08 020a 	add.w	r2, r8, sl
 8001d4a:	4631      	mov	r1, r6
 8001d4c:	4628      	mov	r0, r5
 8001d4e:	47b8      	blx	r7
 8001d50:	3001      	adds	r0, #1
 8001d52:	d1c2      	bne.n	8001cda <_printf_float+0x32e>
 8001d54:	e685      	b.n	8001a62 <_printf_float+0xb6>
 8001d56:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001d58:	2a01      	cmp	r2, #1
 8001d5a:	dc01      	bgt.n	8001d60 <_printf_float+0x3b4>
 8001d5c:	07db      	lsls	r3, r3, #31
 8001d5e:	d537      	bpl.n	8001dd0 <_printf_float+0x424>
 8001d60:	2301      	movs	r3, #1
 8001d62:	4642      	mov	r2, r8
 8001d64:	4631      	mov	r1, r6
 8001d66:	4628      	mov	r0, r5
 8001d68:	47b8      	blx	r7
 8001d6a:	3001      	adds	r0, #1
 8001d6c:	f43f ae79 	beq.w	8001a62 <_printf_float+0xb6>
 8001d70:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001d74:	4631      	mov	r1, r6
 8001d76:	4628      	mov	r0, r5
 8001d78:	47b8      	blx	r7
 8001d7a:	3001      	adds	r0, #1
 8001d7c:	f43f ae71 	beq.w	8001a62 <_printf_float+0xb6>
 8001d80:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001d84:	2200      	movs	r2, #0
 8001d86:	2300      	movs	r3, #0
 8001d88:	f7fe febe 	bl	8000b08 <__aeabi_dcmpeq>
 8001d8c:	b9d8      	cbnz	r0, 8001dc6 <_printf_float+0x41a>
 8001d8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001d90:	f108 0201 	add.w	r2, r8, #1
 8001d94:	3b01      	subs	r3, #1
 8001d96:	4631      	mov	r1, r6
 8001d98:	4628      	mov	r0, r5
 8001d9a:	47b8      	blx	r7
 8001d9c:	3001      	adds	r0, #1
 8001d9e:	d10e      	bne.n	8001dbe <_printf_float+0x412>
 8001da0:	e65f      	b.n	8001a62 <_printf_float+0xb6>
 8001da2:	2301      	movs	r3, #1
 8001da4:	464a      	mov	r2, r9
 8001da6:	4631      	mov	r1, r6
 8001da8:	4628      	mov	r0, r5
 8001daa:	47b8      	blx	r7
 8001dac:	3001      	adds	r0, #1
 8001dae:	f43f ae58 	beq.w	8001a62 <_printf_float+0xb6>
 8001db2:	f108 0801 	add.w	r8, r8, #1
 8001db6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001db8:	3b01      	subs	r3, #1
 8001dba:	4543      	cmp	r3, r8
 8001dbc:	dcf1      	bgt.n	8001da2 <_printf_float+0x3f6>
 8001dbe:	4653      	mov	r3, sl
 8001dc0:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001dc4:	e6e1      	b.n	8001b8a <_printf_float+0x1de>
 8001dc6:	f04f 0800 	mov.w	r8, #0
 8001dca:	f104 091a 	add.w	r9, r4, #26
 8001dce:	e7f2      	b.n	8001db6 <_printf_float+0x40a>
 8001dd0:	2301      	movs	r3, #1
 8001dd2:	4642      	mov	r2, r8
 8001dd4:	e7df      	b.n	8001d96 <_printf_float+0x3ea>
 8001dd6:	2301      	movs	r3, #1
 8001dd8:	464a      	mov	r2, r9
 8001dda:	4631      	mov	r1, r6
 8001ddc:	4628      	mov	r0, r5
 8001dde:	47b8      	blx	r7
 8001de0:	3001      	adds	r0, #1
 8001de2:	f43f ae3e 	beq.w	8001a62 <_printf_float+0xb6>
 8001de6:	f108 0801 	add.w	r8, r8, #1
 8001dea:	68e3      	ldr	r3, [r4, #12]
 8001dec:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8001dee:	1a5b      	subs	r3, r3, r1
 8001df0:	4543      	cmp	r3, r8
 8001df2:	dcf0      	bgt.n	8001dd6 <_printf_float+0x42a>
 8001df4:	e6fe      	b.n	8001bf4 <_printf_float+0x248>
 8001df6:	f04f 0800 	mov.w	r8, #0
 8001dfa:	f104 0919 	add.w	r9, r4, #25
 8001dfe:	e7f4      	b.n	8001dea <_printf_float+0x43e>

08001e00 <_printf_common>:
 8001e00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001e04:	4616      	mov	r6, r2
 8001e06:	4699      	mov	r9, r3
 8001e08:	688a      	ldr	r2, [r1, #8]
 8001e0a:	690b      	ldr	r3, [r1, #16]
 8001e0c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001e10:	4293      	cmp	r3, r2
 8001e12:	bfb8      	it	lt
 8001e14:	4613      	movlt	r3, r2
 8001e16:	6033      	str	r3, [r6, #0]
 8001e18:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001e1c:	4607      	mov	r7, r0
 8001e1e:	460c      	mov	r4, r1
 8001e20:	b10a      	cbz	r2, 8001e26 <_printf_common+0x26>
 8001e22:	3301      	adds	r3, #1
 8001e24:	6033      	str	r3, [r6, #0]
 8001e26:	6823      	ldr	r3, [r4, #0]
 8001e28:	0699      	lsls	r1, r3, #26
 8001e2a:	bf42      	ittt	mi
 8001e2c:	6833      	ldrmi	r3, [r6, #0]
 8001e2e:	3302      	addmi	r3, #2
 8001e30:	6033      	strmi	r3, [r6, #0]
 8001e32:	6825      	ldr	r5, [r4, #0]
 8001e34:	f015 0506 	ands.w	r5, r5, #6
 8001e38:	d106      	bne.n	8001e48 <_printf_common+0x48>
 8001e3a:	f104 0a19 	add.w	sl, r4, #25
 8001e3e:	68e3      	ldr	r3, [r4, #12]
 8001e40:	6832      	ldr	r2, [r6, #0]
 8001e42:	1a9b      	subs	r3, r3, r2
 8001e44:	42ab      	cmp	r3, r5
 8001e46:	dc26      	bgt.n	8001e96 <_printf_common+0x96>
 8001e48:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001e4c:	1e13      	subs	r3, r2, #0
 8001e4e:	6822      	ldr	r2, [r4, #0]
 8001e50:	bf18      	it	ne
 8001e52:	2301      	movne	r3, #1
 8001e54:	0692      	lsls	r2, r2, #26
 8001e56:	d42b      	bmi.n	8001eb0 <_printf_common+0xb0>
 8001e58:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001e5c:	4649      	mov	r1, r9
 8001e5e:	4638      	mov	r0, r7
 8001e60:	47c0      	blx	r8
 8001e62:	3001      	adds	r0, #1
 8001e64:	d01e      	beq.n	8001ea4 <_printf_common+0xa4>
 8001e66:	6823      	ldr	r3, [r4, #0]
 8001e68:	68e5      	ldr	r5, [r4, #12]
 8001e6a:	6832      	ldr	r2, [r6, #0]
 8001e6c:	f003 0306 	and.w	r3, r3, #6
 8001e70:	2b04      	cmp	r3, #4
 8001e72:	bf08      	it	eq
 8001e74:	1aad      	subeq	r5, r5, r2
 8001e76:	68a3      	ldr	r3, [r4, #8]
 8001e78:	6922      	ldr	r2, [r4, #16]
 8001e7a:	bf0c      	ite	eq
 8001e7c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001e80:	2500      	movne	r5, #0
 8001e82:	4293      	cmp	r3, r2
 8001e84:	bfc4      	itt	gt
 8001e86:	1a9b      	subgt	r3, r3, r2
 8001e88:	18ed      	addgt	r5, r5, r3
 8001e8a:	2600      	movs	r6, #0
 8001e8c:	341a      	adds	r4, #26
 8001e8e:	42b5      	cmp	r5, r6
 8001e90:	d11a      	bne.n	8001ec8 <_printf_common+0xc8>
 8001e92:	2000      	movs	r0, #0
 8001e94:	e008      	b.n	8001ea8 <_printf_common+0xa8>
 8001e96:	2301      	movs	r3, #1
 8001e98:	4652      	mov	r2, sl
 8001e9a:	4649      	mov	r1, r9
 8001e9c:	4638      	mov	r0, r7
 8001e9e:	47c0      	blx	r8
 8001ea0:	3001      	adds	r0, #1
 8001ea2:	d103      	bne.n	8001eac <_printf_common+0xac>
 8001ea4:	f04f 30ff 	mov.w	r0, #4294967295
 8001ea8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001eac:	3501      	adds	r5, #1
 8001eae:	e7c6      	b.n	8001e3e <_printf_common+0x3e>
 8001eb0:	18e1      	adds	r1, r4, r3
 8001eb2:	1c5a      	adds	r2, r3, #1
 8001eb4:	2030      	movs	r0, #48	; 0x30
 8001eb6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001eba:	4422      	add	r2, r4
 8001ebc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001ec0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001ec4:	3302      	adds	r3, #2
 8001ec6:	e7c7      	b.n	8001e58 <_printf_common+0x58>
 8001ec8:	2301      	movs	r3, #1
 8001eca:	4622      	mov	r2, r4
 8001ecc:	4649      	mov	r1, r9
 8001ece:	4638      	mov	r0, r7
 8001ed0:	47c0      	blx	r8
 8001ed2:	3001      	adds	r0, #1
 8001ed4:	d0e6      	beq.n	8001ea4 <_printf_common+0xa4>
 8001ed6:	3601      	adds	r6, #1
 8001ed8:	e7d9      	b.n	8001e8e <_printf_common+0x8e>
	...

08001edc <_printf_i>:
 8001edc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001ee0:	7e0f      	ldrb	r7, [r1, #24]
 8001ee2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001ee4:	2f78      	cmp	r7, #120	; 0x78
 8001ee6:	4691      	mov	r9, r2
 8001ee8:	4680      	mov	r8, r0
 8001eea:	460c      	mov	r4, r1
 8001eec:	469a      	mov	sl, r3
 8001eee:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001ef2:	d807      	bhi.n	8001f04 <_printf_i+0x28>
 8001ef4:	2f62      	cmp	r7, #98	; 0x62
 8001ef6:	d80a      	bhi.n	8001f0e <_printf_i+0x32>
 8001ef8:	2f00      	cmp	r7, #0
 8001efa:	f000 80d8 	beq.w	80020ae <_printf_i+0x1d2>
 8001efe:	2f58      	cmp	r7, #88	; 0x58
 8001f00:	f000 80a3 	beq.w	800204a <_printf_i+0x16e>
 8001f04:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001f08:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001f0c:	e03a      	b.n	8001f84 <_printf_i+0xa8>
 8001f0e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001f12:	2b15      	cmp	r3, #21
 8001f14:	d8f6      	bhi.n	8001f04 <_printf_i+0x28>
 8001f16:	a101      	add	r1, pc, #4	; (adr r1, 8001f1c <_printf_i+0x40>)
 8001f18:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001f1c:	08001f75 	.word	0x08001f75
 8001f20:	08001f89 	.word	0x08001f89
 8001f24:	08001f05 	.word	0x08001f05
 8001f28:	08001f05 	.word	0x08001f05
 8001f2c:	08001f05 	.word	0x08001f05
 8001f30:	08001f05 	.word	0x08001f05
 8001f34:	08001f89 	.word	0x08001f89
 8001f38:	08001f05 	.word	0x08001f05
 8001f3c:	08001f05 	.word	0x08001f05
 8001f40:	08001f05 	.word	0x08001f05
 8001f44:	08001f05 	.word	0x08001f05
 8001f48:	08002095 	.word	0x08002095
 8001f4c:	08001fb9 	.word	0x08001fb9
 8001f50:	08002077 	.word	0x08002077
 8001f54:	08001f05 	.word	0x08001f05
 8001f58:	08001f05 	.word	0x08001f05
 8001f5c:	080020b7 	.word	0x080020b7
 8001f60:	08001f05 	.word	0x08001f05
 8001f64:	08001fb9 	.word	0x08001fb9
 8001f68:	08001f05 	.word	0x08001f05
 8001f6c:	08001f05 	.word	0x08001f05
 8001f70:	0800207f 	.word	0x0800207f
 8001f74:	682b      	ldr	r3, [r5, #0]
 8001f76:	1d1a      	adds	r2, r3, #4
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	602a      	str	r2, [r5, #0]
 8001f7c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001f80:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001f84:	2301      	movs	r3, #1
 8001f86:	e0a3      	b.n	80020d0 <_printf_i+0x1f4>
 8001f88:	6820      	ldr	r0, [r4, #0]
 8001f8a:	6829      	ldr	r1, [r5, #0]
 8001f8c:	0606      	lsls	r6, r0, #24
 8001f8e:	f101 0304 	add.w	r3, r1, #4
 8001f92:	d50a      	bpl.n	8001faa <_printf_i+0xce>
 8001f94:	680e      	ldr	r6, [r1, #0]
 8001f96:	602b      	str	r3, [r5, #0]
 8001f98:	2e00      	cmp	r6, #0
 8001f9a:	da03      	bge.n	8001fa4 <_printf_i+0xc8>
 8001f9c:	232d      	movs	r3, #45	; 0x2d
 8001f9e:	4276      	negs	r6, r6
 8001fa0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001fa4:	485e      	ldr	r0, [pc, #376]	; (8002120 <_printf_i+0x244>)
 8001fa6:	230a      	movs	r3, #10
 8001fa8:	e019      	b.n	8001fde <_printf_i+0x102>
 8001faa:	680e      	ldr	r6, [r1, #0]
 8001fac:	602b      	str	r3, [r5, #0]
 8001fae:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001fb2:	bf18      	it	ne
 8001fb4:	b236      	sxthne	r6, r6
 8001fb6:	e7ef      	b.n	8001f98 <_printf_i+0xbc>
 8001fb8:	682b      	ldr	r3, [r5, #0]
 8001fba:	6820      	ldr	r0, [r4, #0]
 8001fbc:	1d19      	adds	r1, r3, #4
 8001fbe:	6029      	str	r1, [r5, #0]
 8001fc0:	0601      	lsls	r1, r0, #24
 8001fc2:	d501      	bpl.n	8001fc8 <_printf_i+0xec>
 8001fc4:	681e      	ldr	r6, [r3, #0]
 8001fc6:	e002      	b.n	8001fce <_printf_i+0xf2>
 8001fc8:	0646      	lsls	r6, r0, #25
 8001fca:	d5fb      	bpl.n	8001fc4 <_printf_i+0xe8>
 8001fcc:	881e      	ldrh	r6, [r3, #0]
 8001fce:	4854      	ldr	r0, [pc, #336]	; (8002120 <_printf_i+0x244>)
 8001fd0:	2f6f      	cmp	r7, #111	; 0x6f
 8001fd2:	bf0c      	ite	eq
 8001fd4:	2308      	moveq	r3, #8
 8001fd6:	230a      	movne	r3, #10
 8001fd8:	2100      	movs	r1, #0
 8001fda:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001fde:	6865      	ldr	r5, [r4, #4]
 8001fe0:	60a5      	str	r5, [r4, #8]
 8001fe2:	2d00      	cmp	r5, #0
 8001fe4:	bfa2      	ittt	ge
 8001fe6:	6821      	ldrge	r1, [r4, #0]
 8001fe8:	f021 0104 	bicge.w	r1, r1, #4
 8001fec:	6021      	strge	r1, [r4, #0]
 8001fee:	b90e      	cbnz	r6, 8001ff4 <_printf_i+0x118>
 8001ff0:	2d00      	cmp	r5, #0
 8001ff2:	d04d      	beq.n	8002090 <_printf_i+0x1b4>
 8001ff4:	4615      	mov	r5, r2
 8001ff6:	fbb6 f1f3 	udiv	r1, r6, r3
 8001ffa:	fb03 6711 	mls	r7, r3, r1, r6
 8001ffe:	5dc7      	ldrb	r7, [r0, r7]
 8002000:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002004:	4637      	mov	r7, r6
 8002006:	42bb      	cmp	r3, r7
 8002008:	460e      	mov	r6, r1
 800200a:	d9f4      	bls.n	8001ff6 <_printf_i+0x11a>
 800200c:	2b08      	cmp	r3, #8
 800200e:	d10b      	bne.n	8002028 <_printf_i+0x14c>
 8002010:	6823      	ldr	r3, [r4, #0]
 8002012:	07de      	lsls	r6, r3, #31
 8002014:	d508      	bpl.n	8002028 <_printf_i+0x14c>
 8002016:	6923      	ldr	r3, [r4, #16]
 8002018:	6861      	ldr	r1, [r4, #4]
 800201a:	4299      	cmp	r1, r3
 800201c:	bfde      	ittt	le
 800201e:	2330      	movle	r3, #48	; 0x30
 8002020:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002024:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002028:	1b52      	subs	r2, r2, r5
 800202a:	6122      	str	r2, [r4, #16]
 800202c:	f8cd a000 	str.w	sl, [sp]
 8002030:	464b      	mov	r3, r9
 8002032:	aa03      	add	r2, sp, #12
 8002034:	4621      	mov	r1, r4
 8002036:	4640      	mov	r0, r8
 8002038:	f7ff fee2 	bl	8001e00 <_printf_common>
 800203c:	3001      	adds	r0, #1
 800203e:	d14c      	bne.n	80020da <_printf_i+0x1fe>
 8002040:	f04f 30ff 	mov.w	r0, #4294967295
 8002044:	b004      	add	sp, #16
 8002046:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800204a:	4835      	ldr	r0, [pc, #212]	; (8002120 <_printf_i+0x244>)
 800204c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8002050:	6829      	ldr	r1, [r5, #0]
 8002052:	6823      	ldr	r3, [r4, #0]
 8002054:	f851 6b04 	ldr.w	r6, [r1], #4
 8002058:	6029      	str	r1, [r5, #0]
 800205a:	061d      	lsls	r5, r3, #24
 800205c:	d514      	bpl.n	8002088 <_printf_i+0x1ac>
 800205e:	07df      	lsls	r7, r3, #31
 8002060:	bf44      	itt	mi
 8002062:	f043 0320 	orrmi.w	r3, r3, #32
 8002066:	6023      	strmi	r3, [r4, #0]
 8002068:	b91e      	cbnz	r6, 8002072 <_printf_i+0x196>
 800206a:	6823      	ldr	r3, [r4, #0]
 800206c:	f023 0320 	bic.w	r3, r3, #32
 8002070:	6023      	str	r3, [r4, #0]
 8002072:	2310      	movs	r3, #16
 8002074:	e7b0      	b.n	8001fd8 <_printf_i+0xfc>
 8002076:	6823      	ldr	r3, [r4, #0]
 8002078:	f043 0320 	orr.w	r3, r3, #32
 800207c:	6023      	str	r3, [r4, #0]
 800207e:	2378      	movs	r3, #120	; 0x78
 8002080:	4828      	ldr	r0, [pc, #160]	; (8002124 <_printf_i+0x248>)
 8002082:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002086:	e7e3      	b.n	8002050 <_printf_i+0x174>
 8002088:	0659      	lsls	r1, r3, #25
 800208a:	bf48      	it	mi
 800208c:	b2b6      	uxthmi	r6, r6
 800208e:	e7e6      	b.n	800205e <_printf_i+0x182>
 8002090:	4615      	mov	r5, r2
 8002092:	e7bb      	b.n	800200c <_printf_i+0x130>
 8002094:	682b      	ldr	r3, [r5, #0]
 8002096:	6826      	ldr	r6, [r4, #0]
 8002098:	6961      	ldr	r1, [r4, #20]
 800209a:	1d18      	adds	r0, r3, #4
 800209c:	6028      	str	r0, [r5, #0]
 800209e:	0635      	lsls	r5, r6, #24
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	d501      	bpl.n	80020a8 <_printf_i+0x1cc>
 80020a4:	6019      	str	r1, [r3, #0]
 80020a6:	e002      	b.n	80020ae <_printf_i+0x1d2>
 80020a8:	0670      	lsls	r0, r6, #25
 80020aa:	d5fb      	bpl.n	80020a4 <_printf_i+0x1c8>
 80020ac:	8019      	strh	r1, [r3, #0]
 80020ae:	2300      	movs	r3, #0
 80020b0:	6123      	str	r3, [r4, #16]
 80020b2:	4615      	mov	r5, r2
 80020b4:	e7ba      	b.n	800202c <_printf_i+0x150>
 80020b6:	682b      	ldr	r3, [r5, #0]
 80020b8:	1d1a      	adds	r2, r3, #4
 80020ba:	602a      	str	r2, [r5, #0]
 80020bc:	681d      	ldr	r5, [r3, #0]
 80020be:	6862      	ldr	r2, [r4, #4]
 80020c0:	2100      	movs	r1, #0
 80020c2:	4628      	mov	r0, r5
 80020c4:	f7fe f8ac 	bl	8000220 <memchr>
 80020c8:	b108      	cbz	r0, 80020ce <_printf_i+0x1f2>
 80020ca:	1b40      	subs	r0, r0, r5
 80020cc:	6060      	str	r0, [r4, #4]
 80020ce:	6863      	ldr	r3, [r4, #4]
 80020d0:	6123      	str	r3, [r4, #16]
 80020d2:	2300      	movs	r3, #0
 80020d4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80020d8:	e7a8      	b.n	800202c <_printf_i+0x150>
 80020da:	6923      	ldr	r3, [r4, #16]
 80020dc:	462a      	mov	r2, r5
 80020de:	4649      	mov	r1, r9
 80020e0:	4640      	mov	r0, r8
 80020e2:	47d0      	blx	sl
 80020e4:	3001      	adds	r0, #1
 80020e6:	d0ab      	beq.n	8002040 <_printf_i+0x164>
 80020e8:	6823      	ldr	r3, [r4, #0]
 80020ea:	079b      	lsls	r3, r3, #30
 80020ec:	d413      	bmi.n	8002116 <_printf_i+0x23a>
 80020ee:	68e0      	ldr	r0, [r4, #12]
 80020f0:	9b03      	ldr	r3, [sp, #12]
 80020f2:	4298      	cmp	r0, r3
 80020f4:	bfb8      	it	lt
 80020f6:	4618      	movlt	r0, r3
 80020f8:	e7a4      	b.n	8002044 <_printf_i+0x168>
 80020fa:	2301      	movs	r3, #1
 80020fc:	4632      	mov	r2, r6
 80020fe:	4649      	mov	r1, r9
 8002100:	4640      	mov	r0, r8
 8002102:	47d0      	blx	sl
 8002104:	3001      	adds	r0, #1
 8002106:	d09b      	beq.n	8002040 <_printf_i+0x164>
 8002108:	3501      	adds	r5, #1
 800210a:	68e3      	ldr	r3, [r4, #12]
 800210c:	9903      	ldr	r1, [sp, #12]
 800210e:	1a5b      	subs	r3, r3, r1
 8002110:	42ab      	cmp	r3, r5
 8002112:	dcf2      	bgt.n	80020fa <_printf_i+0x21e>
 8002114:	e7eb      	b.n	80020ee <_printf_i+0x212>
 8002116:	2500      	movs	r5, #0
 8002118:	f104 0619 	add.w	r6, r4, #25
 800211c:	e7f5      	b.n	800210a <_printf_i+0x22e>
 800211e:	bf00      	nop
 8002120:	08004346 	.word	0x08004346
 8002124:	08004357 	.word	0x08004357

08002128 <quorem>:
 8002128:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800212c:	6903      	ldr	r3, [r0, #16]
 800212e:	690c      	ldr	r4, [r1, #16]
 8002130:	42a3      	cmp	r3, r4
 8002132:	4607      	mov	r7, r0
 8002134:	db7d      	blt.n	8002232 <quorem+0x10a>
 8002136:	3c01      	subs	r4, #1
 8002138:	f101 0814 	add.w	r8, r1, #20
 800213c:	f100 0514 	add.w	r5, r0, #20
 8002140:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002144:	9301      	str	r3, [sp, #4]
 8002146:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800214a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800214e:	3301      	adds	r3, #1
 8002150:	429a      	cmp	r2, r3
 8002152:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8002156:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800215a:	fbb2 f6f3 	udiv	r6, r2, r3
 800215e:	d32e      	bcc.n	80021be <quorem+0x96>
 8002160:	f04f 0e00 	mov.w	lr, #0
 8002164:	4640      	mov	r0, r8
 8002166:	46ac      	mov	ip, r5
 8002168:	46f2      	mov	sl, lr
 800216a:	f850 2b04 	ldr.w	r2, [r0], #4
 800216e:	b293      	uxth	r3, r2
 8002170:	fb06 e303 	mla	r3, r6, r3, lr
 8002174:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8002178:	0c12      	lsrs	r2, r2, #16
 800217a:	b29b      	uxth	r3, r3
 800217c:	fb06 e202 	mla	r2, r6, r2, lr
 8002180:	ebaa 0303 	sub.w	r3, sl, r3
 8002184:	f8dc a000 	ldr.w	sl, [ip]
 8002188:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800218c:	b292      	uxth	r2, r2
 800218e:	fa13 f38a 	uxtah	r3, r3, sl
 8002192:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8002196:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800219a:	b29b      	uxth	r3, r3
 800219c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80021a0:	4581      	cmp	r9, r0
 80021a2:	f84c 3b04 	str.w	r3, [ip], #4
 80021a6:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80021aa:	d2de      	bcs.n	800216a <quorem+0x42>
 80021ac:	f855 300b 	ldr.w	r3, [r5, fp]
 80021b0:	b92b      	cbnz	r3, 80021be <quorem+0x96>
 80021b2:	9b01      	ldr	r3, [sp, #4]
 80021b4:	3b04      	subs	r3, #4
 80021b6:	429d      	cmp	r5, r3
 80021b8:	461a      	mov	r2, r3
 80021ba:	d32e      	bcc.n	800221a <quorem+0xf2>
 80021bc:	613c      	str	r4, [r7, #16]
 80021be:	4638      	mov	r0, r7
 80021c0:	f001 f8c0 	bl	8003344 <__mcmp>
 80021c4:	2800      	cmp	r0, #0
 80021c6:	db24      	blt.n	8002212 <quorem+0xea>
 80021c8:	3601      	adds	r6, #1
 80021ca:	4628      	mov	r0, r5
 80021cc:	f04f 0c00 	mov.w	ip, #0
 80021d0:	f858 2b04 	ldr.w	r2, [r8], #4
 80021d4:	f8d0 e000 	ldr.w	lr, [r0]
 80021d8:	b293      	uxth	r3, r2
 80021da:	ebac 0303 	sub.w	r3, ip, r3
 80021de:	0c12      	lsrs	r2, r2, #16
 80021e0:	fa13 f38e 	uxtah	r3, r3, lr
 80021e4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80021e8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80021ec:	b29b      	uxth	r3, r3
 80021ee:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80021f2:	45c1      	cmp	r9, r8
 80021f4:	f840 3b04 	str.w	r3, [r0], #4
 80021f8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80021fc:	d2e8      	bcs.n	80021d0 <quorem+0xa8>
 80021fe:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002202:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002206:	b922      	cbnz	r2, 8002212 <quorem+0xea>
 8002208:	3b04      	subs	r3, #4
 800220a:	429d      	cmp	r5, r3
 800220c:	461a      	mov	r2, r3
 800220e:	d30a      	bcc.n	8002226 <quorem+0xfe>
 8002210:	613c      	str	r4, [r7, #16]
 8002212:	4630      	mov	r0, r6
 8002214:	b003      	add	sp, #12
 8002216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800221a:	6812      	ldr	r2, [r2, #0]
 800221c:	3b04      	subs	r3, #4
 800221e:	2a00      	cmp	r2, #0
 8002220:	d1cc      	bne.n	80021bc <quorem+0x94>
 8002222:	3c01      	subs	r4, #1
 8002224:	e7c7      	b.n	80021b6 <quorem+0x8e>
 8002226:	6812      	ldr	r2, [r2, #0]
 8002228:	3b04      	subs	r3, #4
 800222a:	2a00      	cmp	r2, #0
 800222c:	d1f0      	bne.n	8002210 <quorem+0xe8>
 800222e:	3c01      	subs	r4, #1
 8002230:	e7eb      	b.n	800220a <quorem+0xe2>
 8002232:	2000      	movs	r0, #0
 8002234:	e7ee      	b.n	8002214 <quorem+0xec>
	...

08002238 <_dtoa_r>:
 8002238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800223c:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800223e:	b099      	sub	sp, #100	; 0x64
 8002240:	4616      	mov	r6, r2
 8002242:	461f      	mov	r7, r3
 8002244:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8002248:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 800224c:	4605      	mov	r5, r0
 800224e:	b974      	cbnz	r4, 800226e <_dtoa_r+0x36>
 8002250:	2010      	movs	r0, #16
 8002252:	f000 fde3 	bl	8002e1c <malloc>
 8002256:	4602      	mov	r2, r0
 8002258:	6268      	str	r0, [r5, #36]	; 0x24
 800225a:	b920      	cbnz	r0, 8002266 <_dtoa_r+0x2e>
 800225c:	4ba8      	ldr	r3, [pc, #672]	; (8002500 <_dtoa_r+0x2c8>)
 800225e:	21ea      	movs	r1, #234	; 0xea
 8002260:	48a8      	ldr	r0, [pc, #672]	; (8002504 <_dtoa_r+0x2cc>)
 8002262:	f001 fa71 	bl	8003748 <__assert_func>
 8002266:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800226a:	6004      	str	r4, [r0, #0]
 800226c:	60c4      	str	r4, [r0, #12]
 800226e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002270:	6819      	ldr	r1, [r3, #0]
 8002272:	b151      	cbz	r1, 800228a <_dtoa_r+0x52>
 8002274:	685a      	ldr	r2, [r3, #4]
 8002276:	604a      	str	r2, [r1, #4]
 8002278:	2301      	movs	r3, #1
 800227a:	4093      	lsls	r3, r2
 800227c:	608b      	str	r3, [r1, #8]
 800227e:	4628      	mov	r0, r5
 8002280:	f000 fe22 	bl	8002ec8 <_Bfree>
 8002284:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002286:	2200      	movs	r2, #0
 8002288:	601a      	str	r2, [r3, #0]
 800228a:	1e3b      	subs	r3, r7, #0
 800228c:	bfb9      	ittee	lt
 800228e:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002292:	9305      	strlt	r3, [sp, #20]
 8002294:	2300      	movge	r3, #0
 8002296:	f8c8 3000 	strge.w	r3, [r8]
 800229a:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800229e:	4b9a      	ldr	r3, [pc, #616]	; (8002508 <_dtoa_r+0x2d0>)
 80022a0:	bfbc      	itt	lt
 80022a2:	2201      	movlt	r2, #1
 80022a4:	f8c8 2000 	strlt.w	r2, [r8]
 80022a8:	ea33 0309 	bics.w	r3, r3, r9
 80022ac:	d119      	bne.n	80022e2 <_dtoa_r+0xaa>
 80022ae:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80022b0:	f242 730f 	movw	r3, #9999	; 0x270f
 80022b4:	6013      	str	r3, [r2, #0]
 80022b6:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80022ba:	4333      	orrs	r3, r6
 80022bc:	f000 8580 	beq.w	8002dc0 <_dtoa_r+0xb88>
 80022c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80022c2:	b953      	cbnz	r3, 80022da <_dtoa_r+0xa2>
 80022c4:	4b91      	ldr	r3, [pc, #580]	; (800250c <_dtoa_r+0x2d4>)
 80022c6:	e022      	b.n	800230e <_dtoa_r+0xd6>
 80022c8:	4b91      	ldr	r3, [pc, #580]	; (8002510 <_dtoa_r+0x2d8>)
 80022ca:	9303      	str	r3, [sp, #12]
 80022cc:	3308      	adds	r3, #8
 80022ce:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80022d0:	6013      	str	r3, [r2, #0]
 80022d2:	9803      	ldr	r0, [sp, #12]
 80022d4:	b019      	add	sp, #100	; 0x64
 80022d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80022da:	4b8c      	ldr	r3, [pc, #560]	; (800250c <_dtoa_r+0x2d4>)
 80022dc:	9303      	str	r3, [sp, #12]
 80022de:	3303      	adds	r3, #3
 80022e0:	e7f5      	b.n	80022ce <_dtoa_r+0x96>
 80022e2:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 80022e6:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 80022ea:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80022ee:	2200      	movs	r2, #0
 80022f0:	2300      	movs	r3, #0
 80022f2:	f7fe fc09 	bl	8000b08 <__aeabi_dcmpeq>
 80022f6:	4680      	mov	r8, r0
 80022f8:	b158      	cbz	r0, 8002312 <_dtoa_r+0xda>
 80022fa:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80022fc:	2301      	movs	r3, #1
 80022fe:	6013      	str	r3, [r2, #0]
 8002300:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002302:	2b00      	cmp	r3, #0
 8002304:	f000 8559 	beq.w	8002dba <_dtoa_r+0xb82>
 8002308:	4882      	ldr	r0, [pc, #520]	; (8002514 <_dtoa_r+0x2dc>)
 800230a:	6018      	str	r0, [r3, #0]
 800230c:	1e43      	subs	r3, r0, #1
 800230e:	9303      	str	r3, [sp, #12]
 8002310:	e7df      	b.n	80022d2 <_dtoa_r+0x9a>
 8002312:	ab16      	add	r3, sp, #88	; 0x58
 8002314:	9301      	str	r3, [sp, #4]
 8002316:	ab17      	add	r3, sp, #92	; 0x5c
 8002318:	9300      	str	r3, [sp, #0]
 800231a:	4628      	mov	r0, r5
 800231c:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8002320:	f001 f8b4 	bl	800348c <__d2b>
 8002324:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8002328:	4683      	mov	fp, r0
 800232a:	2c00      	cmp	r4, #0
 800232c:	d07e      	beq.n	800242c <_dtoa_r+0x1f4>
 800232e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002330:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8002334:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002338:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800233c:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8002340:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8002344:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 8002348:	4b73      	ldr	r3, [pc, #460]	; (8002518 <_dtoa_r+0x2e0>)
 800234a:	2200      	movs	r2, #0
 800234c:	f7fd ffbc 	bl	80002c8 <__aeabi_dsub>
 8002350:	a365      	add	r3, pc, #404	; (adr r3, 80024e8 <_dtoa_r+0x2b0>)
 8002352:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002356:	f7fe f96f 	bl	8000638 <__aeabi_dmul>
 800235a:	a365      	add	r3, pc, #404	; (adr r3, 80024f0 <_dtoa_r+0x2b8>)
 800235c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002360:	f7fd ffb4 	bl	80002cc <__adddf3>
 8002364:	4606      	mov	r6, r0
 8002366:	4620      	mov	r0, r4
 8002368:	460f      	mov	r7, r1
 800236a:	f7fe f8fb 	bl	8000564 <__aeabi_i2d>
 800236e:	a362      	add	r3, pc, #392	; (adr r3, 80024f8 <_dtoa_r+0x2c0>)
 8002370:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002374:	f7fe f960 	bl	8000638 <__aeabi_dmul>
 8002378:	4602      	mov	r2, r0
 800237a:	460b      	mov	r3, r1
 800237c:	4630      	mov	r0, r6
 800237e:	4639      	mov	r1, r7
 8002380:	f7fd ffa4 	bl	80002cc <__adddf3>
 8002384:	4606      	mov	r6, r0
 8002386:	460f      	mov	r7, r1
 8002388:	f7fe fc06 	bl	8000b98 <__aeabi_d2iz>
 800238c:	2200      	movs	r2, #0
 800238e:	4682      	mov	sl, r0
 8002390:	2300      	movs	r3, #0
 8002392:	4630      	mov	r0, r6
 8002394:	4639      	mov	r1, r7
 8002396:	f7fe fbc1 	bl	8000b1c <__aeabi_dcmplt>
 800239a:	b148      	cbz	r0, 80023b0 <_dtoa_r+0x178>
 800239c:	4650      	mov	r0, sl
 800239e:	f7fe f8e1 	bl	8000564 <__aeabi_i2d>
 80023a2:	4632      	mov	r2, r6
 80023a4:	463b      	mov	r3, r7
 80023a6:	f7fe fbaf 	bl	8000b08 <__aeabi_dcmpeq>
 80023aa:	b908      	cbnz	r0, 80023b0 <_dtoa_r+0x178>
 80023ac:	f10a 3aff 	add.w	sl, sl, #4294967295
 80023b0:	f1ba 0f16 	cmp.w	sl, #22
 80023b4:	d857      	bhi.n	8002466 <_dtoa_r+0x22e>
 80023b6:	4b59      	ldr	r3, [pc, #356]	; (800251c <_dtoa_r+0x2e4>)
 80023b8:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80023bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023c0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80023c4:	f7fe fbaa 	bl	8000b1c <__aeabi_dcmplt>
 80023c8:	2800      	cmp	r0, #0
 80023ca:	d04e      	beq.n	800246a <_dtoa_r+0x232>
 80023cc:	f10a 3aff 	add.w	sl, sl, #4294967295
 80023d0:	2300      	movs	r3, #0
 80023d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80023d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80023d6:	1b1c      	subs	r4, r3, r4
 80023d8:	1e63      	subs	r3, r4, #1
 80023da:	9309      	str	r3, [sp, #36]	; 0x24
 80023dc:	bf45      	ittet	mi
 80023de:	f1c4 0301 	rsbmi	r3, r4, #1
 80023e2:	9306      	strmi	r3, [sp, #24]
 80023e4:	2300      	movpl	r3, #0
 80023e6:	2300      	movmi	r3, #0
 80023e8:	bf4c      	ite	mi
 80023ea:	9309      	strmi	r3, [sp, #36]	; 0x24
 80023ec:	9306      	strpl	r3, [sp, #24]
 80023ee:	f1ba 0f00 	cmp.w	sl, #0
 80023f2:	db3c      	blt.n	800246e <_dtoa_r+0x236>
 80023f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80023f6:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 80023fa:	4453      	add	r3, sl
 80023fc:	9309      	str	r3, [sp, #36]	; 0x24
 80023fe:	2300      	movs	r3, #0
 8002400:	930a      	str	r3, [sp, #40]	; 0x28
 8002402:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002404:	2b09      	cmp	r3, #9
 8002406:	f200 808d 	bhi.w	8002524 <_dtoa_r+0x2ec>
 800240a:	2b05      	cmp	r3, #5
 800240c:	bfc4      	itt	gt
 800240e:	3b04      	subgt	r3, #4
 8002410:	9322      	strgt	r3, [sp, #136]	; 0x88
 8002412:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002414:	f1a3 0302 	sub.w	r3, r3, #2
 8002418:	bfcc      	ite	gt
 800241a:	2400      	movgt	r4, #0
 800241c:	2401      	movle	r4, #1
 800241e:	2b03      	cmp	r3, #3
 8002420:	f200 808c 	bhi.w	800253c <_dtoa_r+0x304>
 8002424:	e8df f003 	tbb	[pc, r3]
 8002428:	5b4d4f2d 	.word	0x5b4d4f2d
 800242c:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 8002430:	441c      	add	r4, r3
 8002432:	f204 4332 	addw	r3, r4, #1074	; 0x432
 8002436:	2b20      	cmp	r3, #32
 8002438:	bfc3      	ittte	gt
 800243a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800243e:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 8002442:	fa09 f303 	lslgt.w	r3, r9, r3
 8002446:	f1c3 0320 	rsble	r3, r3, #32
 800244a:	bfc6      	itte	gt
 800244c:	fa26 f000 	lsrgt.w	r0, r6, r0
 8002450:	4318      	orrgt	r0, r3
 8002452:	fa06 f003 	lslle.w	r0, r6, r3
 8002456:	f7fe f875 	bl	8000544 <__aeabi_ui2d>
 800245a:	2301      	movs	r3, #1
 800245c:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8002460:	3c01      	subs	r4, #1
 8002462:	9313      	str	r3, [sp, #76]	; 0x4c
 8002464:	e770      	b.n	8002348 <_dtoa_r+0x110>
 8002466:	2301      	movs	r3, #1
 8002468:	e7b3      	b.n	80023d2 <_dtoa_r+0x19a>
 800246a:	900f      	str	r0, [sp, #60]	; 0x3c
 800246c:	e7b2      	b.n	80023d4 <_dtoa_r+0x19c>
 800246e:	9b06      	ldr	r3, [sp, #24]
 8002470:	eba3 030a 	sub.w	r3, r3, sl
 8002474:	9306      	str	r3, [sp, #24]
 8002476:	f1ca 0300 	rsb	r3, sl, #0
 800247a:	930a      	str	r3, [sp, #40]	; 0x28
 800247c:	2300      	movs	r3, #0
 800247e:	930e      	str	r3, [sp, #56]	; 0x38
 8002480:	e7bf      	b.n	8002402 <_dtoa_r+0x1ca>
 8002482:	2300      	movs	r3, #0
 8002484:	930b      	str	r3, [sp, #44]	; 0x2c
 8002486:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002488:	2b00      	cmp	r3, #0
 800248a:	dc5a      	bgt.n	8002542 <_dtoa_r+0x30a>
 800248c:	f04f 0901 	mov.w	r9, #1
 8002490:	f8cd 9020 	str.w	r9, [sp, #32]
 8002494:	464b      	mov	r3, r9
 8002496:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
 800249a:	6a68      	ldr	r0, [r5, #36]	; 0x24
 800249c:	2200      	movs	r2, #0
 800249e:	6042      	str	r2, [r0, #4]
 80024a0:	2204      	movs	r2, #4
 80024a2:	f102 0614 	add.w	r6, r2, #20
 80024a6:	429e      	cmp	r6, r3
 80024a8:	6841      	ldr	r1, [r0, #4]
 80024aa:	d950      	bls.n	800254e <_dtoa_r+0x316>
 80024ac:	4628      	mov	r0, r5
 80024ae:	f000 fccb 	bl	8002e48 <_Balloc>
 80024b2:	9003      	str	r0, [sp, #12]
 80024b4:	2800      	cmp	r0, #0
 80024b6:	d14e      	bne.n	8002556 <_dtoa_r+0x31e>
 80024b8:	4b19      	ldr	r3, [pc, #100]	; (8002520 <_dtoa_r+0x2e8>)
 80024ba:	4602      	mov	r2, r0
 80024bc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80024c0:	e6ce      	b.n	8002260 <_dtoa_r+0x28>
 80024c2:	2301      	movs	r3, #1
 80024c4:	e7de      	b.n	8002484 <_dtoa_r+0x24c>
 80024c6:	2300      	movs	r3, #0
 80024c8:	930b      	str	r3, [sp, #44]	; 0x2c
 80024ca:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80024cc:	eb0a 0903 	add.w	r9, sl, r3
 80024d0:	f109 0301 	add.w	r3, r9, #1
 80024d4:	2b01      	cmp	r3, #1
 80024d6:	9308      	str	r3, [sp, #32]
 80024d8:	bfb8      	it	lt
 80024da:	2301      	movlt	r3, #1
 80024dc:	e7dd      	b.n	800249a <_dtoa_r+0x262>
 80024de:	2301      	movs	r3, #1
 80024e0:	e7f2      	b.n	80024c8 <_dtoa_r+0x290>
 80024e2:	bf00      	nop
 80024e4:	f3af 8000 	nop.w
 80024e8:	636f4361 	.word	0x636f4361
 80024ec:	3fd287a7 	.word	0x3fd287a7
 80024f0:	8b60c8b3 	.word	0x8b60c8b3
 80024f4:	3fc68a28 	.word	0x3fc68a28
 80024f8:	509f79fb 	.word	0x509f79fb
 80024fc:	3fd34413 	.word	0x3fd34413
 8002500:	08004375 	.word	0x08004375
 8002504:	0800438c 	.word	0x0800438c
 8002508:	7ff00000 	.word	0x7ff00000
 800250c:	08004371 	.word	0x08004371
 8002510:	08004368 	.word	0x08004368
 8002514:	08004345 	.word	0x08004345
 8002518:	3ff80000 	.word	0x3ff80000
 800251c:	08004480 	.word	0x08004480
 8002520:	080043e7 	.word	0x080043e7
 8002524:	2401      	movs	r4, #1
 8002526:	2300      	movs	r3, #0
 8002528:	9322      	str	r3, [sp, #136]	; 0x88
 800252a:	940b      	str	r4, [sp, #44]	; 0x2c
 800252c:	f04f 39ff 	mov.w	r9, #4294967295
 8002530:	2200      	movs	r2, #0
 8002532:	f8cd 9020 	str.w	r9, [sp, #32]
 8002536:	2312      	movs	r3, #18
 8002538:	9223      	str	r2, [sp, #140]	; 0x8c
 800253a:	e7ae      	b.n	800249a <_dtoa_r+0x262>
 800253c:	2301      	movs	r3, #1
 800253e:	930b      	str	r3, [sp, #44]	; 0x2c
 8002540:	e7f4      	b.n	800252c <_dtoa_r+0x2f4>
 8002542:	f8dd 908c 	ldr.w	r9, [sp, #140]	; 0x8c
 8002546:	f8cd 9020 	str.w	r9, [sp, #32]
 800254a:	464b      	mov	r3, r9
 800254c:	e7a5      	b.n	800249a <_dtoa_r+0x262>
 800254e:	3101      	adds	r1, #1
 8002550:	6041      	str	r1, [r0, #4]
 8002552:	0052      	lsls	r2, r2, #1
 8002554:	e7a5      	b.n	80024a2 <_dtoa_r+0x26a>
 8002556:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002558:	9a03      	ldr	r2, [sp, #12]
 800255a:	601a      	str	r2, [r3, #0]
 800255c:	9b08      	ldr	r3, [sp, #32]
 800255e:	2b0e      	cmp	r3, #14
 8002560:	f200 80a8 	bhi.w	80026b4 <_dtoa_r+0x47c>
 8002564:	2c00      	cmp	r4, #0
 8002566:	f000 80a5 	beq.w	80026b4 <_dtoa_r+0x47c>
 800256a:	f1ba 0f00 	cmp.w	sl, #0
 800256e:	dd34      	ble.n	80025da <_dtoa_r+0x3a2>
 8002570:	4a9a      	ldr	r2, [pc, #616]	; (80027dc <_dtoa_r+0x5a4>)
 8002572:	f00a 030f 	and.w	r3, sl, #15
 8002576:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800257a:	e9d3 3400 	ldrd	r3, r4, [r3]
 800257e:	f41a 7f80 	tst.w	sl, #256	; 0x100
 8002582:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8002586:	ea4f 142a 	mov.w	r4, sl, asr #4
 800258a:	d016      	beq.n	80025ba <_dtoa_r+0x382>
 800258c:	4b94      	ldr	r3, [pc, #592]	; (80027e0 <_dtoa_r+0x5a8>)
 800258e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002592:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002596:	f7fe f979 	bl	800088c <__aeabi_ddiv>
 800259a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800259e:	f004 040f 	and.w	r4, r4, #15
 80025a2:	2703      	movs	r7, #3
 80025a4:	4e8e      	ldr	r6, [pc, #568]	; (80027e0 <_dtoa_r+0x5a8>)
 80025a6:	b954      	cbnz	r4, 80025be <_dtoa_r+0x386>
 80025a8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80025ac:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80025b0:	f7fe f96c 	bl	800088c <__aeabi_ddiv>
 80025b4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80025b8:	e029      	b.n	800260e <_dtoa_r+0x3d6>
 80025ba:	2702      	movs	r7, #2
 80025bc:	e7f2      	b.n	80025a4 <_dtoa_r+0x36c>
 80025be:	07e1      	lsls	r1, r4, #31
 80025c0:	d508      	bpl.n	80025d4 <_dtoa_r+0x39c>
 80025c2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80025c6:	e9d6 2300 	ldrd	r2, r3, [r6]
 80025ca:	f7fe f835 	bl	8000638 <__aeabi_dmul>
 80025ce:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80025d2:	3701      	adds	r7, #1
 80025d4:	1064      	asrs	r4, r4, #1
 80025d6:	3608      	adds	r6, #8
 80025d8:	e7e5      	b.n	80025a6 <_dtoa_r+0x36e>
 80025da:	f000 80a5 	beq.w	8002728 <_dtoa_r+0x4f0>
 80025de:	f1ca 0400 	rsb	r4, sl, #0
 80025e2:	4b7e      	ldr	r3, [pc, #504]	; (80027dc <_dtoa_r+0x5a4>)
 80025e4:	4e7e      	ldr	r6, [pc, #504]	; (80027e0 <_dtoa_r+0x5a8>)
 80025e6:	f004 020f 	and.w	r2, r4, #15
 80025ea:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80025ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025f2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80025f6:	f7fe f81f 	bl	8000638 <__aeabi_dmul>
 80025fa:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80025fe:	1124      	asrs	r4, r4, #4
 8002600:	2300      	movs	r3, #0
 8002602:	2702      	movs	r7, #2
 8002604:	2c00      	cmp	r4, #0
 8002606:	f040 8084 	bne.w	8002712 <_dtoa_r+0x4da>
 800260a:	2b00      	cmp	r3, #0
 800260c:	d1d2      	bne.n	80025b4 <_dtoa_r+0x37c>
 800260e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002610:	2b00      	cmp	r3, #0
 8002612:	f000 808b 	beq.w	800272c <_dtoa_r+0x4f4>
 8002616:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800261a:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800261e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002622:	4b70      	ldr	r3, [pc, #448]	; (80027e4 <_dtoa_r+0x5ac>)
 8002624:	2200      	movs	r2, #0
 8002626:	f7fe fa79 	bl	8000b1c <__aeabi_dcmplt>
 800262a:	2800      	cmp	r0, #0
 800262c:	d07e      	beq.n	800272c <_dtoa_r+0x4f4>
 800262e:	9b08      	ldr	r3, [sp, #32]
 8002630:	2b00      	cmp	r3, #0
 8002632:	d07b      	beq.n	800272c <_dtoa_r+0x4f4>
 8002634:	f1b9 0f00 	cmp.w	r9, #0
 8002638:	dd38      	ble.n	80026ac <_dtoa_r+0x474>
 800263a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800263e:	4b6a      	ldr	r3, [pc, #424]	; (80027e8 <_dtoa_r+0x5b0>)
 8002640:	2200      	movs	r2, #0
 8002642:	f7fd fff9 	bl	8000638 <__aeabi_dmul>
 8002646:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800264a:	f10a 38ff 	add.w	r8, sl, #4294967295
 800264e:	3701      	adds	r7, #1
 8002650:	464c      	mov	r4, r9
 8002652:	4638      	mov	r0, r7
 8002654:	f7fd ff86 	bl	8000564 <__aeabi_i2d>
 8002658:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800265c:	f7fd ffec 	bl	8000638 <__aeabi_dmul>
 8002660:	4b62      	ldr	r3, [pc, #392]	; (80027ec <_dtoa_r+0x5b4>)
 8002662:	2200      	movs	r2, #0
 8002664:	f7fd fe32 	bl	80002cc <__adddf3>
 8002668:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800266c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8002670:	9611      	str	r6, [sp, #68]	; 0x44
 8002672:	2c00      	cmp	r4, #0
 8002674:	d15d      	bne.n	8002732 <_dtoa_r+0x4fa>
 8002676:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800267a:	4b5d      	ldr	r3, [pc, #372]	; (80027f0 <_dtoa_r+0x5b8>)
 800267c:	2200      	movs	r2, #0
 800267e:	f7fd fe23 	bl	80002c8 <__aeabi_dsub>
 8002682:	4602      	mov	r2, r0
 8002684:	460b      	mov	r3, r1
 8002686:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800268a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800268c:	4633      	mov	r3, r6
 800268e:	f7fe fa63 	bl	8000b58 <__aeabi_dcmpgt>
 8002692:	2800      	cmp	r0, #0
 8002694:	f040 829c 	bne.w	8002bd0 <_dtoa_r+0x998>
 8002698:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800269c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800269e:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 80026a2:	f7fe fa3b 	bl	8000b1c <__aeabi_dcmplt>
 80026a6:	2800      	cmp	r0, #0
 80026a8:	f040 8290 	bne.w	8002bcc <_dtoa_r+0x994>
 80026ac:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 80026b0:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80026b4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80026b6:	2b00      	cmp	r3, #0
 80026b8:	f2c0 8152 	blt.w	8002960 <_dtoa_r+0x728>
 80026bc:	f1ba 0f0e 	cmp.w	sl, #14
 80026c0:	f300 814e 	bgt.w	8002960 <_dtoa_r+0x728>
 80026c4:	4b45      	ldr	r3, [pc, #276]	; (80027dc <_dtoa_r+0x5a4>)
 80026c6:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80026ca:	e9d3 3400 	ldrd	r3, r4, [r3]
 80026ce:	e9cd 3406 	strd	r3, r4, [sp, #24]
 80026d2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80026d4:	2b00      	cmp	r3, #0
 80026d6:	f280 80db 	bge.w	8002890 <_dtoa_r+0x658>
 80026da:	9b08      	ldr	r3, [sp, #32]
 80026dc:	2b00      	cmp	r3, #0
 80026de:	f300 80d7 	bgt.w	8002890 <_dtoa_r+0x658>
 80026e2:	f040 8272 	bne.w	8002bca <_dtoa_r+0x992>
 80026e6:	4b42      	ldr	r3, [pc, #264]	; (80027f0 <_dtoa_r+0x5b8>)
 80026e8:	2200      	movs	r2, #0
 80026ea:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80026ee:	f7fd ffa3 	bl	8000638 <__aeabi_dmul>
 80026f2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80026f6:	f7fe fa25 	bl	8000b44 <__aeabi_dcmpge>
 80026fa:	9c08      	ldr	r4, [sp, #32]
 80026fc:	4626      	mov	r6, r4
 80026fe:	2800      	cmp	r0, #0
 8002700:	f040 8248 	bne.w	8002b94 <_dtoa_r+0x95c>
 8002704:	9f03      	ldr	r7, [sp, #12]
 8002706:	2331      	movs	r3, #49	; 0x31
 8002708:	f807 3b01 	strb.w	r3, [r7], #1
 800270c:	f10a 0a01 	add.w	sl, sl, #1
 8002710:	e244      	b.n	8002b9c <_dtoa_r+0x964>
 8002712:	07e2      	lsls	r2, r4, #31
 8002714:	d505      	bpl.n	8002722 <_dtoa_r+0x4ea>
 8002716:	e9d6 2300 	ldrd	r2, r3, [r6]
 800271a:	f7fd ff8d 	bl	8000638 <__aeabi_dmul>
 800271e:	3701      	adds	r7, #1
 8002720:	2301      	movs	r3, #1
 8002722:	1064      	asrs	r4, r4, #1
 8002724:	3608      	adds	r6, #8
 8002726:	e76d      	b.n	8002604 <_dtoa_r+0x3cc>
 8002728:	2702      	movs	r7, #2
 800272a:	e770      	b.n	800260e <_dtoa_r+0x3d6>
 800272c:	9c08      	ldr	r4, [sp, #32]
 800272e:	46d0      	mov	r8, sl
 8002730:	e78f      	b.n	8002652 <_dtoa_r+0x41a>
 8002732:	9903      	ldr	r1, [sp, #12]
 8002734:	4b29      	ldr	r3, [pc, #164]	; (80027dc <_dtoa_r+0x5a4>)
 8002736:	4421      	add	r1, r4
 8002738:	9112      	str	r1, [sp, #72]	; 0x48
 800273a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800273c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002740:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8002744:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002748:	2900      	cmp	r1, #0
 800274a:	d055      	beq.n	80027f8 <_dtoa_r+0x5c0>
 800274c:	4929      	ldr	r1, [pc, #164]	; (80027f4 <_dtoa_r+0x5bc>)
 800274e:	2000      	movs	r0, #0
 8002750:	f7fe f89c 	bl	800088c <__aeabi_ddiv>
 8002754:	463b      	mov	r3, r7
 8002756:	4632      	mov	r2, r6
 8002758:	f7fd fdb6 	bl	80002c8 <__aeabi_dsub>
 800275c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8002760:	9f03      	ldr	r7, [sp, #12]
 8002762:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002766:	f7fe fa17 	bl	8000b98 <__aeabi_d2iz>
 800276a:	4604      	mov	r4, r0
 800276c:	f7fd fefa 	bl	8000564 <__aeabi_i2d>
 8002770:	4602      	mov	r2, r0
 8002772:	460b      	mov	r3, r1
 8002774:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002778:	f7fd fda6 	bl	80002c8 <__aeabi_dsub>
 800277c:	3430      	adds	r4, #48	; 0x30
 800277e:	4602      	mov	r2, r0
 8002780:	460b      	mov	r3, r1
 8002782:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002786:	f807 4b01 	strb.w	r4, [r7], #1
 800278a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800278e:	f7fe f9c5 	bl	8000b1c <__aeabi_dcmplt>
 8002792:	2800      	cmp	r0, #0
 8002794:	d174      	bne.n	8002880 <_dtoa_r+0x648>
 8002796:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800279a:	4912      	ldr	r1, [pc, #72]	; (80027e4 <_dtoa_r+0x5ac>)
 800279c:	2000      	movs	r0, #0
 800279e:	f7fd fd93 	bl	80002c8 <__aeabi_dsub>
 80027a2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80027a6:	f7fe f9b9 	bl	8000b1c <__aeabi_dcmplt>
 80027aa:	2800      	cmp	r0, #0
 80027ac:	f040 80b7 	bne.w	800291e <_dtoa_r+0x6e6>
 80027b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80027b2:	429f      	cmp	r7, r3
 80027b4:	f43f af7a 	beq.w	80026ac <_dtoa_r+0x474>
 80027b8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80027bc:	4b0a      	ldr	r3, [pc, #40]	; (80027e8 <_dtoa_r+0x5b0>)
 80027be:	2200      	movs	r2, #0
 80027c0:	f7fd ff3a 	bl	8000638 <__aeabi_dmul>
 80027c4:	4b08      	ldr	r3, [pc, #32]	; (80027e8 <_dtoa_r+0x5b0>)
 80027c6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80027ca:	2200      	movs	r2, #0
 80027cc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80027d0:	f7fd ff32 	bl	8000638 <__aeabi_dmul>
 80027d4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80027d8:	e7c3      	b.n	8002762 <_dtoa_r+0x52a>
 80027da:	bf00      	nop
 80027dc:	08004480 	.word	0x08004480
 80027e0:	08004458 	.word	0x08004458
 80027e4:	3ff00000 	.word	0x3ff00000
 80027e8:	40240000 	.word	0x40240000
 80027ec:	401c0000 	.word	0x401c0000
 80027f0:	40140000 	.word	0x40140000
 80027f4:	3fe00000 	.word	0x3fe00000
 80027f8:	4630      	mov	r0, r6
 80027fa:	4639      	mov	r1, r7
 80027fc:	f7fd ff1c 	bl	8000638 <__aeabi_dmul>
 8002800:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8002804:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002806:	9c03      	ldr	r4, [sp, #12]
 8002808:	9314      	str	r3, [sp, #80]	; 0x50
 800280a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800280e:	f7fe f9c3 	bl	8000b98 <__aeabi_d2iz>
 8002812:	9015      	str	r0, [sp, #84]	; 0x54
 8002814:	f7fd fea6 	bl	8000564 <__aeabi_i2d>
 8002818:	4602      	mov	r2, r0
 800281a:	460b      	mov	r3, r1
 800281c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002820:	f7fd fd52 	bl	80002c8 <__aeabi_dsub>
 8002824:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002826:	3330      	adds	r3, #48	; 0x30
 8002828:	f804 3b01 	strb.w	r3, [r4], #1
 800282c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800282e:	429c      	cmp	r4, r3
 8002830:	4606      	mov	r6, r0
 8002832:	460f      	mov	r7, r1
 8002834:	f04f 0200 	mov.w	r2, #0
 8002838:	d124      	bne.n	8002884 <_dtoa_r+0x64c>
 800283a:	4ba4      	ldr	r3, [pc, #656]	; (8002acc <_dtoa_r+0x894>)
 800283c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002840:	f7fd fd44 	bl	80002cc <__adddf3>
 8002844:	4602      	mov	r2, r0
 8002846:	460b      	mov	r3, r1
 8002848:	4630      	mov	r0, r6
 800284a:	4639      	mov	r1, r7
 800284c:	f7fe f984 	bl	8000b58 <__aeabi_dcmpgt>
 8002850:	2800      	cmp	r0, #0
 8002852:	d163      	bne.n	800291c <_dtoa_r+0x6e4>
 8002854:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8002858:	499c      	ldr	r1, [pc, #624]	; (8002acc <_dtoa_r+0x894>)
 800285a:	2000      	movs	r0, #0
 800285c:	f7fd fd34 	bl	80002c8 <__aeabi_dsub>
 8002860:	4602      	mov	r2, r0
 8002862:	460b      	mov	r3, r1
 8002864:	4630      	mov	r0, r6
 8002866:	4639      	mov	r1, r7
 8002868:	f7fe f958 	bl	8000b1c <__aeabi_dcmplt>
 800286c:	2800      	cmp	r0, #0
 800286e:	f43f af1d 	beq.w	80026ac <_dtoa_r+0x474>
 8002872:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8002874:	1e7b      	subs	r3, r7, #1
 8002876:	9314      	str	r3, [sp, #80]	; 0x50
 8002878:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 800287c:	2b30      	cmp	r3, #48	; 0x30
 800287e:	d0f8      	beq.n	8002872 <_dtoa_r+0x63a>
 8002880:	46c2      	mov	sl, r8
 8002882:	e03b      	b.n	80028fc <_dtoa_r+0x6c4>
 8002884:	4b92      	ldr	r3, [pc, #584]	; (8002ad0 <_dtoa_r+0x898>)
 8002886:	f7fd fed7 	bl	8000638 <__aeabi_dmul>
 800288a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800288e:	e7bc      	b.n	800280a <_dtoa_r+0x5d2>
 8002890:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8002894:	9f03      	ldr	r7, [sp, #12]
 8002896:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800289a:	4640      	mov	r0, r8
 800289c:	4649      	mov	r1, r9
 800289e:	f7fd fff5 	bl	800088c <__aeabi_ddiv>
 80028a2:	f7fe f979 	bl	8000b98 <__aeabi_d2iz>
 80028a6:	4604      	mov	r4, r0
 80028a8:	f7fd fe5c 	bl	8000564 <__aeabi_i2d>
 80028ac:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80028b0:	f7fd fec2 	bl	8000638 <__aeabi_dmul>
 80028b4:	f104 0630 	add.w	r6, r4, #48	; 0x30
 80028b8:	4602      	mov	r2, r0
 80028ba:	460b      	mov	r3, r1
 80028bc:	4640      	mov	r0, r8
 80028be:	4649      	mov	r1, r9
 80028c0:	f7fd fd02 	bl	80002c8 <__aeabi_dsub>
 80028c4:	f807 6b01 	strb.w	r6, [r7], #1
 80028c8:	9e03      	ldr	r6, [sp, #12]
 80028ca:	f8dd c020 	ldr.w	ip, [sp, #32]
 80028ce:	1bbe      	subs	r6, r7, r6
 80028d0:	45b4      	cmp	ip, r6
 80028d2:	4602      	mov	r2, r0
 80028d4:	460b      	mov	r3, r1
 80028d6:	d136      	bne.n	8002946 <_dtoa_r+0x70e>
 80028d8:	f7fd fcf8 	bl	80002cc <__adddf3>
 80028dc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80028e0:	4680      	mov	r8, r0
 80028e2:	4689      	mov	r9, r1
 80028e4:	f7fe f938 	bl	8000b58 <__aeabi_dcmpgt>
 80028e8:	bb58      	cbnz	r0, 8002942 <_dtoa_r+0x70a>
 80028ea:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80028ee:	4640      	mov	r0, r8
 80028f0:	4649      	mov	r1, r9
 80028f2:	f7fe f909 	bl	8000b08 <__aeabi_dcmpeq>
 80028f6:	b108      	cbz	r0, 80028fc <_dtoa_r+0x6c4>
 80028f8:	07e1      	lsls	r1, r4, #31
 80028fa:	d422      	bmi.n	8002942 <_dtoa_r+0x70a>
 80028fc:	4628      	mov	r0, r5
 80028fe:	4659      	mov	r1, fp
 8002900:	f000 fae2 	bl	8002ec8 <_Bfree>
 8002904:	2300      	movs	r3, #0
 8002906:	703b      	strb	r3, [r7, #0]
 8002908:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800290a:	f10a 0001 	add.w	r0, sl, #1
 800290e:	6018      	str	r0, [r3, #0]
 8002910:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002912:	2b00      	cmp	r3, #0
 8002914:	f43f acdd 	beq.w	80022d2 <_dtoa_r+0x9a>
 8002918:	601f      	str	r7, [r3, #0]
 800291a:	e4da      	b.n	80022d2 <_dtoa_r+0x9a>
 800291c:	4627      	mov	r7, r4
 800291e:	463b      	mov	r3, r7
 8002920:	461f      	mov	r7, r3
 8002922:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002926:	2a39      	cmp	r2, #57	; 0x39
 8002928:	d107      	bne.n	800293a <_dtoa_r+0x702>
 800292a:	9a03      	ldr	r2, [sp, #12]
 800292c:	429a      	cmp	r2, r3
 800292e:	d1f7      	bne.n	8002920 <_dtoa_r+0x6e8>
 8002930:	9903      	ldr	r1, [sp, #12]
 8002932:	2230      	movs	r2, #48	; 0x30
 8002934:	f108 0801 	add.w	r8, r8, #1
 8002938:	700a      	strb	r2, [r1, #0]
 800293a:	781a      	ldrb	r2, [r3, #0]
 800293c:	3201      	adds	r2, #1
 800293e:	701a      	strb	r2, [r3, #0]
 8002940:	e79e      	b.n	8002880 <_dtoa_r+0x648>
 8002942:	46d0      	mov	r8, sl
 8002944:	e7eb      	b.n	800291e <_dtoa_r+0x6e6>
 8002946:	4b62      	ldr	r3, [pc, #392]	; (8002ad0 <_dtoa_r+0x898>)
 8002948:	2200      	movs	r2, #0
 800294a:	f7fd fe75 	bl	8000638 <__aeabi_dmul>
 800294e:	2200      	movs	r2, #0
 8002950:	2300      	movs	r3, #0
 8002952:	4680      	mov	r8, r0
 8002954:	4689      	mov	r9, r1
 8002956:	f7fe f8d7 	bl	8000b08 <__aeabi_dcmpeq>
 800295a:	2800      	cmp	r0, #0
 800295c:	d09b      	beq.n	8002896 <_dtoa_r+0x65e>
 800295e:	e7cd      	b.n	80028fc <_dtoa_r+0x6c4>
 8002960:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002962:	2a00      	cmp	r2, #0
 8002964:	f000 80d0 	beq.w	8002b08 <_dtoa_r+0x8d0>
 8002968:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800296a:	2a01      	cmp	r2, #1
 800296c:	f300 80b2 	bgt.w	8002ad4 <_dtoa_r+0x89c>
 8002970:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8002972:	2a00      	cmp	r2, #0
 8002974:	f000 80a6 	beq.w	8002ac4 <_dtoa_r+0x88c>
 8002978:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800297c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800297e:	9f06      	ldr	r7, [sp, #24]
 8002980:	9a06      	ldr	r2, [sp, #24]
 8002982:	441a      	add	r2, r3
 8002984:	9206      	str	r2, [sp, #24]
 8002986:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002988:	2101      	movs	r1, #1
 800298a:	441a      	add	r2, r3
 800298c:	4628      	mov	r0, r5
 800298e:	9209      	str	r2, [sp, #36]	; 0x24
 8002990:	f000 fb50 	bl	8003034 <__i2b>
 8002994:	4606      	mov	r6, r0
 8002996:	2f00      	cmp	r7, #0
 8002998:	dd0c      	ble.n	80029b4 <_dtoa_r+0x77c>
 800299a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800299c:	2b00      	cmp	r3, #0
 800299e:	dd09      	ble.n	80029b4 <_dtoa_r+0x77c>
 80029a0:	42bb      	cmp	r3, r7
 80029a2:	9a06      	ldr	r2, [sp, #24]
 80029a4:	bfa8      	it	ge
 80029a6:	463b      	movge	r3, r7
 80029a8:	1ad2      	subs	r2, r2, r3
 80029aa:	9206      	str	r2, [sp, #24]
 80029ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80029ae:	1aff      	subs	r7, r7, r3
 80029b0:	1ad3      	subs	r3, r2, r3
 80029b2:	9309      	str	r3, [sp, #36]	; 0x24
 80029b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80029b6:	b1f3      	cbz	r3, 80029f6 <_dtoa_r+0x7be>
 80029b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80029ba:	2b00      	cmp	r3, #0
 80029bc:	f000 80a8 	beq.w	8002b10 <_dtoa_r+0x8d8>
 80029c0:	2c00      	cmp	r4, #0
 80029c2:	dd10      	ble.n	80029e6 <_dtoa_r+0x7ae>
 80029c4:	4631      	mov	r1, r6
 80029c6:	4622      	mov	r2, r4
 80029c8:	4628      	mov	r0, r5
 80029ca:	f000 fbf1 	bl	80031b0 <__pow5mult>
 80029ce:	465a      	mov	r2, fp
 80029d0:	4601      	mov	r1, r0
 80029d2:	4606      	mov	r6, r0
 80029d4:	4628      	mov	r0, r5
 80029d6:	f000 fb43 	bl	8003060 <__multiply>
 80029da:	4659      	mov	r1, fp
 80029dc:	4680      	mov	r8, r0
 80029de:	4628      	mov	r0, r5
 80029e0:	f000 fa72 	bl	8002ec8 <_Bfree>
 80029e4:	46c3      	mov	fp, r8
 80029e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80029e8:	1b1a      	subs	r2, r3, r4
 80029ea:	d004      	beq.n	80029f6 <_dtoa_r+0x7be>
 80029ec:	4659      	mov	r1, fp
 80029ee:	4628      	mov	r0, r5
 80029f0:	f000 fbde 	bl	80031b0 <__pow5mult>
 80029f4:	4683      	mov	fp, r0
 80029f6:	2101      	movs	r1, #1
 80029f8:	4628      	mov	r0, r5
 80029fa:	f000 fb1b 	bl	8003034 <__i2b>
 80029fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002a00:	2b00      	cmp	r3, #0
 8002a02:	4604      	mov	r4, r0
 8002a04:	f340 8086 	ble.w	8002b14 <_dtoa_r+0x8dc>
 8002a08:	461a      	mov	r2, r3
 8002a0a:	4601      	mov	r1, r0
 8002a0c:	4628      	mov	r0, r5
 8002a0e:	f000 fbcf 	bl	80031b0 <__pow5mult>
 8002a12:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002a14:	2b01      	cmp	r3, #1
 8002a16:	4604      	mov	r4, r0
 8002a18:	dd7f      	ble.n	8002b1a <_dtoa_r+0x8e2>
 8002a1a:	f04f 0800 	mov.w	r8, #0
 8002a1e:	6923      	ldr	r3, [r4, #16]
 8002a20:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002a24:	6918      	ldr	r0, [r3, #16]
 8002a26:	f000 fab7 	bl	8002f98 <__hi0bits>
 8002a2a:	f1c0 0020 	rsb	r0, r0, #32
 8002a2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002a30:	4418      	add	r0, r3
 8002a32:	f010 001f 	ands.w	r0, r0, #31
 8002a36:	f000 8092 	beq.w	8002b5e <_dtoa_r+0x926>
 8002a3a:	f1c0 0320 	rsb	r3, r0, #32
 8002a3e:	2b04      	cmp	r3, #4
 8002a40:	f340 808a 	ble.w	8002b58 <_dtoa_r+0x920>
 8002a44:	f1c0 001c 	rsb	r0, r0, #28
 8002a48:	9b06      	ldr	r3, [sp, #24]
 8002a4a:	4403      	add	r3, r0
 8002a4c:	9306      	str	r3, [sp, #24]
 8002a4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002a50:	4403      	add	r3, r0
 8002a52:	4407      	add	r7, r0
 8002a54:	9309      	str	r3, [sp, #36]	; 0x24
 8002a56:	9b06      	ldr	r3, [sp, #24]
 8002a58:	2b00      	cmp	r3, #0
 8002a5a:	dd05      	ble.n	8002a68 <_dtoa_r+0x830>
 8002a5c:	4659      	mov	r1, fp
 8002a5e:	461a      	mov	r2, r3
 8002a60:	4628      	mov	r0, r5
 8002a62:	f000 fbff 	bl	8003264 <__lshift>
 8002a66:	4683      	mov	fp, r0
 8002a68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002a6a:	2b00      	cmp	r3, #0
 8002a6c:	dd05      	ble.n	8002a7a <_dtoa_r+0x842>
 8002a6e:	4621      	mov	r1, r4
 8002a70:	461a      	mov	r2, r3
 8002a72:	4628      	mov	r0, r5
 8002a74:	f000 fbf6 	bl	8003264 <__lshift>
 8002a78:	4604      	mov	r4, r0
 8002a7a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002a7c:	2b00      	cmp	r3, #0
 8002a7e:	d070      	beq.n	8002b62 <_dtoa_r+0x92a>
 8002a80:	4621      	mov	r1, r4
 8002a82:	4658      	mov	r0, fp
 8002a84:	f000 fc5e 	bl	8003344 <__mcmp>
 8002a88:	2800      	cmp	r0, #0
 8002a8a:	da6a      	bge.n	8002b62 <_dtoa_r+0x92a>
 8002a8c:	2300      	movs	r3, #0
 8002a8e:	4659      	mov	r1, fp
 8002a90:	220a      	movs	r2, #10
 8002a92:	4628      	mov	r0, r5
 8002a94:	f000 fa3a 	bl	8002f0c <__multadd>
 8002a98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002a9a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002a9e:	4683      	mov	fp, r0
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	f000 8194 	beq.w	8002dce <_dtoa_r+0xb96>
 8002aa6:	4631      	mov	r1, r6
 8002aa8:	2300      	movs	r3, #0
 8002aaa:	220a      	movs	r2, #10
 8002aac:	4628      	mov	r0, r5
 8002aae:	f000 fa2d 	bl	8002f0c <__multadd>
 8002ab2:	f1b9 0f00 	cmp.w	r9, #0
 8002ab6:	4606      	mov	r6, r0
 8002ab8:	f300 8093 	bgt.w	8002be2 <_dtoa_r+0x9aa>
 8002abc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002abe:	2b02      	cmp	r3, #2
 8002ac0:	dc57      	bgt.n	8002b72 <_dtoa_r+0x93a>
 8002ac2:	e08e      	b.n	8002be2 <_dtoa_r+0x9aa>
 8002ac4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002ac6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002aca:	e757      	b.n	800297c <_dtoa_r+0x744>
 8002acc:	3fe00000 	.word	0x3fe00000
 8002ad0:	40240000 	.word	0x40240000
 8002ad4:	9b08      	ldr	r3, [sp, #32]
 8002ad6:	1e5c      	subs	r4, r3, #1
 8002ad8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002ada:	42a3      	cmp	r3, r4
 8002adc:	bfbf      	itttt	lt
 8002ade:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8002ae0:	940a      	strlt	r4, [sp, #40]	; 0x28
 8002ae2:	1ae2      	sublt	r2, r4, r3
 8002ae4:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8002ae6:	bfb6      	itet	lt
 8002ae8:	189b      	addlt	r3, r3, r2
 8002aea:	1b1c      	subge	r4, r3, r4
 8002aec:	930e      	strlt	r3, [sp, #56]	; 0x38
 8002aee:	9b08      	ldr	r3, [sp, #32]
 8002af0:	bfb8      	it	lt
 8002af2:	2400      	movlt	r4, #0
 8002af4:	2b00      	cmp	r3, #0
 8002af6:	bfb9      	ittee	lt
 8002af8:	9b06      	ldrlt	r3, [sp, #24]
 8002afa:	9a08      	ldrlt	r2, [sp, #32]
 8002afc:	9f06      	ldrge	r7, [sp, #24]
 8002afe:	9b08      	ldrge	r3, [sp, #32]
 8002b00:	bfbc      	itt	lt
 8002b02:	1a9f      	sublt	r7, r3, r2
 8002b04:	2300      	movlt	r3, #0
 8002b06:	e73b      	b.n	8002980 <_dtoa_r+0x748>
 8002b08:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8002b0a:	9f06      	ldr	r7, [sp, #24]
 8002b0c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8002b0e:	e742      	b.n	8002996 <_dtoa_r+0x75e>
 8002b10:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002b12:	e76b      	b.n	80029ec <_dtoa_r+0x7b4>
 8002b14:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002b16:	2b01      	cmp	r3, #1
 8002b18:	dc19      	bgt.n	8002b4e <_dtoa_r+0x916>
 8002b1a:	9b04      	ldr	r3, [sp, #16]
 8002b1c:	b9bb      	cbnz	r3, 8002b4e <_dtoa_r+0x916>
 8002b1e:	9b05      	ldr	r3, [sp, #20]
 8002b20:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002b24:	b99b      	cbnz	r3, 8002b4e <_dtoa_r+0x916>
 8002b26:	9b05      	ldr	r3, [sp, #20]
 8002b28:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002b2c:	0d1b      	lsrs	r3, r3, #20
 8002b2e:	051b      	lsls	r3, r3, #20
 8002b30:	b183      	cbz	r3, 8002b54 <_dtoa_r+0x91c>
 8002b32:	9b06      	ldr	r3, [sp, #24]
 8002b34:	3301      	adds	r3, #1
 8002b36:	9306      	str	r3, [sp, #24]
 8002b38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002b3a:	3301      	adds	r3, #1
 8002b3c:	9309      	str	r3, [sp, #36]	; 0x24
 8002b3e:	f04f 0801 	mov.w	r8, #1
 8002b42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002b44:	2b00      	cmp	r3, #0
 8002b46:	f47f af6a 	bne.w	8002a1e <_dtoa_r+0x7e6>
 8002b4a:	2001      	movs	r0, #1
 8002b4c:	e76f      	b.n	8002a2e <_dtoa_r+0x7f6>
 8002b4e:	f04f 0800 	mov.w	r8, #0
 8002b52:	e7f6      	b.n	8002b42 <_dtoa_r+0x90a>
 8002b54:	4698      	mov	r8, r3
 8002b56:	e7f4      	b.n	8002b42 <_dtoa_r+0x90a>
 8002b58:	f43f af7d 	beq.w	8002a56 <_dtoa_r+0x81e>
 8002b5c:	4618      	mov	r0, r3
 8002b5e:	301c      	adds	r0, #28
 8002b60:	e772      	b.n	8002a48 <_dtoa_r+0x810>
 8002b62:	9b08      	ldr	r3, [sp, #32]
 8002b64:	2b00      	cmp	r3, #0
 8002b66:	dc36      	bgt.n	8002bd6 <_dtoa_r+0x99e>
 8002b68:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002b6a:	2b02      	cmp	r3, #2
 8002b6c:	dd33      	ble.n	8002bd6 <_dtoa_r+0x99e>
 8002b6e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002b72:	f1b9 0f00 	cmp.w	r9, #0
 8002b76:	d10d      	bne.n	8002b94 <_dtoa_r+0x95c>
 8002b78:	4621      	mov	r1, r4
 8002b7a:	464b      	mov	r3, r9
 8002b7c:	2205      	movs	r2, #5
 8002b7e:	4628      	mov	r0, r5
 8002b80:	f000 f9c4 	bl	8002f0c <__multadd>
 8002b84:	4601      	mov	r1, r0
 8002b86:	4604      	mov	r4, r0
 8002b88:	4658      	mov	r0, fp
 8002b8a:	f000 fbdb 	bl	8003344 <__mcmp>
 8002b8e:	2800      	cmp	r0, #0
 8002b90:	f73f adb8 	bgt.w	8002704 <_dtoa_r+0x4cc>
 8002b94:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002b96:	9f03      	ldr	r7, [sp, #12]
 8002b98:	ea6f 0a03 	mvn.w	sl, r3
 8002b9c:	f04f 0800 	mov.w	r8, #0
 8002ba0:	4621      	mov	r1, r4
 8002ba2:	4628      	mov	r0, r5
 8002ba4:	f000 f990 	bl	8002ec8 <_Bfree>
 8002ba8:	2e00      	cmp	r6, #0
 8002baa:	f43f aea7 	beq.w	80028fc <_dtoa_r+0x6c4>
 8002bae:	f1b8 0f00 	cmp.w	r8, #0
 8002bb2:	d005      	beq.n	8002bc0 <_dtoa_r+0x988>
 8002bb4:	45b0      	cmp	r8, r6
 8002bb6:	d003      	beq.n	8002bc0 <_dtoa_r+0x988>
 8002bb8:	4641      	mov	r1, r8
 8002bba:	4628      	mov	r0, r5
 8002bbc:	f000 f984 	bl	8002ec8 <_Bfree>
 8002bc0:	4631      	mov	r1, r6
 8002bc2:	4628      	mov	r0, r5
 8002bc4:	f000 f980 	bl	8002ec8 <_Bfree>
 8002bc8:	e698      	b.n	80028fc <_dtoa_r+0x6c4>
 8002bca:	2400      	movs	r4, #0
 8002bcc:	4626      	mov	r6, r4
 8002bce:	e7e1      	b.n	8002b94 <_dtoa_r+0x95c>
 8002bd0:	46c2      	mov	sl, r8
 8002bd2:	4626      	mov	r6, r4
 8002bd4:	e596      	b.n	8002704 <_dtoa_r+0x4cc>
 8002bd6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002bd8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002bdc:	2b00      	cmp	r3, #0
 8002bde:	f000 80fd 	beq.w	8002ddc <_dtoa_r+0xba4>
 8002be2:	2f00      	cmp	r7, #0
 8002be4:	dd05      	ble.n	8002bf2 <_dtoa_r+0x9ba>
 8002be6:	4631      	mov	r1, r6
 8002be8:	463a      	mov	r2, r7
 8002bea:	4628      	mov	r0, r5
 8002bec:	f000 fb3a 	bl	8003264 <__lshift>
 8002bf0:	4606      	mov	r6, r0
 8002bf2:	f1b8 0f00 	cmp.w	r8, #0
 8002bf6:	d05c      	beq.n	8002cb2 <_dtoa_r+0xa7a>
 8002bf8:	6871      	ldr	r1, [r6, #4]
 8002bfa:	4628      	mov	r0, r5
 8002bfc:	f000 f924 	bl	8002e48 <_Balloc>
 8002c00:	4607      	mov	r7, r0
 8002c02:	b928      	cbnz	r0, 8002c10 <_dtoa_r+0x9d8>
 8002c04:	4b80      	ldr	r3, [pc, #512]	; (8002e08 <_dtoa_r+0xbd0>)
 8002c06:	4602      	mov	r2, r0
 8002c08:	f240 21ea 	movw	r1, #746	; 0x2ea
 8002c0c:	f7ff bb28 	b.w	8002260 <_dtoa_r+0x28>
 8002c10:	6932      	ldr	r2, [r6, #16]
 8002c12:	3202      	adds	r2, #2
 8002c14:	0092      	lsls	r2, r2, #2
 8002c16:	f106 010c 	add.w	r1, r6, #12
 8002c1a:	300c      	adds	r0, #12
 8002c1c:	f000 f906 	bl	8002e2c <memcpy>
 8002c20:	2201      	movs	r2, #1
 8002c22:	4639      	mov	r1, r7
 8002c24:	4628      	mov	r0, r5
 8002c26:	f000 fb1d 	bl	8003264 <__lshift>
 8002c2a:	9b03      	ldr	r3, [sp, #12]
 8002c2c:	3301      	adds	r3, #1
 8002c2e:	9308      	str	r3, [sp, #32]
 8002c30:	9b03      	ldr	r3, [sp, #12]
 8002c32:	444b      	add	r3, r9
 8002c34:	930a      	str	r3, [sp, #40]	; 0x28
 8002c36:	9b04      	ldr	r3, [sp, #16]
 8002c38:	f003 0301 	and.w	r3, r3, #1
 8002c3c:	46b0      	mov	r8, r6
 8002c3e:	9309      	str	r3, [sp, #36]	; 0x24
 8002c40:	4606      	mov	r6, r0
 8002c42:	9b08      	ldr	r3, [sp, #32]
 8002c44:	4621      	mov	r1, r4
 8002c46:	3b01      	subs	r3, #1
 8002c48:	4658      	mov	r0, fp
 8002c4a:	9304      	str	r3, [sp, #16]
 8002c4c:	f7ff fa6c 	bl	8002128 <quorem>
 8002c50:	4603      	mov	r3, r0
 8002c52:	3330      	adds	r3, #48	; 0x30
 8002c54:	9006      	str	r0, [sp, #24]
 8002c56:	4641      	mov	r1, r8
 8002c58:	4658      	mov	r0, fp
 8002c5a:	930b      	str	r3, [sp, #44]	; 0x2c
 8002c5c:	f000 fb72 	bl	8003344 <__mcmp>
 8002c60:	4632      	mov	r2, r6
 8002c62:	4681      	mov	r9, r0
 8002c64:	4621      	mov	r1, r4
 8002c66:	4628      	mov	r0, r5
 8002c68:	f000 fb88 	bl	800337c <__mdiff>
 8002c6c:	68c2      	ldr	r2, [r0, #12]
 8002c6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002c70:	4607      	mov	r7, r0
 8002c72:	bb02      	cbnz	r2, 8002cb6 <_dtoa_r+0xa7e>
 8002c74:	4601      	mov	r1, r0
 8002c76:	4658      	mov	r0, fp
 8002c78:	f000 fb64 	bl	8003344 <__mcmp>
 8002c7c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002c7e:	4602      	mov	r2, r0
 8002c80:	4639      	mov	r1, r7
 8002c82:	4628      	mov	r0, r5
 8002c84:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 8002c88:	f000 f91e 	bl	8002ec8 <_Bfree>
 8002c8c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002c8e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002c90:	9f08      	ldr	r7, [sp, #32]
 8002c92:	ea43 0102 	orr.w	r1, r3, r2
 8002c96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002c98:	430b      	orrs	r3, r1
 8002c9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002c9c:	d10d      	bne.n	8002cba <_dtoa_r+0xa82>
 8002c9e:	2b39      	cmp	r3, #57	; 0x39
 8002ca0:	d029      	beq.n	8002cf6 <_dtoa_r+0xabe>
 8002ca2:	f1b9 0f00 	cmp.w	r9, #0
 8002ca6:	dd01      	ble.n	8002cac <_dtoa_r+0xa74>
 8002ca8:	9b06      	ldr	r3, [sp, #24]
 8002caa:	3331      	adds	r3, #49	; 0x31
 8002cac:	9a04      	ldr	r2, [sp, #16]
 8002cae:	7013      	strb	r3, [r2, #0]
 8002cb0:	e776      	b.n	8002ba0 <_dtoa_r+0x968>
 8002cb2:	4630      	mov	r0, r6
 8002cb4:	e7b9      	b.n	8002c2a <_dtoa_r+0x9f2>
 8002cb6:	2201      	movs	r2, #1
 8002cb8:	e7e2      	b.n	8002c80 <_dtoa_r+0xa48>
 8002cba:	f1b9 0f00 	cmp.w	r9, #0
 8002cbe:	db06      	blt.n	8002cce <_dtoa_r+0xa96>
 8002cc0:	9922      	ldr	r1, [sp, #136]	; 0x88
 8002cc2:	ea41 0909 	orr.w	r9, r1, r9
 8002cc6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002cc8:	ea59 0101 	orrs.w	r1, r9, r1
 8002ccc:	d120      	bne.n	8002d10 <_dtoa_r+0xad8>
 8002cce:	2a00      	cmp	r2, #0
 8002cd0:	ddec      	ble.n	8002cac <_dtoa_r+0xa74>
 8002cd2:	4659      	mov	r1, fp
 8002cd4:	2201      	movs	r2, #1
 8002cd6:	4628      	mov	r0, r5
 8002cd8:	9308      	str	r3, [sp, #32]
 8002cda:	f000 fac3 	bl	8003264 <__lshift>
 8002cde:	4621      	mov	r1, r4
 8002ce0:	4683      	mov	fp, r0
 8002ce2:	f000 fb2f 	bl	8003344 <__mcmp>
 8002ce6:	2800      	cmp	r0, #0
 8002ce8:	9b08      	ldr	r3, [sp, #32]
 8002cea:	dc02      	bgt.n	8002cf2 <_dtoa_r+0xaba>
 8002cec:	d1de      	bne.n	8002cac <_dtoa_r+0xa74>
 8002cee:	07da      	lsls	r2, r3, #31
 8002cf0:	d5dc      	bpl.n	8002cac <_dtoa_r+0xa74>
 8002cf2:	2b39      	cmp	r3, #57	; 0x39
 8002cf4:	d1d8      	bne.n	8002ca8 <_dtoa_r+0xa70>
 8002cf6:	9a04      	ldr	r2, [sp, #16]
 8002cf8:	2339      	movs	r3, #57	; 0x39
 8002cfa:	7013      	strb	r3, [r2, #0]
 8002cfc:	463b      	mov	r3, r7
 8002cfe:	461f      	mov	r7, r3
 8002d00:	3b01      	subs	r3, #1
 8002d02:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 8002d06:	2a39      	cmp	r2, #57	; 0x39
 8002d08:	d050      	beq.n	8002dac <_dtoa_r+0xb74>
 8002d0a:	3201      	adds	r2, #1
 8002d0c:	701a      	strb	r2, [r3, #0]
 8002d0e:	e747      	b.n	8002ba0 <_dtoa_r+0x968>
 8002d10:	2a00      	cmp	r2, #0
 8002d12:	dd03      	ble.n	8002d1c <_dtoa_r+0xae4>
 8002d14:	2b39      	cmp	r3, #57	; 0x39
 8002d16:	d0ee      	beq.n	8002cf6 <_dtoa_r+0xabe>
 8002d18:	3301      	adds	r3, #1
 8002d1a:	e7c7      	b.n	8002cac <_dtoa_r+0xa74>
 8002d1c:	9a08      	ldr	r2, [sp, #32]
 8002d1e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8002d20:	f802 3c01 	strb.w	r3, [r2, #-1]
 8002d24:	428a      	cmp	r2, r1
 8002d26:	d02a      	beq.n	8002d7e <_dtoa_r+0xb46>
 8002d28:	4659      	mov	r1, fp
 8002d2a:	2300      	movs	r3, #0
 8002d2c:	220a      	movs	r2, #10
 8002d2e:	4628      	mov	r0, r5
 8002d30:	f000 f8ec 	bl	8002f0c <__multadd>
 8002d34:	45b0      	cmp	r8, r6
 8002d36:	4683      	mov	fp, r0
 8002d38:	f04f 0300 	mov.w	r3, #0
 8002d3c:	f04f 020a 	mov.w	r2, #10
 8002d40:	4641      	mov	r1, r8
 8002d42:	4628      	mov	r0, r5
 8002d44:	d107      	bne.n	8002d56 <_dtoa_r+0xb1e>
 8002d46:	f000 f8e1 	bl	8002f0c <__multadd>
 8002d4a:	4680      	mov	r8, r0
 8002d4c:	4606      	mov	r6, r0
 8002d4e:	9b08      	ldr	r3, [sp, #32]
 8002d50:	3301      	adds	r3, #1
 8002d52:	9308      	str	r3, [sp, #32]
 8002d54:	e775      	b.n	8002c42 <_dtoa_r+0xa0a>
 8002d56:	f000 f8d9 	bl	8002f0c <__multadd>
 8002d5a:	4631      	mov	r1, r6
 8002d5c:	4680      	mov	r8, r0
 8002d5e:	2300      	movs	r3, #0
 8002d60:	220a      	movs	r2, #10
 8002d62:	4628      	mov	r0, r5
 8002d64:	f000 f8d2 	bl	8002f0c <__multadd>
 8002d68:	4606      	mov	r6, r0
 8002d6a:	e7f0      	b.n	8002d4e <_dtoa_r+0xb16>
 8002d6c:	f1b9 0f00 	cmp.w	r9, #0
 8002d70:	9a03      	ldr	r2, [sp, #12]
 8002d72:	bfcc      	ite	gt
 8002d74:	464f      	movgt	r7, r9
 8002d76:	2701      	movle	r7, #1
 8002d78:	4417      	add	r7, r2
 8002d7a:	f04f 0800 	mov.w	r8, #0
 8002d7e:	4659      	mov	r1, fp
 8002d80:	2201      	movs	r2, #1
 8002d82:	4628      	mov	r0, r5
 8002d84:	9308      	str	r3, [sp, #32]
 8002d86:	f000 fa6d 	bl	8003264 <__lshift>
 8002d8a:	4621      	mov	r1, r4
 8002d8c:	4683      	mov	fp, r0
 8002d8e:	f000 fad9 	bl	8003344 <__mcmp>
 8002d92:	2800      	cmp	r0, #0
 8002d94:	dcb2      	bgt.n	8002cfc <_dtoa_r+0xac4>
 8002d96:	d102      	bne.n	8002d9e <_dtoa_r+0xb66>
 8002d98:	9b08      	ldr	r3, [sp, #32]
 8002d9a:	07db      	lsls	r3, r3, #31
 8002d9c:	d4ae      	bmi.n	8002cfc <_dtoa_r+0xac4>
 8002d9e:	463b      	mov	r3, r7
 8002da0:	461f      	mov	r7, r3
 8002da2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002da6:	2a30      	cmp	r2, #48	; 0x30
 8002da8:	d0fa      	beq.n	8002da0 <_dtoa_r+0xb68>
 8002daa:	e6f9      	b.n	8002ba0 <_dtoa_r+0x968>
 8002dac:	9a03      	ldr	r2, [sp, #12]
 8002dae:	429a      	cmp	r2, r3
 8002db0:	d1a5      	bne.n	8002cfe <_dtoa_r+0xac6>
 8002db2:	f10a 0a01 	add.w	sl, sl, #1
 8002db6:	2331      	movs	r3, #49	; 0x31
 8002db8:	e779      	b.n	8002cae <_dtoa_r+0xa76>
 8002dba:	4b14      	ldr	r3, [pc, #80]	; (8002e0c <_dtoa_r+0xbd4>)
 8002dbc:	f7ff baa7 	b.w	800230e <_dtoa_r+0xd6>
 8002dc0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002dc2:	2b00      	cmp	r3, #0
 8002dc4:	f47f aa80 	bne.w	80022c8 <_dtoa_r+0x90>
 8002dc8:	4b11      	ldr	r3, [pc, #68]	; (8002e10 <_dtoa_r+0xbd8>)
 8002dca:	f7ff baa0 	b.w	800230e <_dtoa_r+0xd6>
 8002dce:	f1b9 0f00 	cmp.w	r9, #0
 8002dd2:	dc03      	bgt.n	8002ddc <_dtoa_r+0xba4>
 8002dd4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002dd6:	2b02      	cmp	r3, #2
 8002dd8:	f73f aecb 	bgt.w	8002b72 <_dtoa_r+0x93a>
 8002ddc:	9f03      	ldr	r7, [sp, #12]
 8002dde:	4621      	mov	r1, r4
 8002de0:	4658      	mov	r0, fp
 8002de2:	f7ff f9a1 	bl	8002128 <quorem>
 8002de6:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8002dea:	f807 3b01 	strb.w	r3, [r7], #1
 8002dee:	9a03      	ldr	r2, [sp, #12]
 8002df0:	1aba      	subs	r2, r7, r2
 8002df2:	4591      	cmp	r9, r2
 8002df4:	ddba      	ble.n	8002d6c <_dtoa_r+0xb34>
 8002df6:	4659      	mov	r1, fp
 8002df8:	2300      	movs	r3, #0
 8002dfa:	220a      	movs	r2, #10
 8002dfc:	4628      	mov	r0, r5
 8002dfe:	f000 f885 	bl	8002f0c <__multadd>
 8002e02:	4683      	mov	fp, r0
 8002e04:	e7eb      	b.n	8002dde <_dtoa_r+0xba6>
 8002e06:	bf00      	nop
 8002e08:	080043e7 	.word	0x080043e7
 8002e0c:	08004344 	.word	0x08004344
 8002e10:	08004368 	.word	0x08004368

08002e14 <_localeconv_r>:
 8002e14:	4800      	ldr	r0, [pc, #0]	; (8002e18 <_localeconv_r+0x4>)
 8002e16:	4770      	bx	lr
 8002e18:	20000154 	.word	0x20000154

08002e1c <malloc>:
 8002e1c:	4b02      	ldr	r3, [pc, #8]	; (8002e28 <malloc+0xc>)
 8002e1e:	4601      	mov	r1, r0
 8002e20:	6818      	ldr	r0, [r3, #0]
 8002e22:	f000 bc0d 	b.w	8003640 <_malloc_r>
 8002e26:	bf00      	nop
 8002e28:	20000000 	.word	0x20000000

08002e2c <memcpy>:
 8002e2c:	440a      	add	r2, r1
 8002e2e:	4291      	cmp	r1, r2
 8002e30:	f100 33ff 	add.w	r3, r0, #4294967295
 8002e34:	d100      	bne.n	8002e38 <memcpy+0xc>
 8002e36:	4770      	bx	lr
 8002e38:	b510      	push	{r4, lr}
 8002e3a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002e3e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002e42:	4291      	cmp	r1, r2
 8002e44:	d1f9      	bne.n	8002e3a <memcpy+0xe>
 8002e46:	bd10      	pop	{r4, pc}

08002e48 <_Balloc>:
 8002e48:	b570      	push	{r4, r5, r6, lr}
 8002e4a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8002e4c:	4604      	mov	r4, r0
 8002e4e:	460d      	mov	r5, r1
 8002e50:	b976      	cbnz	r6, 8002e70 <_Balloc+0x28>
 8002e52:	2010      	movs	r0, #16
 8002e54:	f7ff ffe2 	bl	8002e1c <malloc>
 8002e58:	4602      	mov	r2, r0
 8002e5a:	6260      	str	r0, [r4, #36]	; 0x24
 8002e5c:	b920      	cbnz	r0, 8002e68 <_Balloc+0x20>
 8002e5e:	4b18      	ldr	r3, [pc, #96]	; (8002ec0 <_Balloc+0x78>)
 8002e60:	4818      	ldr	r0, [pc, #96]	; (8002ec4 <_Balloc+0x7c>)
 8002e62:	2166      	movs	r1, #102	; 0x66
 8002e64:	f000 fc70 	bl	8003748 <__assert_func>
 8002e68:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8002e6c:	6006      	str	r6, [r0, #0]
 8002e6e:	60c6      	str	r6, [r0, #12]
 8002e70:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8002e72:	68f3      	ldr	r3, [r6, #12]
 8002e74:	b183      	cbz	r3, 8002e98 <_Balloc+0x50>
 8002e76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002e78:	68db      	ldr	r3, [r3, #12]
 8002e7a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8002e7e:	b9b8      	cbnz	r0, 8002eb0 <_Balloc+0x68>
 8002e80:	2101      	movs	r1, #1
 8002e82:	fa01 f605 	lsl.w	r6, r1, r5
 8002e86:	1d72      	adds	r2, r6, #5
 8002e88:	0092      	lsls	r2, r2, #2
 8002e8a:	4620      	mov	r0, r4
 8002e8c:	f000 fb5a 	bl	8003544 <_calloc_r>
 8002e90:	b160      	cbz	r0, 8002eac <_Balloc+0x64>
 8002e92:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8002e96:	e00e      	b.n	8002eb6 <_Balloc+0x6e>
 8002e98:	2221      	movs	r2, #33	; 0x21
 8002e9a:	2104      	movs	r1, #4
 8002e9c:	4620      	mov	r0, r4
 8002e9e:	f000 fb51 	bl	8003544 <_calloc_r>
 8002ea2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002ea4:	60f0      	str	r0, [r6, #12]
 8002ea6:	68db      	ldr	r3, [r3, #12]
 8002ea8:	2b00      	cmp	r3, #0
 8002eaa:	d1e4      	bne.n	8002e76 <_Balloc+0x2e>
 8002eac:	2000      	movs	r0, #0
 8002eae:	bd70      	pop	{r4, r5, r6, pc}
 8002eb0:	6802      	ldr	r2, [r0, #0]
 8002eb2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8002eb6:	2300      	movs	r3, #0
 8002eb8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002ebc:	e7f7      	b.n	8002eae <_Balloc+0x66>
 8002ebe:	bf00      	nop
 8002ec0:	08004375 	.word	0x08004375
 8002ec4:	080043f8 	.word	0x080043f8

08002ec8 <_Bfree>:
 8002ec8:	b570      	push	{r4, r5, r6, lr}
 8002eca:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8002ecc:	4605      	mov	r5, r0
 8002ece:	460c      	mov	r4, r1
 8002ed0:	b976      	cbnz	r6, 8002ef0 <_Bfree+0x28>
 8002ed2:	2010      	movs	r0, #16
 8002ed4:	f7ff ffa2 	bl	8002e1c <malloc>
 8002ed8:	4602      	mov	r2, r0
 8002eda:	6268      	str	r0, [r5, #36]	; 0x24
 8002edc:	b920      	cbnz	r0, 8002ee8 <_Bfree+0x20>
 8002ede:	4b09      	ldr	r3, [pc, #36]	; (8002f04 <_Bfree+0x3c>)
 8002ee0:	4809      	ldr	r0, [pc, #36]	; (8002f08 <_Bfree+0x40>)
 8002ee2:	218a      	movs	r1, #138	; 0x8a
 8002ee4:	f000 fc30 	bl	8003748 <__assert_func>
 8002ee8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8002eec:	6006      	str	r6, [r0, #0]
 8002eee:	60c6      	str	r6, [r0, #12]
 8002ef0:	b13c      	cbz	r4, 8002f02 <_Bfree+0x3a>
 8002ef2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002ef4:	6862      	ldr	r2, [r4, #4]
 8002ef6:	68db      	ldr	r3, [r3, #12]
 8002ef8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8002efc:	6021      	str	r1, [r4, #0]
 8002efe:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8002f02:	bd70      	pop	{r4, r5, r6, pc}
 8002f04:	08004375 	.word	0x08004375
 8002f08:	080043f8 	.word	0x080043f8

08002f0c <__multadd>:
 8002f0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002f10:	690d      	ldr	r5, [r1, #16]
 8002f12:	4607      	mov	r7, r0
 8002f14:	460c      	mov	r4, r1
 8002f16:	461e      	mov	r6, r3
 8002f18:	f101 0c14 	add.w	ip, r1, #20
 8002f1c:	2000      	movs	r0, #0
 8002f1e:	f8dc 3000 	ldr.w	r3, [ip]
 8002f22:	b299      	uxth	r1, r3
 8002f24:	fb02 6101 	mla	r1, r2, r1, r6
 8002f28:	0c1e      	lsrs	r6, r3, #16
 8002f2a:	0c0b      	lsrs	r3, r1, #16
 8002f2c:	fb02 3306 	mla	r3, r2, r6, r3
 8002f30:	b289      	uxth	r1, r1
 8002f32:	3001      	adds	r0, #1
 8002f34:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8002f38:	4285      	cmp	r5, r0
 8002f3a:	f84c 1b04 	str.w	r1, [ip], #4
 8002f3e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8002f42:	dcec      	bgt.n	8002f1e <__multadd+0x12>
 8002f44:	b30e      	cbz	r6, 8002f8a <__multadd+0x7e>
 8002f46:	68a3      	ldr	r3, [r4, #8]
 8002f48:	42ab      	cmp	r3, r5
 8002f4a:	dc19      	bgt.n	8002f80 <__multadd+0x74>
 8002f4c:	6861      	ldr	r1, [r4, #4]
 8002f4e:	4638      	mov	r0, r7
 8002f50:	3101      	adds	r1, #1
 8002f52:	f7ff ff79 	bl	8002e48 <_Balloc>
 8002f56:	4680      	mov	r8, r0
 8002f58:	b928      	cbnz	r0, 8002f66 <__multadd+0x5a>
 8002f5a:	4602      	mov	r2, r0
 8002f5c:	4b0c      	ldr	r3, [pc, #48]	; (8002f90 <__multadd+0x84>)
 8002f5e:	480d      	ldr	r0, [pc, #52]	; (8002f94 <__multadd+0x88>)
 8002f60:	21b5      	movs	r1, #181	; 0xb5
 8002f62:	f000 fbf1 	bl	8003748 <__assert_func>
 8002f66:	6922      	ldr	r2, [r4, #16]
 8002f68:	3202      	adds	r2, #2
 8002f6a:	f104 010c 	add.w	r1, r4, #12
 8002f6e:	0092      	lsls	r2, r2, #2
 8002f70:	300c      	adds	r0, #12
 8002f72:	f7ff ff5b 	bl	8002e2c <memcpy>
 8002f76:	4621      	mov	r1, r4
 8002f78:	4638      	mov	r0, r7
 8002f7a:	f7ff ffa5 	bl	8002ec8 <_Bfree>
 8002f7e:	4644      	mov	r4, r8
 8002f80:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8002f84:	3501      	adds	r5, #1
 8002f86:	615e      	str	r6, [r3, #20]
 8002f88:	6125      	str	r5, [r4, #16]
 8002f8a:	4620      	mov	r0, r4
 8002f8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002f90:	080043e7 	.word	0x080043e7
 8002f94:	080043f8 	.word	0x080043f8

08002f98 <__hi0bits>:
 8002f98:	0c02      	lsrs	r2, r0, #16
 8002f9a:	0412      	lsls	r2, r2, #16
 8002f9c:	4603      	mov	r3, r0
 8002f9e:	b9ca      	cbnz	r2, 8002fd4 <__hi0bits+0x3c>
 8002fa0:	0403      	lsls	r3, r0, #16
 8002fa2:	2010      	movs	r0, #16
 8002fa4:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8002fa8:	bf04      	itt	eq
 8002faa:	021b      	lsleq	r3, r3, #8
 8002fac:	3008      	addeq	r0, #8
 8002fae:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8002fb2:	bf04      	itt	eq
 8002fb4:	011b      	lsleq	r3, r3, #4
 8002fb6:	3004      	addeq	r0, #4
 8002fb8:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8002fbc:	bf04      	itt	eq
 8002fbe:	009b      	lsleq	r3, r3, #2
 8002fc0:	3002      	addeq	r0, #2
 8002fc2:	2b00      	cmp	r3, #0
 8002fc4:	db05      	blt.n	8002fd2 <__hi0bits+0x3a>
 8002fc6:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8002fca:	f100 0001 	add.w	r0, r0, #1
 8002fce:	bf08      	it	eq
 8002fd0:	2020      	moveq	r0, #32
 8002fd2:	4770      	bx	lr
 8002fd4:	2000      	movs	r0, #0
 8002fd6:	e7e5      	b.n	8002fa4 <__hi0bits+0xc>

08002fd8 <__lo0bits>:
 8002fd8:	6803      	ldr	r3, [r0, #0]
 8002fda:	4602      	mov	r2, r0
 8002fdc:	f013 0007 	ands.w	r0, r3, #7
 8002fe0:	d00b      	beq.n	8002ffa <__lo0bits+0x22>
 8002fe2:	07d9      	lsls	r1, r3, #31
 8002fe4:	d421      	bmi.n	800302a <__lo0bits+0x52>
 8002fe6:	0798      	lsls	r0, r3, #30
 8002fe8:	bf49      	itett	mi
 8002fea:	085b      	lsrmi	r3, r3, #1
 8002fec:	089b      	lsrpl	r3, r3, #2
 8002fee:	2001      	movmi	r0, #1
 8002ff0:	6013      	strmi	r3, [r2, #0]
 8002ff2:	bf5c      	itt	pl
 8002ff4:	6013      	strpl	r3, [r2, #0]
 8002ff6:	2002      	movpl	r0, #2
 8002ff8:	4770      	bx	lr
 8002ffa:	b299      	uxth	r1, r3
 8002ffc:	b909      	cbnz	r1, 8003002 <__lo0bits+0x2a>
 8002ffe:	0c1b      	lsrs	r3, r3, #16
 8003000:	2010      	movs	r0, #16
 8003002:	b2d9      	uxtb	r1, r3
 8003004:	b909      	cbnz	r1, 800300a <__lo0bits+0x32>
 8003006:	3008      	adds	r0, #8
 8003008:	0a1b      	lsrs	r3, r3, #8
 800300a:	0719      	lsls	r1, r3, #28
 800300c:	bf04      	itt	eq
 800300e:	091b      	lsreq	r3, r3, #4
 8003010:	3004      	addeq	r0, #4
 8003012:	0799      	lsls	r1, r3, #30
 8003014:	bf04      	itt	eq
 8003016:	089b      	lsreq	r3, r3, #2
 8003018:	3002      	addeq	r0, #2
 800301a:	07d9      	lsls	r1, r3, #31
 800301c:	d403      	bmi.n	8003026 <__lo0bits+0x4e>
 800301e:	085b      	lsrs	r3, r3, #1
 8003020:	f100 0001 	add.w	r0, r0, #1
 8003024:	d003      	beq.n	800302e <__lo0bits+0x56>
 8003026:	6013      	str	r3, [r2, #0]
 8003028:	4770      	bx	lr
 800302a:	2000      	movs	r0, #0
 800302c:	4770      	bx	lr
 800302e:	2020      	movs	r0, #32
 8003030:	4770      	bx	lr
	...

08003034 <__i2b>:
 8003034:	b510      	push	{r4, lr}
 8003036:	460c      	mov	r4, r1
 8003038:	2101      	movs	r1, #1
 800303a:	f7ff ff05 	bl	8002e48 <_Balloc>
 800303e:	4602      	mov	r2, r0
 8003040:	b928      	cbnz	r0, 800304e <__i2b+0x1a>
 8003042:	4b05      	ldr	r3, [pc, #20]	; (8003058 <__i2b+0x24>)
 8003044:	4805      	ldr	r0, [pc, #20]	; (800305c <__i2b+0x28>)
 8003046:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800304a:	f000 fb7d 	bl	8003748 <__assert_func>
 800304e:	2301      	movs	r3, #1
 8003050:	6144      	str	r4, [r0, #20]
 8003052:	6103      	str	r3, [r0, #16]
 8003054:	bd10      	pop	{r4, pc}
 8003056:	bf00      	nop
 8003058:	080043e7 	.word	0x080043e7
 800305c:	080043f8 	.word	0x080043f8

08003060 <__multiply>:
 8003060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003064:	4691      	mov	r9, r2
 8003066:	690a      	ldr	r2, [r1, #16]
 8003068:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800306c:	429a      	cmp	r2, r3
 800306e:	bfb8      	it	lt
 8003070:	460b      	movlt	r3, r1
 8003072:	460c      	mov	r4, r1
 8003074:	bfbc      	itt	lt
 8003076:	464c      	movlt	r4, r9
 8003078:	4699      	movlt	r9, r3
 800307a:	6927      	ldr	r7, [r4, #16]
 800307c:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003080:	68a3      	ldr	r3, [r4, #8]
 8003082:	6861      	ldr	r1, [r4, #4]
 8003084:	eb07 060a 	add.w	r6, r7, sl
 8003088:	42b3      	cmp	r3, r6
 800308a:	b085      	sub	sp, #20
 800308c:	bfb8      	it	lt
 800308e:	3101      	addlt	r1, #1
 8003090:	f7ff feda 	bl	8002e48 <_Balloc>
 8003094:	b930      	cbnz	r0, 80030a4 <__multiply+0x44>
 8003096:	4602      	mov	r2, r0
 8003098:	4b43      	ldr	r3, [pc, #268]	; (80031a8 <__multiply+0x148>)
 800309a:	4844      	ldr	r0, [pc, #272]	; (80031ac <__multiply+0x14c>)
 800309c:	f240 115d 	movw	r1, #349	; 0x15d
 80030a0:	f000 fb52 	bl	8003748 <__assert_func>
 80030a4:	f100 0514 	add.w	r5, r0, #20
 80030a8:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80030ac:	462b      	mov	r3, r5
 80030ae:	2200      	movs	r2, #0
 80030b0:	4543      	cmp	r3, r8
 80030b2:	d321      	bcc.n	80030f8 <__multiply+0x98>
 80030b4:	f104 0314 	add.w	r3, r4, #20
 80030b8:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80030bc:	f109 0314 	add.w	r3, r9, #20
 80030c0:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80030c4:	9202      	str	r2, [sp, #8]
 80030c6:	1b3a      	subs	r2, r7, r4
 80030c8:	3a15      	subs	r2, #21
 80030ca:	f022 0203 	bic.w	r2, r2, #3
 80030ce:	3204      	adds	r2, #4
 80030d0:	f104 0115 	add.w	r1, r4, #21
 80030d4:	428f      	cmp	r7, r1
 80030d6:	bf38      	it	cc
 80030d8:	2204      	movcc	r2, #4
 80030da:	9201      	str	r2, [sp, #4]
 80030dc:	9a02      	ldr	r2, [sp, #8]
 80030de:	9303      	str	r3, [sp, #12]
 80030e0:	429a      	cmp	r2, r3
 80030e2:	d80c      	bhi.n	80030fe <__multiply+0x9e>
 80030e4:	2e00      	cmp	r6, #0
 80030e6:	dd03      	ble.n	80030f0 <__multiply+0x90>
 80030e8:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80030ec:	2b00      	cmp	r3, #0
 80030ee:	d059      	beq.n	80031a4 <__multiply+0x144>
 80030f0:	6106      	str	r6, [r0, #16]
 80030f2:	b005      	add	sp, #20
 80030f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030f8:	f843 2b04 	str.w	r2, [r3], #4
 80030fc:	e7d8      	b.n	80030b0 <__multiply+0x50>
 80030fe:	f8b3 a000 	ldrh.w	sl, [r3]
 8003102:	f1ba 0f00 	cmp.w	sl, #0
 8003106:	d023      	beq.n	8003150 <__multiply+0xf0>
 8003108:	f104 0e14 	add.w	lr, r4, #20
 800310c:	46a9      	mov	r9, r5
 800310e:	f04f 0c00 	mov.w	ip, #0
 8003112:	f85e 2b04 	ldr.w	r2, [lr], #4
 8003116:	f8d9 1000 	ldr.w	r1, [r9]
 800311a:	fa1f fb82 	uxth.w	fp, r2
 800311e:	b289      	uxth	r1, r1
 8003120:	fb0a 110b 	mla	r1, sl, fp, r1
 8003124:	4461      	add	r1, ip
 8003126:	f8d9 c000 	ldr.w	ip, [r9]
 800312a:	0c12      	lsrs	r2, r2, #16
 800312c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8003130:	fb0a c202 	mla	r2, sl, r2, ip
 8003134:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8003138:	b289      	uxth	r1, r1
 800313a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800313e:	4577      	cmp	r7, lr
 8003140:	f849 1b04 	str.w	r1, [r9], #4
 8003144:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8003148:	d8e3      	bhi.n	8003112 <__multiply+0xb2>
 800314a:	9a01      	ldr	r2, [sp, #4]
 800314c:	f845 c002 	str.w	ip, [r5, r2]
 8003150:	9a03      	ldr	r2, [sp, #12]
 8003152:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8003156:	3304      	adds	r3, #4
 8003158:	f1b9 0f00 	cmp.w	r9, #0
 800315c:	d020      	beq.n	80031a0 <__multiply+0x140>
 800315e:	6829      	ldr	r1, [r5, #0]
 8003160:	f104 0c14 	add.w	ip, r4, #20
 8003164:	46ae      	mov	lr, r5
 8003166:	f04f 0a00 	mov.w	sl, #0
 800316a:	f8bc b000 	ldrh.w	fp, [ip]
 800316e:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8003172:	fb09 220b 	mla	r2, r9, fp, r2
 8003176:	4492      	add	sl, r2
 8003178:	b289      	uxth	r1, r1
 800317a:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800317e:	f84e 1b04 	str.w	r1, [lr], #4
 8003182:	f85c 2b04 	ldr.w	r2, [ip], #4
 8003186:	f8be 1000 	ldrh.w	r1, [lr]
 800318a:	0c12      	lsrs	r2, r2, #16
 800318c:	fb09 1102 	mla	r1, r9, r2, r1
 8003190:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8003194:	4567      	cmp	r7, ip
 8003196:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800319a:	d8e6      	bhi.n	800316a <__multiply+0x10a>
 800319c:	9a01      	ldr	r2, [sp, #4]
 800319e:	50a9      	str	r1, [r5, r2]
 80031a0:	3504      	adds	r5, #4
 80031a2:	e79b      	b.n	80030dc <__multiply+0x7c>
 80031a4:	3e01      	subs	r6, #1
 80031a6:	e79d      	b.n	80030e4 <__multiply+0x84>
 80031a8:	080043e7 	.word	0x080043e7
 80031ac:	080043f8 	.word	0x080043f8

080031b0 <__pow5mult>:
 80031b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80031b4:	4615      	mov	r5, r2
 80031b6:	f012 0203 	ands.w	r2, r2, #3
 80031ba:	4606      	mov	r6, r0
 80031bc:	460f      	mov	r7, r1
 80031be:	d007      	beq.n	80031d0 <__pow5mult+0x20>
 80031c0:	4c25      	ldr	r4, [pc, #148]	; (8003258 <__pow5mult+0xa8>)
 80031c2:	3a01      	subs	r2, #1
 80031c4:	2300      	movs	r3, #0
 80031c6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80031ca:	f7ff fe9f 	bl	8002f0c <__multadd>
 80031ce:	4607      	mov	r7, r0
 80031d0:	10ad      	asrs	r5, r5, #2
 80031d2:	d03d      	beq.n	8003250 <__pow5mult+0xa0>
 80031d4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80031d6:	b97c      	cbnz	r4, 80031f8 <__pow5mult+0x48>
 80031d8:	2010      	movs	r0, #16
 80031da:	f7ff fe1f 	bl	8002e1c <malloc>
 80031de:	4602      	mov	r2, r0
 80031e0:	6270      	str	r0, [r6, #36]	; 0x24
 80031e2:	b928      	cbnz	r0, 80031f0 <__pow5mult+0x40>
 80031e4:	4b1d      	ldr	r3, [pc, #116]	; (800325c <__pow5mult+0xac>)
 80031e6:	481e      	ldr	r0, [pc, #120]	; (8003260 <__pow5mult+0xb0>)
 80031e8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 80031ec:	f000 faac 	bl	8003748 <__assert_func>
 80031f0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80031f4:	6004      	str	r4, [r0, #0]
 80031f6:	60c4      	str	r4, [r0, #12]
 80031f8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80031fc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003200:	b94c      	cbnz	r4, 8003216 <__pow5mult+0x66>
 8003202:	f240 2171 	movw	r1, #625	; 0x271
 8003206:	4630      	mov	r0, r6
 8003208:	f7ff ff14 	bl	8003034 <__i2b>
 800320c:	2300      	movs	r3, #0
 800320e:	f8c8 0008 	str.w	r0, [r8, #8]
 8003212:	4604      	mov	r4, r0
 8003214:	6003      	str	r3, [r0, #0]
 8003216:	f04f 0900 	mov.w	r9, #0
 800321a:	07eb      	lsls	r3, r5, #31
 800321c:	d50a      	bpl.n	8003234 <__pow5mult+0x84>
 800321e:	4639      	mov	r1, r7
 8003220:	4622      	mov	r2, r4
 8003222:	4630      	mov	r0, r6
 8003224:	f7ff ff1c 	bl	8003060 <__multiply>
 8003228:	4639      	mov	r1, r7
 800322a:	4680      	mov	r8, r0
 800322c:	4630      	mov	r0, r6
 800322e:	f7ff fe4b 	bl	8002ec8 <_Bfree>
 8003232:	4647      	mov	r7, r8
 8003234:	106d      	asrs	r5, r5, #1
 8003236:	d00b      	beq.n	8003250 <__pow5mult+0xa0>
 8003238:	6820      	ldr	r0, [r4, #0]
 800323a:	b938      	cbnz	r0, 800324c <__pow5mult+0x9c>
 800323c:	4622      	mov	r2, r4
 800323e:	4621      	mov	r1, r4
 8003240:	4630      	mov	r0, r6
 8003242:	f7ff ff0d 	bl	8003060 <__multiply>
 8003246:	6020      	str	r0, [r4, #0]
 8003248:	f8c0 9000 	str.w	r9, [r0]
 800324c:	4604      	mov	r4, r0
 800324e:	e7e4      	b.n	800321a <__pow5mult+0x6a>
 8003250:	4638      	mov	r0, r7
 8003252:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003256:	bf00      	nop
 8003258:	08004548 	.word	0x08004548
 800325c:	08004375 	.word	0x08004375
 8003260:	080043f8 	.word	0x080043f8

08003264 <__lshift>:
 8003264:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003268:	460c      	mov	r4, r1
 800326a:	6849      	ldr	r1, [r1, #4]
 800326c:	6923      	ldr	r3, [r4, #16]
 800326e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003272:	68a3      	ldr	r3, [r4, #8]
 8003274:	4607      	mov	r7, r0
 8003276:	4691      	mov	r9, r2
 8003278:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800327c:	f108 0601 	add.w	r6, r8, #1
 8003280:	42b3      	cmp	r3, r6
 8003282:	db0b      	blt.n	800329c <__lshift+0x38>
 8003284:	4638      	mov	r0, r7
 8003286:	f7ff fddf 	bl	8002e48 <_Balloc>
 800328a:	4605      	mov	r5, r0
 800328c:	b948      	cbnz	r0, 80032a2 <__lshift+0x3e>
 800328e:	4602      	mov	r2, r0
 8003290:	4b2a      	ldr	r3, [pc, #168]	; (800333c <__lshift+0xd8>)
 8003292:	482b      	ldr	r0, [pc, #172]	; (8003340 <__lshift+0xdc>)
 8003294:	f240 11d9 	movw	r1, #473	; 0x1d9
 8003298:	f000 fa56 	bl	8003748 <__assert_func>
 800329c:	3101      	adds	r1, #1
 800329e:	005b      	lsls	r3, r3, #1
 80032a0:	e7ee      	b.n	8003280 <__lshift+0x1c>
 80032a2:	2300      	movs	r3, #0
 80032a4:	f100 0114 	add.w	r1, r0, #20
 80032a8:	f100 0210 	add.w	r2, r0, #16
 80032ac:	4618      	mov	r0, r3
 80032ae:	4553      	cmp	r3, sl
 80032b0:	db37      	blt.n	8003322 <__lshift+0xbe>
 80032b2:	6920      	ldr	r0, [r4, #16]
 80032b4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80032b8:	f104 0314 	add.w	r3, r4, #20
 80032bc:	f019 091f 	ands.w	r9, r9, #31
 80032c0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80032c4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80032c8:	d02f      	beq.n	800332a <__lshift+0xc6>
 80032ca:	f1c9 0e20 	rsb	lr, r9, #32
 80032ce:	468a      	mov	sl, r1
 80032d0:	f04f 0c00 	mov.w	ip, #0
 80032d4:	681a      	ldr	r2, [r3, #0]
 80032d6:	fa02 f209 	lsl.w	r2, r2, r9
 80032da:	ea42 020c 	orr.w	r2, r2, ip
 80032de:	f84a 2b04 	str.w	r2, [sl], #4
 80032e2:	f853 2b04 	ldr.w	r2, [r3], #4
 80032e6:	4298      	cmp	r0, r3
 80032e8:	fa22 fc0e 	lsr.w	ip, r2, lr
 80032ec:	d8f2      	bhi.n	80032d4 <__lshift+0x70>
 80032ee:	1b03      	subs	r3, r0, r4
 80032f0:	3b15      	subs	r3, #21
 80032f2:	f023 0303 	bic.w	r3, r3, #3
 80032f6:	3304      	adds	r3, #4
 80032f8:	f104 0215 	add.w	r2, r4, #21
 80032fc:	4290      	cmp	r0, r2
 80032fe:	bf38      	it	cc
 8003300:	2304      	movcc	r3, #4
 8003302:	f841 c003 	str.w	ip, [r1, r3]
 8003306:	f1bc 0f00 	cmp.w	ip, #0
 800330a:	d001      	beq.n	8003310 <__lshift+0xac>
 800330c:	f108 0602 	add.w	r6, r8, #2
 8003310:	3e01      	subs	r6, #1
 8003312:	4638      	mov	r0, r7
 8003314:	612e      	str	r6, [r5, #16]
 8003316:	4621      	mov	r1, r4
 8003318:	f7ff fdd6 	bl	8002ec8 <_Bfree>
 800331c:	4628      	mov	r0, r5
 800331e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003322:	f842 0f04 	str.w	r0, [r2, #4]!
 8003326:	3301      	adds	r3, #1
 8003328:	e7c1      	b.n	80032ae <__lshift+0x4a>
 800332a:	3904      	subs	r1, #4
 800332c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003330:	f841 2f04 	str.w	r2, [r1, #4]!
 8003334:	4298      	cmp	r0, r3
 8003336:	d8f9      	bhi.n	800332c <__lshift+0xc8>
 8003338:	e7ea      	b.n	8003310 <__lshift+0xac>
 800333a:	bf00      	nop
 800333c:	080043e7 	.word	0x080043e7
 8003340:	080043f8 	.word	0x080043f8

08003344 <__mcmp>:
 8003344:	690a      	ldr	r2, [r1, #16]
 8003346:	4603      	mov	r3, r0
 8003348:	6900      	ldr	r0, [r0, #16]
 800334a:	1a80      	subs	r0, r0, r2
 800334c:	b530      	push	{r4, r5, lr}
 800334e:	d10d      	bne.n	800336c <__mcmp+0x28>
 8003350:	3314      	adds	r3, #20
 8003352:	3114      	adds	r1, #20
 8003354:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003358:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800335c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003360:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003364:	4295      	cmp	r5, r2
 8003366:	d002      	beq.n	800336e <__mcmp+0x2a>
 8003368:	d304      	bcc.n	8003374 <__mcmp+0x30>
 800336a:	2001      	movs	r0, #1
 800336c:	bd30      	pop	{r4, r5, pc}
 800336e:	42a3      	cmp	r3, r4
 8003370:	d3f4      	bcc.n	800335c <__mcmp+0x18>
 8003372:	e7fb      	b.n	800336c <__mcmp+0x28>
 8003374:	f04f 30ff 	mov.w	r0, #4294967295
 8003378:	e7f8      	b.n	800336c <__mcmp+0x28>
	...

0800337c <__mdiff>:
 800337c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003380:	460d      	mov	r5, r1
 8003382:	4607      	mov	r7, r0
 8003384:	4611      	mov	r1, r2
 8003386:	4628      	mov	r0, r5
 8003388:	4614      	mov	r4, r2
 800338a:	f7ff ffdb 	bl	8003344 <__mcmp>
 800338e:	1e06      	subs	r6, r0, #0
 8003390:	d111      	bne.n	80033b6 <__mdiff+0x3a>
 8003392:	4631      	mov	r1, r6
 8003394:	4638      	mov	r0, r7
 8003396:	f7ff fd57 	bl	8002e48 <_Balloc>
 800339a:	4602      	mov	r2, r0
 800339c:	b928      	cbnz	r0, 80033aa <__mdiff+0x2e>
 800339e:	4b39      	ldr	r3, [pc, #228]	; (8003484 <__mdiff+0x108>)
 80033a0:	f240 2132 	movw	r1, #562	; 0x232
 80033a4:	4838      	ldr	r0, [pc, #224]	; (8003488 <__mdiff+0x10c>)
 80033a6:	f000 f9cf 	bl	8003748 <__assert_func>
 80033aa:	2301      	movs	r3, #1
 80033ac:	e9c0 3604 	strd	r3, r6, [r0, #16]
 80033b0:	4610      	mov	r0, r2
 80033b2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80033b6:	bfa4      	itt	ge
 80033b8:	4623      	movge	r3, r4
 80033ba:	462c      	movge	r4, r5
 80033bc:	4638      	mov	r0, r7
 80033be:	6861      	ldr	r1, [r4, #4]
 80033c0:	bfa6      	itte	ge
 80033c2:	461d      	movge	r5, r3
 80033c4:	2600      	movge	r6, #0
 80033c6:	2601      	movlt	r6, #1
 80033c8:	f7ff fd3e 	bl	8002e48 <_Balloc>
 80033cc:	4602      	mov	r2, r0
 80033ce:	b918      	cbnz	r0, 80033d8 <__mdiff+0x5c>
 80033d0:	4b2c      	ldr	r3, [pc, #176]	; (8003484 <__mdiff+0x108>)
 80033d2:	f44f 7110 	mov.w	r1, #576	; 0x240
 80033d6:	e7e5      	b.n	80033a4 <__mdiff+0x28>
 80033d8:	6927      	ldr	r7, [r4, #16]
 80033da:	60c6      	str	r6, [r0, #12]
 80033dc:	692e      	ldr	r6, [r5, #16]
 80033de:	f104 0014 	add.w	r0, r4, #20
 80033e2:	f105 0914 	add.w	r9, r5, #20
 80033e6:	f102 0e14 	add.w	lr, r2, #20
 80033ea:	eb00 0c87 	add.w	ip, r0, r7, lsl #2
 80033ee:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 80033f2:	3410      	adds	r4, #16
 80033f4:	46f2      	mov	sl, lr
 80033f6:	2100      	movs	r1, #0
 80033f8:	f859 3b04 	ldr.w	r3, [r9], #4
 80033fc:	f854 bf04 	ldr.w	fp, [r4, #4]!
 8003400:	fa1f f883 	uxth.w	r8, r3
 8003404:	fa11 f18b 	uxtah	r1, r1, fp
 8003408:	0c1b      	lsrs	r3, r3, #16
 800340a:	eba1 0808 	sub.w	r8, r1, r8
 800340e:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8003412:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8003416:	fa1f f888 	uxth.w	r8, r8
 800341a:	1419      	asrs	r1, r3, #16
 800341c:	454e      	cmp	r6, r9
 800341e:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8003422:	f84a 3b04 	str.w	r3, [sl], #4
 8003426:	d8e7      	bhi.n	80033f8 <__mdiff+0x7c>
 8003428:	1b73      	subs	r3, r6, r5
 800342a:	3b15      	subs	r3, #21
 800342c:	f023 0303 	bic.w	r3, r3, #3
 8003430:	3304      	adds	r3, #4
 8003432:	3515      	adds	r5, #21
 8003434:	42ae      	cmp	r6, r5
 8003436:	bf38      	it	cc
 8003438:	2304      	movcc	r3, #4
 800343a:	4418      	add	r0, r3
 800343c:	4473      	add	r3, lr
 800343e:	469e      	mov	lr, r3
 8003440:	4606      	mov	r6, r0
 8003442:	4566      	cmp	r6, ip
 8003444:	d30e      	bcc.n	8003464 <__mdiff+0xe8>
 8003446:	f10c 0103 	add.w	r1, ip, #3
 800344a:	1a09      	subs	r1, r1, r0
 800344c:	f021 0103 	bic.w	r1, r1, #3
 8003450:	3803      	subs	r0, #3
 8003452:	4584      	cmp	ip, r0
 8003454:	bf38      	it	cc
 8003456:	2100      	movcc	r1, #0
 8003458:	4419      	add	r1, r3
 800345a:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 800345e:	b17b      	cbz	r3, 8003480 <__mdiff+0x104>
 8003460:	6117      	str	r7, [r2, #16]
 8003462:	e7a5      	b.n	80033b0 <__mdiff+0x34>
 8003464:	f856 8b04 	ldr.w	r8, [r6], #4
 8003468:	fa11 f488 	uxtah	r4, r1, r8
 800346c:	1425      	asrs	r5, r4, #16
 800346e:	eb05 4518 	add.w	r5, r5, r8, lsr #16
 8003472:	b2a4      	uxth	r4, r4
 8003474:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8003478:	f84e 4b04 	str.w	r4, [lr], #4
 800347c:	1429      	asrs	r1, r5, #16
 800347e:	e7e0      	b.n	8003442 <__mdiff+0xc6>
 8003480:	3f01      	subs	r7, #1
 8003482:	e7ea      	b.n	800345a <__mdiff+0xde>
 8003484:	080043e7 	.word	0x080043e7
 8003488:	080043f8 	.word	0x080043f8

0800348c <__d2b>:
 800348c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8003490:	2101      	movs	r1, #1
 8003492:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 8003496:	4690      	mov	r8, r2
 8003498:	461d      	mov	r5, r3
 800349a:	f7ff fcd5 	bl	8002e48 <_Balloc>
 800349e:	4604      	mov	r4, r0
 80034a0:	b930      	cbnz	r0, 80034b0 <__d2b+0x24>
 80034a2:	4602      	mov	r2, r0
 80034a4:	4b25      	ldr	r3, [pc, #148]	; (800353c <__d2b+0xb0>)
 80034a6:	4826      	ldr	r0, [pc, #152]	; (8003540 <__d2b+0xb4>)
 80034a8:	f240 310a 	movw	r1, #778	; 0x30a
 80034ac:	f000 f94c 	bl	8003748 <__assert_func>
 80034b0:	f3c5 0313 	ubfx	r3, r5, #0, #20
 80034b4:	f3c5 550a 	ubfx	r5, r5, #20, #11
 80034b8:	bb2d      	cbnz	r5, 8003506 <__d2b+0x7a>
 80034ba:	9301      	str	r3, [sp, #4]
 80034bc:	f1b8 0300 	subs.w	r3, r8, #0
 80034c0:	d026      	beq.n	8003510 <__d2b+0x84>
 80034c2:	4668      	mov	r0, sp
 80034c4:	9300      	str	r3, [sp, #0]
 80034c6:	f7ff fd87 	bl	8002fd8 <__lo0bits>
 80034ca:	9900      	ldr	r1, [sp, #0]
 80034cc:	b1f0      	cbz	r0, 800350c <__d2b+0x80>
 80034ce:	9a01      	ldr	r2, [sp, #4]
 80034d0:	f1c0 0320 	rsb	r3, r0, #32
 80034d4:	fa02 f303 	lsl.w	r3, r2, r3
 80034d8:	430b      	orrs	r3, r1
 80034da:	40c2      	lsrs	r2, r0
 80034dc:	6163      	str	r3, [r4, #20]
 80034de:	9201      	str	r2, [sp, #4]
 80034e0:	9b01      	ldr	r3, [sp, #4]
 80034e2:	61a3      	str	r3, [r4, #24]
 80034e4:	2b00      	cmp	r3, #0
 80034e6:	bf14      	ite	ne
 80034e8:	2102      	movne	r1, #2
 80034ea:	2101      	moveq	r1, #1
 80034ec:	6121      	str	r1, [r4, #16]
 80034ee:	b1c5      	cbz	r5, 8003522 <__d2b+0x96>
 80034f0:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80034f4:	4405      	add	r5, r0
 80034f6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80034fa:	603d      	str	r5, [r7, #0]
 80034fc:	6030      	str	r0, [r6, #0]
 80034fe:	4620      	mov	r0, r4
 8003500:	b002      	add	sp, #8
 8003502:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003506:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800350a:	e7d6      	b.n	80034ba <__d2b+0x2e>
 800350c:	6161      	str	r1, [r4, #20]
 800350e:	e7e7      	b.n	80034e0 <__d2b+0x54>
 8003510:	a801      	add	r0, sp, #4
 8003512:	f7ff fd61 	bl	8002fd8 <__lo0bits>
 8003516:	9b01      	ldr	r3, [sp, #4]
 8003518:	6163      	str	r3, [r4, #20]
 800351a:	2101      	movs	r1, #1
 800351c:	6121      	str	r1, [r4, #16]
 800351e:	3020      	adds	r0, #32
 8003520:	e7e5      	b.n	80034ee <__d2b+0x62>
 8003522:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 8003526:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800352a:	6038      	str	r0, [r7, #0]
 800352c:	6918      	ldr	r0, [r3, #16]
 800352e:	f7ff fd33 	bl	8002f98 <__hi0bits>
 8003532:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 8003536:	6031      	str	r1, [r6, #0]
 8003538:	e7e1      	b.n	80034fe <__d2b+0x72>
 800353a:	bf00      	nop
 800353c:	080043e7 	.word	0x080043e7
 8003540:	080043f8 	.word	0x080043f8

08003544 <_calloc_r>:
 8003544:	b570      	push	{r4, r5, r6, lr}
 8003546:	fba1 5402 	umull	r5, r4, r1, r2
 800354a:	b934      	cbnz	r4, 800355a <_calloc_r+0x16>
 800354c:	4629      	mov	r1, r5
 800354e:	f000 f877 	bl	8003640 <_malloc_r>
 8003552:	4606      	mov	r6, r0
 8003554:	b928      	cbnz	r0, 8003562 <_calloc_r+0x1e>
 8003556:	4630      	mov	r0, r6
 8003558:	bd70      	pop	{r4, r5, r6, pc}
 800355a:	220c      	movs	r2, #12
 800355c:	6002      	str	r2, [r0, #0]
 800355e:	2600      	movs	r6, #0
 8003560:	e7f9      	b.n	8003556 <_calloc_r+0x12>
 8003562:	462a      	mov	r2, r5
 8003564:	4621      	mov	r1, r4
 8003566:	f7fe f97b 	bl	8001860 <memset>
 800356a:	e7f4      	b.n	8003556 <_calloc_r+0x12>

0800356c <_free_r>:
 800356c:	b538      	push	{r3, r4, r5, lr}
 800356e:	4605      	mov	r5, r0
 8003570:	2900      	cmp	r1, #0
 8003572:	d041      	beq.n	80035f8 <_free_r+0x8c>
 8003574:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003578:	1f0c      	subs	r4, r1, #4
 800357a:	2b00      	cmp	r3, #0
 800357c:	bfb8      	it	lt
 800357e:	18e4      	addlt	r4, r4, r3
 8003580:	f000 f924 	bl	80037cc <__malloc_lock>
 8003584:	4a1d      	ldr	r2, [pc, #116]	; (80035fc <_free_r+0x90>)
 8003586:	6813      	ldr	r3, [r2, #0]
 8003588:	b933      	cbnz	r3, 8003598 <_free_r+0x2c>
 800358a:	6063      	str	r3, [r4, #4]
 800358c:	6014      	str	r4, [r2, #0]
 800358e:	4628      	mov	r0, r5
 8003590:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003594:	f000 b920 	b.w	80037d8 <__malloc_unlock>
 8003598:	42a3      	cmp	r3, r4
 800359a:	d908      	bls.n	80035ae <_free_r+0x42>
 800359c:	6820      	ldr	r0, [r4, #0]
 800359e:	1821      	adds	r1, r4, r0
 80035a0:	428b      	cmp	r3, r1
 80035a2:	bf01      	itttt	eq
 80035a4:	6819      	ldreq	r1, [r3, #0]
 80035a6:	685b      	ldreq	r3, [r3, #4]
 80035a8:	1809      	addeq	r1, r1, r0
 80035aa:	6021      	streq	r1, [r4, #0]
 80035ac:	e7ed      	b.n	800358a <_free_r+0x1e>
 80035ae:	461a      	mov	r2, r3
 80035b0:	685b      	ldr	r3, [r3, #4]
 80035b2:	b10b      	cbz	r3, 80035b8 <_free_r+0x4c>
 80035b4:	42a3      	cmp	r3, r4
 80035b6:	d9fa      	bls.n	80035ae <_free_r+0x42>
 80035b8:	6811      	ldr	r1, [r2, #0]
 80035ba:	1850      	adds	r0, r2, r1
 80035bc:	42a0      	cmp	r0, r4
 80035be:	d10b      	bne.n	80035d8 <_free_r+0x6c>
 80035c0:	6820      	ldr	r0, [r4, #0]
 80035c2:	4401      	add	r1, r0
 80035c4:	1850      	adds	r0, r2, r1
 80035c6:	4283      	cmp	r3, r0
 80035c8:	6011      	str	r1, [r2, #0]
 80035ca:	d1e0      	bne.n	800358e <_free_r+0x22>
 80035cc:	6818      	ldr	r0, [r3, #0]
 80035ce:	685b      	ldr	r3, [r3, #4]
 80035d0:	6053      	str	r3, [r2, #4]
 80035d2:	4401      	add	r1, r0
 80035d4:	6011      	str	r1, [r2, #0]
 80035d6:	e7da      	b.n	800358e <_free_r+0x22>
 80035d8:	d902      	bls.n	80035e0 <_free_r+0x74>
 80035da:	230c      	movs	r3, #12
 80035dc:	602b      	str	r3, [r5, #0]
 80035de:	e7d6      	b.n	800358e <_free_r+0x22>
 80035e0:	6820      	ldr	r0, [r4, #0]
 80035e2:	1821      	adds	r1, r4, r0
 80035e4:	428b      	cmp	r3, r1
 80035e6:	bf04      	itt	eq
 80035e8:	6819      	ldreq	r1, [r3, #0]
 80035ea:	685b      	ldreq	r3, [r3, #4]
 80035ec:	6063      	str	r3, [r4, #4]
 80035ee:	bf04      	itt	eq
 80035f0:	1809      	addeq	r1, r1, r0
 80035f2:	6021      	streq	r1, [r4, #0]
 80035f4:	6054      	str	r4, [r2, #4]
 80035f6:	e7ca      	b.n	800358e <_free_r+0x22>
 80035f8:	bd38      	pop	{r3, r4, r5, pc}
 80035fa:	bf00      	nop
 80035fc:	2000020c 	.word	0x2000020c

08003600 <sbrk_aligned>:
 8003600:	b570      	push	{r4, r5, r6, lr}
 8003602:	4e0e      	ldr	r6, [pc, #56]	; (800363c <sbrk_aligned+0x3c>)
 8003604:	460c      	mov	r4, r1
 8003606:	6831      	ldr	r1, [r6, #0]
 8003608:	4605      	mov	r5, r0
 800360a:	b911      	cbnz	r1, 8003612 <sbrk_aligned+0x12>
 800360c:	f000 f88c 	bl	8003728 <_sbrk_r>
 8003610:	6030      	str	r0, [r6, #0]
 8003612:	4621      	mov	r1, r4
 8003614:	4628      	mov	r0, r5
 8003616:	f000 f887 	bl	8003728 <_sbrk_r>
 800361a:	1c43      	adds	r3, r0, #1
 800361c:	d00a      	beq.n	8003634 <sbrk_aligned+0x34>
 800361e:	1cc4      	adds	r4, r0, #3
 8003620:	f024 0403 	bic.w	r4, r4, #3
 8003624:	42a0      	cmp	r0, r4
 8003626:	d007      	beq.n	8003638 <sbrk_aligned+0x38>
 8003628:	1a21      	subs	r1, r4, r0
 800362a:	4628      	mov	r0, r5
 800362c:	f000 f87c 	bl	8003728 <_sbrk_r>
 8003630:	3001      	adds	r0, #1
 8003632:	d101      	bne.n	8003638 <sbrk_aligned+0x38>
 8003634:	f04f 34ff 	mov.w	r4, #4294967295
 8003638:	4620      	mov	r0, r4
 800363a:	bd70      	pop	{r4, r5, r6, pc}
 800363c:	20000210 	.word	0x20000210

08003640 <_malloc_r>:
 8003640:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003644:	1ccd      	adds	r5, r1, #3
 8003646:	f025 0503 	bic.w	r5, r5, #3
 800364a:	3508      	adds	r5, #8
 800364c:	2d0c      	cmp	r5, #12
 800364e:	bf38      	it	cc
 8003650:	250c      	movcc	r5, #12
 8003652:	2d00      	cmp	r5, #0
 8003654:	4607      	mov	r7, r0
 8003656:	db01      	blt.n	800365c <_malloc_r+0x1c>
 8003658:	42a9      	cmp	r1, r5
 800365a:	d905      	bls.n	8003668 <_malloc_r+0x28>
 800365c:	230c      	movs	r3, #12
 800365e:	603b      	str	r3, [r7, #0]
 8003660:	2600      	movs	r6, #0
 8003662:	4630      	mov	r0, r6
 8003664:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003668:	4e2e      	ldr	r6, [pc, #184]	; (8003724 <_malloc_r+0xe4>)
 800366a:	f000 f8af 	bl	80037cc <__malloc_lock>
 800366e:	6833      	ldr	r3, [r6, #0]
 8003670:	461c      	mov	r4, r3
 8003672:	bb34      	cbnz	r4, 80036c2 <_malloc_r+0x82>
 8003674:	4629      	mov	r1, r5
 8003676:	4638      	mov	r0, r7
 8003678:	f7ff ffc2 	bl	8003600 <sbrk_aligned>
 800367c:	1c43      	adds	r3, r0, #1
 800367e:	4604      	mov	r4, r0
 8003680:	d14d      	bne.n	800371e <_malloc_r+0xde>
 8003682:	6834      	ldr	r4, [r6, #0]
 8003684:	4626      	mov	r6, r4
 8003686:	2e00      	cmp	r6, #0
 8003688:	d140      	bne.n	800370c <_malloc_r+0xcc>
 800368a:	6823      	ldr	r3, [r4, #0]
 800368c:	4631      	mov	r1, r6
 800368e:	4638      	mov	r0, r7
 8003690:	eb04 0803 	add.w	r8, r4, r3
 8003694:	f000 f848 	bl	8003728 <_sbrk_r>
 8003698:	4580      	cmp	r8, r0
 800369a:	d13a      	bne.n	8003712 <_malloc_r+0xd2>
 800369c:	6821      	ldr	r1, [r4, #0]
 800369e:	3503      	adds	r5, #3
 80036a0:	1a6d      	subs	r5, r5, r1
 80036a2:	f025 0503 	bic.w	r5, r5, #3
 80036a6:	3508      	adds	r5, #8
 80036a8:	2d0c      	cmp	r5, #12
 80036aa:	bf38      	it	cc
 80036ac:	250c      	movcc	r5, #12
 80036ae:	4629      	mov	r1, r5
 80036b0:	4638      	mov	r0, r7
 80036b2:	f7ff ffa5 	bl	8003600 <sbrk_aligned>
 80036b6:	3001      	adds	r0, #1
 80036b8:	d02b      	beq.n	8003712 <_malloc_r+0xd2>
 80036ba:	6823      	ldr	r3, [r4, #0]
 80036bc:	442b      	add	r3, r5
 80036be:	6023      	str	r3, [r4, #0]
 80036c0:	e00e      	b.n	80036e0 <_malloc_r+0xa0>
 80036c2:	6822      	ldr	r2, [r4, #0]
 80036c4:	1b52      	subs	r2, r2, r5
 80036c6:	d41e      	bmi.n	8003706 <_malloc_r+0xc6>
 80036c8:	2a0b      	cmp	r2, #11
 80036ca:	d916      	bls.n	80036fa <_malloc_r+0xba>
 80036cc:	1961      	adds	r1, r4, r5
 80036ce:	42a3      	cmp	r3, r4
 80036d0:	6025      	str	r5, [r4, #0]
 80036d2:	bf18      	it	ne
 80036d4:	6059      	strne	r1, [r3, #4]
 80036d6:	6863      	ldr	r3, [r4, #4]
 80036d8:	bf08      	it	eq
 80036da:	6031      	streq	r1, [r6, #0]
 80036dc:	5162      	str	r2, [r4, r5]
 80036de:	604b      	str	r3, [r1, #4]
 80036e0:	4638      	mov	r0, r7
 80036e2:	f104 060b 	add.w	r6, r4, #11
 80036e6:	f000 f877 	bl	80037d8 <__malloc_unlock>
 80036ea:	f026 0607 	bic.w	r6, r6, #7
 80036ee:	1d23      	adds	r3, r4, #4
 80036f0:	1af2      	subs	r2, r6, r3
 80036f2:	d0b6      	beq.n	8003662 <_malloc_r+0x22>
 80036f4:	1b9b      	subs	r3, r3, r6
 80036f6:	50a3      	str	r3, [r4, r2]
 80036f8:	e7b3      	b.n	8003662 <_malloc_r+0x22>
 80036fa:	6862      	ldr	r2, [r4, #4]
 80036fc:	42a3      	cmp	r3, r4
 80036fe:	bf0c      	ite	eq
 8003700:	6032      	streq	r2, [r6, #0]
 8003702:	605a      	strne	r2, [r3, #4]
 8003704:	e7ec      	b.n	80036e0 <_malloc_r+0xa0>
 8003706:	4623      	mov	r3, r4
 8003708:	6864      	ldr	r4, [r4, #4]
 800370a:	e7b2      	b.n	8003672 <_malloc_r+0x32>
 800370c:	4634      	mov	r4, r6
 800370e:	6876      	ldr	r6, [r6, #4]
 8003710:	e7b9      	b.n	8003686 <_malloc_r+0x46>
 8003712:	230c      	movs	r3, #12
 8003714:	603b      	str	r3, [r7, #0]
 8003716:	4638      	mov	r0, r7
 8003718:	f000 f85e 	bl	80037d8 <__malloc_unlock>
 800371c:	e7a1      	b.n	8003662 <_malloc_r+0x22>
 800371e:	6025      	str	r5, [r4, #0]
 8003720:	e7de      	b.n	80036e0 <_malloc_r+0xa0>
 8003722:	bf00      	nop
 8003724:	2000020c 	.word	0x2000020c

08003728 <_sbrk_r>:
 8003728:	b538      	push	{r3, r4, r5, lr}
 800372a:	4d06      	ldr	r5, [pc, #24]	; (8003744 <_sbrk_r+0x1c>)
 800372c:	2300      	movs	r3, #0
 800372e:	4604      	mov	r4, r0
 8003730:	4608      	mov	r0, r1
 8003732:	602b      	str	r3, [r5, #0]
 8003734:	f000 fdc8 	bl	80042c8 <_sbrk>
 8003738:	1c43      	adds	r3, r0, #1
 800373a:	d102      	bne.n	8003742 <_sbrk_r+0x1a>
 800373c:	682b      	ldr	r3, [r5, #0]
 800373e:	b103      	cbz	r3, 8003742 <_sbrk_r+0x1a>
 8003740:	6023      	str	r3, [r4, #0]
 8003742:	bd38      	pop	{r3, r4, r5, pc}
 8003744:	20000214 	.word	0x20000214

08003748 <__assert_func>:
 8003748:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800374a:	4614      	mov	r4, r2
 800374c:	461a      	mov	r2, r3
 800374e:	4b09      	ldr	r3, [pc, #36]	; (8003774 <__assert_func+0x2c>)
 8003750:	681b      	ldr	r3, [r3, #0]
 8003752:	4605      	mov	r5, r0
 8003754:	68d8      	ldr	r0, [r3, #12]
 8003756:	b14c      	cbz	r4, 800376c <__assert_func+0x24>
 8003758:	4b07      	ldr	r3, [pc, #28]	; (8003778 <__assert_func+0x30>)
 800375a:	9100      	str	r1, [sp, #0]
 800375c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003760:	4906      	ldr	r1, [pc, #24]	; (800377c <__assert_func+0x34>)
 8003762:	462b      	mov	r3, r5
 8003764:	f000 f80e 	bl	8003784 <fiprintf>
 8003768:	f000 fa62 	bl	8003c30 <abort>
 800376c:	4b04      	ldr	r3, [pc, #16]	; (8003780 <__assert_func+0x38>)
 800376e:	461c      	mov	r4, r3
 8003770:	e7f3      	b.n	800375a <__assert_func+0x12>
 8003772:	bf00      	nop
 8003774:	20000000 	.word	0x20000000
 8003778:	08004554 	.word	0x08004554
 800377c:	08004561 	.word	0x08004561
 8003780:	0800458f 	.word	0x0800458f

08003784 <fiprintf>:
 8003784:	b40e      	push	{r1, r2, r3}
 8003786:	b503      	push	{r0, r1, lr}
 8003788:	4601      	mov	r1, r0
 800378a:	ab03      	add	r3, sp, #12
 800378c:	4805      	ldr	r0, [pc, #20]	; (80037a4 <fiprintf+0x20>)
 800378e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003792:	6800      	ldr	r0, [r0, #0]
 8003794:	9301      	str	r3, [sp, #4]
 8003796:	f000 f84d 	bl	8003834 <_vfiprintf_r>
 800379a:	b002      	add	sp, #8
 800379c:	f85d eb04 	ldr.w	lr, [sp], #4
 80037a0:	b003      	add	sp, #12
 80037a2:	4770      	bx	lr
 80037a4:	20000000 	.word	0x20000000

080037a8 <__ascii_mbtowc>:
 80037a8:	b082      	sub	sp, #8
 80037aa:	b901      	cbnz	r1, 80037ae <__ascii_mbtowc+0x6>
 80037ac:	a901      	add	r1, sp, #4
 80037ae:	b142      	cbz	r2, 80037c2 <__ascii_mbtowc+0x1a>
 80037b0:	b14b      	cbz	r3, 80037c6 <__ascii_mbtowc+0x1e>
 80037b2:	7813      	ldrb	r3, [r2, #0]
 80037b4:	600b      	str	r3, [r1, #0]
 80037b6:	7812      	ldrb	r2, [r2, #0]
 80037b8:	1e10      	subs	r0, r2, #0
 80037ba:	bf18      	it	ne
 80037bc:	2001      	movne	r0, #1
 80037be:	b002      	add	sp, #8
 80037c0:	4770      	bx	lr
 80037c2:	4610      	mov	r0, r2
 80037c4:	e7fb      	b.n	80037be <__ascii_mbtowc+0x16>
 80037c6:	f06f 0001 	mvn.w	r0, #1
 80037ca:	e7f8      	b.n	80037be <__ascii_mbtowc+0x16>

080037cc <__malloc_lock>:
 80037cc:	4801      	ldr	r0, [pc, #4]	; (80037d4 <__malloc_lock+0x8>)
 80037ce:	f000 bbeb 	b.w	8003fa8 <__retarget_lock_acquire_recursive>
 80037d2:	bf00      	nop
 80037d4:	20000218 	.word	0x20000218

080037d8 <__malloc_unlock>:
 80037d8:	4801      	ldr	r0, [pc, #4]	; (80037e0 <__malloc_unlock+0x8>)
 80037da:	f000 bbe6 	b.w	8003faa <__retarget_lock_release_recursive>
 80037de:	bf00      	nop
 80037e0:	20000218 	.word	0x20000218

080037e4 <__sfputc_r>:
 80037e4:	6893      	ldr	r3, [r2, #8]
 80037e6:	3b01      	subs	r3, #1
 80037e8:	2b00      	cmp	r3, #0
 80037ea:	b410      	push	{r4}
 80037ec:	6093      	str	r3, [r2, #8]
 80037ee:	da07      	bge.n	8003800 <__sfputc_r+0x1c>
 80037f0:	6994      	ldr	r4, [r2, #24]
 80037f2:	42a3      	cmp	r3, r4
 80037f4:	db01      	blt.n	80037fa <__sfputc_r+0x16>
 80037f6:	290a      	cmp	r1, #10
 80037f8:	d102      	bne.n	8003800 <__sfputc_r+0x1c>
 80037fa:	bc10      	pop	{r4}
 80037fc:	f000 b94a 	b.w	8003a94 <__swbuf_r>
 8003800:	6813      	ldr	r3, [r2, #0]
 8003802:	1c58      	adds	r0, r3, #1
 8003804:	6010      	str	r0, [r2, #0]
 8003806:	7019      	strb	r1, [r3, #0]
 8003808:	4608      	mov	r0, r1
 800380a:	bc10      	pop	{r4}
 800380c:	4770      	bx	lr

0800380e <__sfputs_r>:
 800380e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003810:	4606      	mov	r6, r0
 8003812:	460f      	mov	r7, r1
 8003814:	4614      	mov	r4, r2
 8003816:	18d5      	adds	r5, r2, r3
 8003818:	42ac      	cmp	r4, r5
 800381a:	d101      	bne.n	8003820 <__sfputs_r+0x12>
 800381c:	2000      	movs	r0, #0
 800381e:	e007      	b.n	8003830 <__sfputs_r+0x22>
 8003820:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003824:	463a      	mov	r2, r7
 8003826:	4630      	mov	r0, r6
 8003828:	f7ff ffdc 	bl	80037e4 <__sfputc_r>
 800382c:	1c43      	adds	r3, r0, #1
 800382e:	d1f3      	bne.n	8003818 <__sfputs_r+0xa>
 8003830:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003834 <_vfiprintf_r>:
 8003834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003838:	460d      	mov	r5, r1
 800383a:	b09d      	sub	sp, #116	; 0x74
 800383c:	4614      	mov	r4, r2
 800383e:	4698      	mov	r8, r3
 8003840:	4606      	mov	r6, r0
 8003842:	b118      	cbz	r0, 800384c <_vfiprintf_r+0x18>
 8003844:	6983      	ldr	r3, [r0, #24]
 8003846:	b90b      	cbnz	r3, 800384c <_vfiprintf_r+0x18>
 8003848:	f000 fb10 	bl	8003e6c <__sinit>
 800384c:	4b89      	ldr	r3, [pc, #548]	; (8003a74 <_vfiprintf_r+0x240>)
 800384e:	429d      	cmp	r5, r3
 8003850:	d11b      	bne.n	800388a <_vfiprintf_r+0x56>
 8003852:	6875      	ldr	r5, [r6, #4]
 8003854:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003856:	07d9      	lsls	r1, r3, #31
 8003858:	d405      	bmi.n	8003866 <_vfiprintf_r+0x32>
 800385a:	89ab      	ldrh	r3, [r5, #12]
 800385c:	059a      	lsls	r2, r3, #22
 800385e:	d402      	bmi.n	8003866 <_vfiprintf_r+0x32>
 8003860:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003862:	f000 fba1 	bl	8003fa8 <__retarget_lock_acquire_recursive>
 8003866:	89ab      	ldrh	r3, [r5, #12]
 8003868:	071b      	lsls	r3, r3, #28
 800386a:	d501      	bpl.n	8003870 <_vfiprintf_r+0x3c>
 800386c:	692b      	ldr	r3, [r5, #16]
 800386e:	b9eb      	cbnz	r3, 80038ac <_vfiprintf_r+0x78>
 8003870:	4629      	mov	r1, r5
 8003872:	4630      	mov	r0, r6
 8003874:	f000 f96e 	bl	8003b54 <__swsetup_r>
 8003878:	b1c0      	cbz	r0, 80038ac <_vfiprintf_r+0x78>
 800387a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800387c:	07dc      	lsls	r4, r3, #31
 800387e:	d50e      	bpl.n	800389e <_vfiprintf_r+0x6a>
 8003880:	f04f 30ff 	mov.w	r0, #4294967295
 8003884:	b01d      	add	sp, #116	; 0x74
 8003886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800388a:	4b7b      	ldr	r3, [pc, #492]	; (8003a78 <_vfiprintf_r+0x244>)
 800388c:	429d      	cmp	r5, r3
 800388e:	d101      	bne.n	8003894 <_vfiprintf_r+0x60>
 8003890:	68b5      	ldr	r5, [r6, #8]
 8003892:	e7df      	b.n	8003854 <_vfiprintf_r+0x20>
 8003894:	4b79      	ldr	r3, [pc, #484]	; (8003a7c <_vfiprintf_r+0x248>)
 8003896:	429d      	cmp	r5, r3
 8003898:	bf08      	it	eq
 800389a:	68f5      	ldreq	r5, [r6, #12]
 800389c:	e7da      	b.n	8003854 <_vfiprintf_r+0x20>
 800389e:	89ab      	ldrh	r3, [r5, #12]
 80038a0:	0598      	lsls	r0, r3, #22
 80038a2:	d4ed      	bmi.n	8003880 <_vfiprintf_r+0x4c>
 80038a4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80038a6:	f000 fb80 	bl	8003faa <__retarget_lock_release_recursive>
 80038aa:	e7e9      	b.n	8003880 <_vfiprintf_r+0x4c>
 80038ac:	2300      	movs	r3, #0
 80038ae:	9309      	str	r3, [sp, #36]	; 0x24
 80038b0:	2320      	movs	r3, #32
 80038b2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80038b6:	f8cd 800c 	str.w	r8, [sp, #12]
 80038ba:	2330      	movs	r3, #48	; 0x30
 80038bc:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8003a80 <_vfiprintf_r+0x24c>
 80038c0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80038c4:	f04f 0901 	mov.w	r9, #1
 80038c8:	4623      	mov	r3, r4
 80038ca:	469a      	mov	sl, r3
 80038cc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80038d0:	b10a      	cbz	r2, 80038d6 <_vfiprintf_r+0xa2>
 80038d2:	2a25      	cmp	r2, #37	; 0x25
 80038d4:	d1f9      	bne.n	80038ca <_vfiprintf_r+0x96>
 80038d6:	ebba 0b04 	subs.w	fp, sl, r4
 80038da:	d00b      	beq.n	80038f4 <_vfiprintf_r+0xc0>
 80038dc:	465b      	mov	r3, fp
 80038de:	4622      	mov	r2, r4
 80038e0:	4629      	mov	r1, r5
 80038e2:	4630      	mov	r0, r6
 80038e4:	f7ff ff93 	bl	800380e <__sfputs_r>
 80038e8:	3001      	adds	r0, #1
 80038ea:	f000 80aa 	beq.w	8003a42 <_vfiprintf_r+0x20e>
 80038ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80038f0:	445a      	add	r2, fp
 80038f2:	9209      	str	r2, [sp, #36]	; 0x24
 80038f4:	f89a 3000 	ldrb.w	r3, [sl]
 80038f8:	2b00      	cmp	r3, #0
 80038fa:	f000 80a2 	beq.w	8003a42 <_vfiprintf_r+0x20e>
 80038fe:	2300      	movs	r3, #0
 8003900:	f04f 32ff 	mov.w	r2, #4294967295
 8003904:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003908:	f10a 0a01 	add.w	sl, sl, #1
 800390c:	9304      	str	r3, [sp, #16]
 800390e:	9307      	str	r3, [sp, #28]
 8003910:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003914:	931a      	str	r3, [sp, #104]	; 0x68
 8003916:	4654      	mov	r4, sl
 8003918:	2205      	movs	r2, #5
 800391a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800391e:	4858      	ldr	r0, [pc, #352]	; (8003a80 <_vfiprintf_r+0x24c>)
 8003920:	f7fc fc7e 	bl	8000220 <memchr>
 8003924:	9a04      	ldr	r2, [sp, #16]
 8003926:	b9d8      	cbnz	r0, 8003960 <_vfiprintf_r+0x12c>
 8003928:	06d1      	lsls	r1, r2, #27
 800392a:	bf44      	itt	mi
 800392c:	2320      	movmi	r3, #32
 800392e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003932:	0713      	lsls	r3, r2, #28
 8003934:	bf44      	itt	mi
 8003936:	232b      	movmi	r3, #43	; 0x2b
 8003938:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800393c:	f89a 3000 	ldrb.w	r3, [sl]
 8003940:	2b2a      	cmp	r3, #42	; 0x2a
 8003942:	d015      	beq.n	8003970 <_vfiprintf_r+0x13c>
 8003944:	9a07      	ldr	r2, [sp, #28]
 8003946:	4654      	mov	r4, sl
 8003948:	2000      	movs	r0, #0
 800394a:	f04f 0c0a 	mov.w	ip, #10
 800394e:	4621      	mov	r1, r4
 8003950:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003954:	3b30      	subs	r3, #48	; 0x30
 8003956:	2b09      	cmp	r3, #9
 8003958:	d94e      	bls.n	80039f8 <_vfiprintf_r+0x1c4>
 800395a:	b1b0      	cbz	r0, 800398a <_vfiprintf_r+0x156>
 800395c:	9207      	str	r2, [sp, #28]
 800395e:	e014      	b.n	800398a <_vfiprintf_r+0x156>
 8003960:	eba0 0308 	sub.w	r3, r0, r8
 8003964:	fa09 f303 	lsl.w	r3, r9, r3
 8003968:	4313      	orrs	r3, r2
 800396a:	9304      	str	r3, [sp, #16]
 800396c:	46a2      	mov	sl, r4
 800396e:	e7d2      	b.n	8003916 <_vfiprintf_r+0xe2>
 8003970:	9b03      	ldr	r3, [sp, #12]
 8003972:	1d19      	adds	r1, r3, #4
 8003974:	681b      	ldr	r3, [r3, #0]
 8003976:	9103      	str	r1, [sp, #12]
 8003978:	2b00      	cmp	r3, #0
 800397a:	bfbb      	ittet	lt
 800397c:	425b      	neglt	r3, r3
 800397e:	f042 0202 	orrlt.w	r2, r2, #2
 8003982:	9307      	strge	r3, [sp, #28]
 8003984:	9307      	strlt	r3, [sp, #28]
 8003986:	bfb8      	it	lt
 8003988:	9204      	strlt	r2, [sp, #16]
 800398a:	7823      	ldrb	r3, [r4, #0]
 800398c:	2b2e      	cmp	r3, #46	; 0x2e
 800398e:	d10c      	bne.n	80039aa <_vfiprintf_r+0x176>
 8003990:	7863      	ldrb	r3, [r4, #1]
 8003992:	2b2a      	cmp	r3, #42	; 0x2a
 8003994:	d135      	bne.n	8003a02 <_vfiprintf_r+0x1ce>
 8003996:	9b03      	ldr	r3, [sp, #12]
 8003998:	1d1a      	adds	r2, r3, #4
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	9203      	str	r2, [sp, #12]
 800399e:	2b00      	cmp	r3, #0
 80039a0:	bfb8      	it	lt
 80039a2:	f04f 33ff 	movlt.w	r3, #4294967295
 80039a6:	3402      	adds	r4, #2
 80039a8:	9305      	str	r3, [sp, #20]
 80039aa:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8003a84 <_vfiprintf_r+0x250>
 80039ae:	7821      	ldrb	r1, [r4, #0]
 80039b0:	2203      	movs	r2, #3
 80039b2:	4650      	mov	r0, sl
 80039b4:	f7fc fc34 	bl	8000220 <memchr>
 80039b8:	b140      	cbz	r0, 80039cc <_vfiprintf_r+0x198>
 80039ba:	2340      	movs	r3, #64	; 0x40
 80039bc:	eba0 000a 	sub.w	r0, r0, sl
 80039c0:	fa03 f000 	lsl.w	r0, r3, r0
 80039c4:	9b04      	ldr	r3, [sp, #16]
 80039c6:	4303      	orrs	r3, r0
 80039c8:	3401      	adds	r4, #1
 80039ca:	9304      	str	r3, [sp, #16]
 80039cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80039d0:	482d      	ldr	r0, [pc, #180]	; (8003a88 <_vfiprintf_r+0x254>)
 80039d2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80039d6:	2206      	movs	r2, #6
 80039d8:	f7fc fc22 	bl	8000220 <memchr>
 80039dc:	2800      	cmp	r0, #0
 80039de:	d03f      	beq.n	8003a60 <_vfiprintf_r+0x22c>
 80039e0:	4b2a      	ldr	r3, [pc, #168]	; (8003a8c <_vfiprintf_r+0x258>)
 80039e2:	bb1b      	cbnz	r3, 8003a2c <_vfiprintf_r+0x1f8>
 80039e4:	9b03      	ldr	r3, [sp, #12]
 80039e6:	3307      	adds	r3, #7
 80039e8:	f023 0307 	bic.w	r3, r3, #7
 80039ec:	3308      	adds	r3, #8
 80039ee:	9303      	str	r3, [sp, #12]
 80039f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80039f2:	443b      	add	r3, r7
 80039f4:	9309      	str	r3, [sp, #36]	; 0x24
 80039f6:	e767      	b.n	80038c8 <_vfiprintf_r+0x94>
 80039f8:	fb0c 3202 	mla	r2, ip, r2, r3
 80039fc:	460c      	mov	r4, r1
 80039fe:	2001      	movs	r0, #1
 8003a00:	e7a5      	b.n	800394e <_vfiprintf_r+0x11a>
 8003a02:	2300      	movs	r3, #0
 8003a04:	3401      	adds	r4, #1
 8003a06:	9305      	str	r3, [sp, #20]
 8003a08:	4619      	mov	r1, r3
 8003a0a:	f04f 0c0a 	mov.w	ip, #10
 8003a0e:	4620      	mov	r0, r4
 8003a10:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003a14:	3a30      	subs	r2, #48	; 0x30
 8003a16:	2a09      	cmp	r2, #9
 8003a18:	d903      	bls.n	8003a22 <_vfiprintf_r+0x1ee>
 8003a1a:	2b00      	cmp	r3, #0
 8003a1c:	d0c5      	beq.n	80039aa <_vfiprintf_r+0x176>
 8003a1e:	9105      	str	r1, [sp, #20]
 8003a20:	e7c3      	b.n	80039aa <_vfiprintf_r+0x176>
 8003a22:	fb0c 2101 	mla	r1, ip, r1, r2
 8003a26:	4604      	mov	r4, r0
 8003a28:	2301      	movs	r3, #1
 8003a2a:	e7f0      	b.n	8003a0e <_vfiprintf_r+0x1da>
 8003a2c:	ab03      	add	r3, sp, #12
 8003a2e:	9300      	str	r3, [sp, #0]
 8003a30:	462a      	mov	r2, r5
 8003a32:	4b17      	ldr	r3, [pc, #92]	; (8003a90 <_vfiprintf_r+0x25c>)
 8003a34:	a904      	add	r1, sp, #16
 8003a36:	4630      	mov	r0, r6
 8003a38:	f7fd ffb8 	bl	80019ac <_printf_float>
 8003a3c:	4607      	mov	r7, r0
 8003a3e:	1c78      	adds	r0, r7, #1
 8003a40:	d1d6      	bne.n	80039f0 <_vfiprintf_r+0x1bc>
 8003a42:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003a44:	07d9      	lsls	r1, r3, #31
 8003a46:	d405      	bmi.n	8003a54 <_vfiprintf_r+0x220>
 8003a48:	89ab      	ldrh	r3, [r5, #12]
 8003a4a:	059a      	lsls	r2, r3, #22
 8003a4c:	d402      	bmi.n	8003a54 <_vfiprintf_r+0x220>
 8003a4e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003a50:	f000 faab 	bl	8003faa <__retarget_lock_release_recursive>
 8003a54:	89ab      	ldrh	r3, [r5, #12]
 8003a56:	065b      	lsls	r3, r3, #25
 8003a58:	f53f af12 	bmi.w	8003880 <_vfiprintf_r+0x4c>
 8003a5c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003a5e:	e711      	b.n	8003884 <_vfiprintf_r+0x50>
 8003a60:	ab03      	add	r3, sp, #12
 8003a62:	9300      	str	r3, [sp, #0]
 8003a64:	462a      	mov	r2, r5
 8003a66:	4b0a      	ldr	r3, [pc, #40]	; (8003a90 <_vfiprintf_r+0x25c>)
 8003a68:	a904      	add	r1, sp, #16
 8003a6a:	4630      	mov	r0, r6
 8003a6c:	f7fe fa36 	bl	8001edc <_printf_i>
 8003a70:	e7e4      	b.n	8003a3c <_vfiprintf_r+0x208>
 8003a72:	bf00      	nop
 8003a74:	080046cc 	.word	0x080046cc
 8003a78:	080046ec 	.word	0x080046ec
 8003a7c:	080046ac 	.word	0x080046ac
 8003a80:	0800459a 	.word	0x0800459a
 8003a84:	080045a0 	.word	0x080045a0
 8003a88:	080045a4 	.word	0x080045a4
 8003a8c:	080019ad 	.word	0x080019ad
 8003a90:	0800380f 	.word	0x0800380f

08003a94 <__swbuf_r>:
 8003a94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a96:	460e      	mov	r6, r1
 8003a98:	4614      	mov	r4, r2
 8003a9a:	4605      	mov	r5, r0
 8003a9c:	b118      	cbz	r0, 8003aa6 <__swbuf_r+0x12>
 8003a9e:	6983      	ldr	r3, [r0, #24]
 8003aa0:	b90b      	cbnz	r3, 8003aa6 <__swbuf_r+0x12>
 8003aa2:	f000 f9e3 	bl	8003e6c <__sinit>
 8003aa6:	4b21      	ldr	r3, [pc, #132]	; (8003b2c <__swbuf_r+0x98>)
 8003aa8:	429c      	cmp	r4, r3
 8003aaa:	d12b      	bne.n	8003b04 <__swbuf_r+0x70>
 8003aac:	686c      	ldr	r4, [r5, #4]
 8003aae:	69a3      	ldr	r3, [r4, #24]
 8003ab0:	60a3      	str	r3, [r4, #8]
 8003ab2:	89a3      	ldrh	r3, [r4, #12]
 8003ab4:	071a      	lsls	r2, r3, #28
 8003ab6:	d52f      	bpl.n	8003b18 <__swbuf_r+0x84>
 8003ab8:	6923      	ldr	r3, [r4, #16]
 8003aba:	b36b      	cbz	r3, 8003b18 <__swbuf_r+0x84>
 8003abc:	6923      	ldr	r3, [r4, #16]
 8003abe:	6820      	ldr	r0, [r4, #0]
 8003ac0:	1ac0      	subs	r0, r0, r3
 8003ac2:	6963      	ldr	r3, [r4, #20]
 8003ac4:	b2f6      	uxtb	r6, r6
 8003ac6:	4283      	cmp	r3, r0
 8003ac8:	4637      	mov	r7, r6
 8003aca:	dc04      	bgt.n	8003ad6 <__swbuf_r+0x42>
 8003acc:	4621      	mov	r1, r4
 8003ace:	4628      	mov	r0, r5
 8003ad0:	f000 f938 	bl	8003d44 <_fflush_r>
 8003ad4:	bb30      	cbnz	r0, 8003b24 <__swbuf_r+0x90>
 8003ad6:	68a3      	ldr	r3, [r4, #8]
 8003ad8:	3b01      	subs	r3, #1
 8003ada:	60a3      	str	r3, [r4, #8]
 8003adc:	6823      	ldr	r3, [r4, #0]
 8003ade:	1c5a      	adds	r2, r3, #1
 8003ae0:	6022      	str	r2, [r4, #0]
 8003ae2:	701e      	strb	r6, [r3, #0]
 8003ae4:	6963      	ldr	r3, [r4, #20]
 8003ae6:	3001      	adds	r0, #1
 8003ae8:	4283      	cmp	r3, r0
 8003aea:	d004      	beq.n	8003af6 <__swbuf_r+0x62>
 8003aec:	89a3      	ldrh	r3, [r4, #12]
 8003aee:	07db      	lsls	r3, r3, #31
 8003af0:	d506      	bpl.n	8003b00 <__swbuf_r+0x6c>
 8003af2:	2e0a      	cmp	r6, #10
 8003af4:	d104      	bne.n	8003b00 <__swbuf_r+0x6c>
 8003af6:	4621      	mov	r1, r4
 8003af8:	4628      	mov	r0, r5
 8003afa:	f000 f923 	bl	8003d44 <_fflush_r>
 8003afe:	b988      	cbnz	r0, 8003b24 <__swbuf_r+0x90>
 8003b00:	4638      	mov	r0, r7
 8003b02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003b04:	4b0a      	ldr	r3, [pc, #40]	; (8003b30 <__swbuf_r+0x9c>)
 8003b06:	429c      	cmp	r4, r3
 8003b08:	d101      	bne.n	8003b0e <__swbuf_r+0x7a>
 8003b0a:	68ac      	ldr	r4, [r5, #8]
 8003b0c:	e7cf      	b.n	8003aae <__swbuf_r+0x1a>
 8003b0e:	4b09      	ldr	r3, [pc, #36]	; (8003b34 <__swbuf_r+0xa0>)
 8003b10:	429c      	cmp	r4, r3
 8003b12:	bf08      	it	eq
 8003b14:	68ec      	ldreq	r4, [r5, #12]
 8003b16:	e7ca      	b.n	8003aae <__swbuf_r+0x1a>
 8003b18:	4621      	mov	r1, r4
 8003b1a:	4628      	mov	r0, r5
 8003b1c:	f000 f81a 	bl	8003b54 <__swsetup_r>
 8003b20:	2800      	cmp	r0, #0
 8003b22:	d0cb      	beq.n	8003abc <__swbuf_r+0x28>
 8003b24:	f04f 37ff 	mov.w	r7, #4294967295
 8003b28:	e7ea      	b.n	8003b00 <__swbuf_r+0x6c>
 8003b2a:	bf00      	nop
 8003b2c:	080046cc 	.word	0x080046cc
 8003b30:	080046ec 	.word	0x080046ec
 8003b34:	080046ac 	.word	0x080046ac

08003b38 <__ascii_wctomb>:
 8003b38:	4603      	mov	r3, r0
 8003b3a:	4608      	mov	r0, r1
 8003b3c:	b141      	cbz	r1, 8003b50 <__ascii_wctomb+0x18>
 8003b3e:	2aff      	cmp	r2, #255	; 0xff
 8003b40:	d904      	bls.n	8003b4c <__ascii_wctomb+0x14>
 8003b42:	228a      	movs	r2, #138	; 0x8a
 8003b44:	601a      	str	r2, [r3, #0]
 8003b46:	f04f 30ff 	mov.w	r0, #4294967295
 8003b4a:	4770      	bx	lr
 8003b4c:	700a      	strb	r2, [r1, #0]
 8003b4e:	2001      	movs	r0, #1
 8003b50:	4770      	bx	lr
	...

08003b54 <__swsetup_r>:
 8003b54:	4b32      	ldr	r3, [pc, #200]	; (8003c20 <__swsetup_r+0xcc>)
 8003b56:	b570      	push	{r4, r5, r6, lr}
 8003b58:	681d      	ldr	r5, [r3, #0]
 8003b5a:	4606      	mov	r6, r0
 8003b5c:	460c      	mov	r4, r1
 8003b5e:	b125      	cbz	r5, 8003b6a <__swsetup_r+0x16>
 8003b60:	69ab      	ldr	r3, [r5, #24]
 8003b62:	b913      	cbnz	r3, 8003b6a <__swsetup_r+0x16>
 8003b64:	4628      	mov	r0, r5
 8003b66:	f000 f981 	bl	8003e6c <__sinit>
 8003b6a:	4b2e      	ldr	r3, [pc, #184]	; (8003c24 <__swsetup_r+0xd0>)
 8003b6c:	429c      	cmp	r4, r3
 8003b6e:	d10f      	bne.n	8003b90 <__swsetup_r+0x3c>
 8003b70:	686c      	ldr	r4, [r5, #4]
 8003b72:	89a3      	ldrh	r3, [r4, #12]
 8003b74:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003b78:	0719      	lsls	r1, r3, #28
 8003b7a:	d42c      	bmi.n	8003bd6 <__swsetup_r+0x82>
 8003b7c:	06dd      	lsls	r5, r3, #27
 8003b7e:	d411      	bmi.n	8003ba4 <__swsetup_r+0x50>
 8003b80:	2309      	movs	r3, #9
 8003b82:	6033      	str	r3, [r6, #0]
 8003b84:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8003b88:	81a3      	strh	r3, [r4, #12]
 8003b8a:	f04f 30ff 	mov.w	r0, #4294967295
 8003b8e:	e03e      	b.n	8003c0e <__swsetup_r+0xba>
 8003b90:	4b25      	ldr	r3, [pc, #148]	; (8003c28 <__swsetup_r+0xd4>)
 8003b92:	429c      	cmp	r4, r3
 8003b94:	d101      	bne.n	8003b9a <__swsetup_r+0x46>
 8003b96:	68ac      	ldr	r4, [r5, #8]
 8003b98:	e7eb      	b.n	8003b72 <__swsetup_r+0x1e>
 8003b9a:	4b24      	ldr	r3, [pc, #144]	; (8003c2c <__swsetup_r+0xd8>)
 8003b9c:	429c      	cmp	r4, r3
 8003b9e:	bf08      	it	eq
 8003ba0:	68ec      	ldreq	r4, [r5, #12]
 8003ba2:	e7e6      	b.n	8003b72 <__swsetup_r+0x1e>
 8003ba4:	0758      	lsls	r0, r3, #29
 8003ba6:	d512      	bpl.n	8003bce <__swsetup_r+0x7a>
 8003ba8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003baa:	b141      	cbz	r1, 8003bbe <__swsetup_r+0x6a>
 8003bac:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003bb0:	4299      	cmp	r1, r3
 8003bb2:	d002      	beq.n	8003bba <__swsetup_r+0x66>
 8003bb4:	4630      	mov	r0, r6
 8003bb6:	f7ff fcd9 	bl	800356c <_free_r>
 8003bba:	2300      	movs	r3, #0
 8003bbc:	6363      	str	r3, [r4, #52]	; 0x34
 8003bbe:	89a3      	ldrh	r3, [r4, #12]
 8003bc0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003bc4:	81a3      	strh	r3, [r4, #12]
 8003bc6:	2300      	movs	r3, #0
 8003bc8:	6063      	str	r3, [r4, #4]
 8003bca:	6923      	ldr	r3, [r4, #16]
 8003bcc:	6023      	str	r3, [r4, #0]
 8003bce:	89a3      	ldrh	r3, [r4, #12]
 8003bd0:	f043 0308 	orr.w	r3, r3, #8
 8003bd4:	81a3      	strh	r3, [r4, #12]
 8003bd6:	6923      	ldr	r3, [r4, #16]
 8003bd8:	b94b      	cbnz	r3, 8003bee <__swsetup_r+0x9a>
 8003bda:	89a3      	ldrh	r3, [r4, #12]
 8003bdc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003be0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003be4:	d003      	beq.n	8003bee <__swsetup_r+0x9a>
 8003be6:	4621      	mov	r1, r4
 8003be8:	4630      	mov	r0, r6
 8003bea:	f000 fa05 	bl	8003ff8 <__smakebuf_r>
 8003bee:	89a0      	ldrh	r0, [r4, #12]
 8003bf0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003bf4:	f010 0301 	ands.w	r3, r0, #1
 8003bf8:	d00a      	beq.n	8003c10 <__swsetup_r+0xbc>
 8003bfa:	2300      	movs	r3, #0
 8003bfc:	60a3      	str	r3, [r4, #8]
 8003bfe:	6963      	ldr	r3, [r4, #20]
 8003c00:	425b      	negs	r3, r3
 8003c02:	61a3      	str	r3, [r4, #24]
 8003c04:	6923      	ldr	r3, [r4, #16]
 8003c06:	b943      	cbnz	r3, 8003c1a <__swsetup_r+0xc6>
 8003c08:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8003c0c:	d1ba      	bne.n	8003b84 <__swsetup_r+0x30>
 8003c0e:	bd70      	pop	{r4, r5, r6, pc}
 8003c10:	0781      	lsls	r1, r0, #30
 8003c12:	bf58      	it	pl
 8003c14:	6963      	ldrpl	r3, [r4, #20]
 8003c16:	60a3      	str	r3, [r4, #8]
 8003c18:	e7f4      	b.n	8003c04 <__swsetup_r+0xb0>
 8003c1a:	2000      	movs	r0, #0
 8003c1c:	e7f7      	b.n	8003c0e <__swsetup_r+0xba>
 8003c1e:	bf00      	nop
 8003c20:	20000000 	.word	0x20000000
 8003c24:	080046cc 	.word	0x080046cc
 8003c28:	080046ec 	.word	0x080046ec
 8003c2c:	080046ac 	.word	0x080046ac

08003c30 <abort>:
 8003c30:	b508      	push	{r3, lr}
 8003c32:	2006      	movs	r0, #6
 8003c34:	f000 fa48 	bl	80040c8 <raise>
 8003c38:	2001      	movs	r0, #1
 8003c3a:	f000 fb5b 	bl	80042f4 <_exit>
	...

08003c40 <__sflush_r>:
 8003c40:	898a      	ldrh	r2, [r1, #12]
 8003c42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c44:	4605      	mov	r5, r0
 8003c46:	0710      	lsls	r0, r2, #28
 8003c48:	460c      	mov	r4, r1
 8003c4a:	d457      	bmi.n	8003cfc <__sflush_r+0xbc>
 8003c4c:	684b      	ldr	r3, [r1, #4]
 8003c4e:	2b00      	cmp	r3, #0
 8003c50:	dc04      	bgt.n	8003c5c <__sflush_r+0x1c>
 8003c52:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003c54:	2b00      	cmp	r3, #0
 8003c56:	dc01      	bgt.n	8003c5c <__sflush_r+0x1c>
 8003c58:	2000      	movs	r0, #0
 8003c5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003c5c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003c5e:	2e00      	cmp	r6, #0
 8003c60:	d0fa      	beq.n	8003c58 <__sflush_r+0x18>
 8003c62:	2300      	movs	r3, #0
 8003c64:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003c68:	682f      	ldr	r7, [r5, #0]
 8003c6a:	602b      	str	r3, [r5, #0]
 8003c6c:	d032      	beq.n	8003cd4 <__sflush_r+0x94>
 8003c6e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003c70:	89a3      	ldrh	r3, [r4, #12]
 8003c72:	075a      	lsls	r2, r3, #29
 8003c74:	d505      	bpl.n	8003c82 <__sflush_r+0x42>
 8003c76:	6863      	ldr	r3, [r4, #4]
 8003c78:	1ac0      	subs	r0, r0, r3
 8003c7a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003c7c:	b10b      	cbz	r3, 8003c82 <__sflush_r+0x42>
 8003c7e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003c80:	1ac0      	subs	r0, r0, r3
 8003c82:	2300      	movs	r3, #0
 8003c84:	4602      	mov	r2, r0
 8003c86:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003c88:	6a21      	ldr	r1, [r4, #32]
 8003c8a:	4628      	mov	r0, r5
 8003c8c:	47b0      	blx	r6
 8003c8e:	1c43      	adds	r3, r0, #1
 8003c90:	89a3      	ldrh	r3, [r4, #12]
 8003c92:	d106      	bne.n	8003ca2 <__sflush_r+0x62>
 8003c94:	6829      	ldr	r1, [r5, #0]
 8003c96:	291d      	cmp	r1, #29
 8003c98:	d82c      	bhi.n	8003cf4 <__sflush_r+0xb4>
 8003c9a:	4a29      	ldr	r2, [pc, #164]	; (8003d40 <__sflush_r+0x100>)
 8003c9c:	40ca      	lsrs	r2, r1
 8003c9e:	07d6      	lsls	r6, r2, #31
 8003ca0:	d528      	bpl.n	8003cf4 <__sflush_r+0xb4>
 8003ca2:	2200      	movs	r2, #0
 8003ca4:	6062      	str	r2, [r4, #4]
 8003ca6:	04d9      	lsls	r1, r3, #19
 8003ca8:	6922      	ldr	r2, [r4, #16]
 8003caa:	6022      	str	r2, [r4, #0]
 8003cac:	d504      	bpl.n	8003cb8 <__sflush_r+0x78>
 8003cae:	1c42      	adds	r2, r0, #1
 8003cb0:	d101      	bne.n	8003cb6 <__sflush_r+0x76>
 8003cb2:	682b      	ldr	r3, [r5, #0]
 8003cb4:	b903      	cbnz	r3, 8003cb8 <__sflush_r+0x78>
 8003cb6:	6560      	str	r0, [r4, #84]	; 0x54
 8003cb8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003cba:	602f      	str	r7, [r5, #0]
 8003cbc:	2900      	cmp	r1, #0
 8003cbe:	d0cb      	beq.n	8003c58 <__sflush_r+0x18>
 8003cc0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003cc4:	4299      	cmp	r1, r3
 8003cc6:	d002      	beq.n	8003cce <__sflush_r+0x8e>
 8003cc8:	4628      	mov	r0, r5
 8003cca:	f7ff fc4f 	bl	800356c <_free_r>
 8003cce:	2000      	movs	r0, #0
 8003cd0:	6360      	str	r0, [r4, #52]	; 0x34
 8003cd2:	e7c2      	b.n	8003c5a <__sflush_r+0x1a>
 8003cd4:	6a21      	ldr	r1, [r4, #32]
 8003cd6:	2301      	movs	r3, #1
 8003cd8:	4628      	mov	r0, r5
 8003cda:	47b0      	blx	r6
 8003cdc:	1c41      	adds	r1, r0, #1
 8003cde:	d1c7      	bne.n	8003c70 <__sflush_r+0x30>
 8003ce0:	682b      	ldr	r3, [r5, #0]
 8003ce2:	2b00      	cmp	r3, #0
 8003ce4:	d0c4      	beq.n	8003c70 <__sflush_r+0x30>
 8003ce6:	2b1d      	cmp	r3, #29
 8003ce8:	d001      	beq.n	8003cee <__sflush_r+0xae>
 8003cea:	2b16      	cmp	r3, #22
 8003cec:	d101      	bne.n	8003cf2 <__sflush_r+0xb2>
 8003cee:	602f      	str	r7, [r5, #0]
 8003cf0:	e7b2      	b.n	8003c58 <__sflush_r+0x18>
 8003cf2:	89a3      	ldrh	r3, [r4, #12]
 8003cf4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003cf8:	81a3      	strh	r3, [r4, #12]
 8003cfa:	e7ae      	b.n	8003c5a <__sflush_r+0x1a>
 8003cfc:	690f      	ldr	r7, [r1, #16]
 8003cfe:	2f00      	cmp	r7, #0
 8003d00:	d0aa      	beq.n	8003c58 <__sflush_r+0x18>
 8003d02:	0793      	lsls	r3, r2, #30
 8003d04:	680e      	ldr	r6, [r1, #0]
 8003d06:	bf08      	it	eq
 8003d08:	694b      	ldreq	r3, [r1, #20]
 8003d0a:	600f      	str	r7, [r1, #0]
 8003d0c:	bf18      	it	ne
 8003d0e:	2300      	movne	r3, #0
 8003d10:	1bf6      	subs	r6, r6, r7
 8003d12:	608b      	str	r3, [r1, #8]
 8003d14:	2e00      	cmp	r6, #0
 8003d16:	dd9f      	ble.n	8003c58 <__sflush_r+0x18>
 8003d18:	6a21      	ldr	r1, [r4, #32]
 8003d1a:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8003d1e:	4633      	mov	r3, r6
 8003d20:	463a      	mov	r2, r7
 8003d22:	4628      	mov	r0, r5
 8003d24:	47e0      	blx	ip
 8003d26:	2800      	cmp	r0, #0
 8003d28:	dc06      	bgt.n	8003d38 <__sflush_r+0xf8>
 8003d2a:	89a3      	ldrh	r3, [r4, #12]
 8003d2c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003d30:	81a3      	strh	r3, [r4, #12]
 8003d32:	f04f 30ff 	mov.w	r0, #4294967295
 8003d36:	e790      	b.n	8003c5a <__sflush_r+0x1a>
 8003d38:	4407      	add	r7, r0
 8003d3a:	1a36      	subs	r6, r6, r0
 8003d3c:	e7ea      	b.n	8003d14 <__sflush_r+0xd4>
 8003d3e:	bf00      	nop
 8003d40:	20400001 	.word	0x20400001

08003d44 <_fflush_r>:
 8003d44:	b538      	push	{r3, r4, r5, lr}
 8003d46:	690b      	ldr	r3, [r1, #16]
 8003d48:	4605      	mov	r5, r0
 8003d4a:	460c      	mov	r4, r1
 8003d4c:	b913      	cbnz	r3, 8003d54 <_fflush_r+0x10>
 8003d4e:	2500      	movs	r5, #0
 8003d50:	4628      	mov	r0, r5
 8003d52:	bd38      	pop	{r3, r4, r5, pc}
 8003d54:	b118      	cbz	r0, 8003d5e <_fflush_r+0x1a>
 8003d56:	6983      	ldr	r3, [r0, #24]
 8003d58:	b90b      	cbnz	r3, 8003d5e <_fflush_r+0x1a>
 8003d5a:	f000 f887 	bl	8003e6c <__sinit>
 8003d5e:	4b14      	ldr	r3, [pc, #80]	; (8003db0 <_fflush_r+0x6c>)
 8003d60:	429c      	cmp	r4, r3
 8003d62:	d11b      	bne.n	8003d9c <_fflush_r+0x58>
 8003d64:	686c      	ldr	r4, [r5, #4]
 8003d66:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003d6a:	2b00      	cmp	r3, #0
 8003d6c:	d0ef      	beq.n	8003d4e <_fflush_r+0xa>
 8003d6e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003d70:	07d0      	lsls	r0, r2, #31
 8003d72:	d404      	bmi.n	8003d7e <_fflush_r+0x3a>
 8003d74:	0599      	lsls	r1, r3, #22
 8003d76:	d402      	bmi.n	8003d7e <_fflush_r+0x3a>
 8003d78:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003d7a:	f000 f915 	bl	8003fa8 <__retarget_lock_acquire_recursive>
 8003d7e:	4628      	mov	r0, r5
 8003d80:	4621      	mov	r1, r4
 8003d82:	f7ff ff5d 	bl	8003c40 <__sflush_r>
 8003d86:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003d88:	07da      	lsls	r2, r3, #31
 8003d8a:	4605      	mov	r5, r0
 8003d8c:	d4e0      	bmi.n	8003d50 <_fflush_r+0xc>
 8003d8e:	89a3      	ldrh	r3, [r4, #12]
 8003d90:	059b      	lsls	r3, r3, #22
 8003d92:	d4dd      	bmi.n	8003d50 <_fflush_r+0xc>
 8003d94:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003d96:	f000 f908 	bl	8003faa <__retarget_lock_release_recursive>
 8003d9a:	e7d9      	b.n	8003d50 <_fflush_r+0xc>
 8003d9c:	4b05      	ldr	r3, [pc, #20]	; (8003db4 <_fflush_r+0x70>)
 8003d9e:	429c      	cmp	r4, r3
 8003da0:	d101      	bne.n	8003da6 <_fflush_r+0x62>
 8003da2:	68ac      	ldr	r4, [r5, #8]
 8003da4:	e7df      	b.n	8003d66 <_fflush_r+0x22>
 8003da6:	4b04      	ldr	r3, [pc, #16]	; (8003db8 <_fflush_r+0x74>)
 8003da8:	429c      	cmp	r4, r3
 8003daa:	bf08      	it	eq
 8003dac:	68ec      	ldreq	r4, [r5, #12]
 8003dae:	e7da      	b.n	8003d66 <_fflush_r+0x22>
 8003db0:	080046cc 	.word	0x080046cc
 8003db4:	080046ec 	.word	0x080046ec
 8003db8:	080046ac 	.word	0x080046ac

08003dbc <std>:
 8003dbc:	2300      	movs	r3, #0
 8003dbe:	b510      	push	{r4, lr}
 8003dc0:	4604      	mov	r4, r0
 8003dc2:	e9c0 3300 	strd	r3, r3, [r0]
 8003dc6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003dca:	6083      	str	r3, [r0, #8]
 8003dcc:	8181      	strh	r1, [r0, #12]
 8003dce:	6643      	str	r3, [r0, #100]	; 0x64
 8003dd0:	81c2      	strh	r2, [r0, #14]
 8003dd2:	6183      	str	r3, [r0, #24]
 8003dd4:	4619      	mov	r1, r3
 8003dd6:	2208      	movs	r2, #8
 8003dd8:	305c      	adds	r0, #92	; 0x5c
 8003dda:	f7fd fd41 	bl	8001860 <memset>
 8003dde:	4b05      	ldr	r3, [pc, #20]	; (8003df4 <std+0x38>)
 8003de0:	6263      	str	r3, [r4, #36]	; 0x24
 8003de2:	4b05      	ldr	r3, [pc, #20]	; (8003df8 <std+0x3c>)
 8003de4:	62a3      	str	r3, [r4, #40]	; 0x28
 8003de6:	4b05      	ldr	r3, [pc, #20]	; (8003dfc <std+0x40>)
 8003de8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003dea:	4b05      	ldr	r3, [pc, #20]	; (8003e00 <std+0x44>)
 8003dec:	6224      	str	r4, [r4, #32]
 8003dee:	6323      	str	r3, [r4, #48]	; 0x30
 8003df0:	bd10      	pop	{r4, pc}
 8003df2:	bf00      	nop
 8003df4:	08004101 	.word	0x08004101
 8003df8:	08004123 	.word	0x08004123
 8003dfc:	0800415b 	.word	0x0800415b
 8003e00:	0800417f 	.word	0x0800417f

08003e04 <_cleanup_r>:
 8003e04:	4901      	ldr	r1, [pc, #4]	; (8003e0c <_cleanup_r+0x8>)
 8003e06:	f000 b8af 	b.w	8003f68 <_fwalk_reent>
 8003e0a:	bf00      	nop
 8003e0c:	08003d45 	.word	0x08003d45

08003e10 <__sfmoreglue>:
 8003e10:	b570      	push	{r4, r5, r6, lr}
 8003e12:	2268      	movs	r2, #104	; 0x68
 8003e14:	1e4d      	subs	r5, r1, #1
 8003e16:	4355      	muls	r5, r2
 8003e18:	460e      	mov	r6, r1
 8003e1a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8003e1e:	f7ff fc0f 	bl	8003640 <_malloc_r>
 8003e22:	4604      	mov	r4, r0
 8003e24:	b140      	cbz	r0, 8003e38 <__sfmoreglue+0x28>
 8003e26:	2100      	movs	r1, #0
 8003e28:	e9c0 1600 	strd	r1, r6, [r0]
 8003e2c:	300c      	adds	r0, #12
 8003e2e:	60a0      	str	r0, [r4, #8]
 8003e30:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8003e34:	f7fd fd14 	bl	8001860 <memset>
 8003e38:	4620      	mov	r0, r4
 8003e3a:	bd70      	pop	{r4, r5, r6, pc}

08003e3c <__sfp_lock_acquire>:
 8003e3c:	4801      	ldr	r0, [pc, #4]	; (8003e44 <__sfp_lock_acquire+0x8>)
 8003e3e:	f000 b8b3 	b.w	8003fa8 <__retarget_lock_acquire_recursive>
 8003e42:	bf00      	nop
 8003e44:	20000219 	.word	0x20000219

08003e48 <__sfp_lock_release>:
 8003e48:	4801      	ldr	r0, [pc, #4]	; (8003e50 <__sfp_lock_release+0x8>)
 8003e4a:	f000 b8ae 	b.w	8003faa <__retarget_lock_release_recursive>
 8003e4e:	bf00      	nop
 8003e50:	20000219 	.word	0x20000219

08003e54 <__sinit_lock_acquire>:
 8003e54:	4801      	ldr	r0, [pc, #4]	; (8003e5c <__sinit_lock_acquire+0x8>)
 8003e56:	f000 b8a7 	b.w	8003fa8 <__retarget_lock_acquire_recursive>
 8003e5a:	bf00      	nop
 8003e5c:	2000021a 	.word	0x2000021a

08003e60 <__sinit_lock_release>:
 8003e60:	4801      	ldr	r0, [pc, #4]	; (8003e68 <__sinit_lock_release+0x8>)
 8003e62:	f000 b8a2 	b.w	8003faa <__retarget_lock_release_recursive>
 8003e66:	bf00      	nop
 8003e68:	2000021a 	.word	0x2000021a

08003e6c <__sinit>:
 8003e6c:	b510      	push	{r4, lr}
 8003e6e:	4604      	mov	r4, r0
 8003e70:	f7ff fff0 	bl	8003e54 <__sinit_lock_acquire>
 8003e74:	69a3      	ldr	r3, [r4, #24]
 8003e76:	b11b      	cbz	r3, 8003e80 <__sinit+0x14>
 8003e78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e7c:	f7ff bff0 	b.w	8003e60 <__sinit_lock_release>
 8003e80:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8003e84:	6523      	str	r3, [r4, #80]	; 0x50
 8003e86:	4b13      	ldr	r3, [pc, #76]	; (8003ed4 <__sinit+0x68>)
 8003e88:	4a13      	ldr	r2, [pc, #76]	; (8003ed8 <__sinit+0x6c>)
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	62a2      	str	r2, [r4, #40]	; 0x28
 8003e8e:	42a3      	cmp	r3, r4
 8003e90:	bf04      	itt	eq
 8003e92:	2301      	moveq	r3, #1
 8003e94:	61a3      	streq	r3, [r4, #24]
 8003e96:	4620      	mov	r0, r4
 8003e98:	f000 f820 	bl	8003edc <__sfp>
 8003e9c:	6060      	str	r0, [r4, #4]
 8003e9e:	4620      	mov	r0, r4
 8003ea0:	f000 f81c 	bl	8003edc <__sfp>
 8003ea4:	60a0      	str	r0, [r4, #8]
 8003ea6:	4620      	mov	r0, r4
 8003ea8:	f000 f818 	bl	8003edc <__sfp>
 8003eac:	2200      	movs	r2, #0
 8003eae:	60e0      	str	r0, [r4, #12]
 8003eb0:	2104      	movs	r1, #4
 8003eb2:	6860      	ldr	r0, [r4, #4]
 8003eb4:	f7ff ff82 	bl	8003dbc <std>
 8003eb8:	68a0      	ldr	r0, [r4, #8]
 8003eba:	2201      	movs	r2, #1
 8003ebc:	2109      	movs	r1, #9
 8003ebe:	f7ff ff7d 	bl	8003dbc <std>
 8003ec2:	68e0      	ldr	r0, [r4, #12]
 8003ec4:	2202      	movs	r2, #2
 8003ec6:	2112      	movs	r1, #18
 8003ec8:	f7ff ff78 	bl	8003dbc <std>
 8003ecc:	2301      	movs	r3, #1
 8003ece:	61a3      	str	r3, [r4, #24]
 8003ed0:	e7d2      	b.n	8003e78 <__sinit+0xc>
 8003ed2:	bf00      	nop
 8003ed4:	08004330 	.word	0x08004330
 8003ed8:	08003e05 	.word	0x08003e05

08003edc <__sfp>:
 8003edc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003ede:	4607      	mov	r7, r0
 8003ee0:	f7ff ffac 	bl	8003e3c <__sfp_lock_acquire>
 8003ee4:	4b1e      	ldr	r3, [pc, #120]	; (8003f60 <__sfp+0x84>)
 8003ee6:	681e      	ldr	r6, [r3, #0]
 8003ee8:	69b3      	ldr	r3, [r6, #24]
 8003eea:	b913      	cbnz	r3, 8003ef2 <__sfp+0x16>
 8003eec:	4630      	mov	r0, r6
 8003eee:	f7ff ffbd 	bl	8003e6c <__sinit>
 8003ef2:	3648      	adds	r6, #72	; 0x48
 8003ef4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8003ef8:	3b01      	subs	r3, #1
 8003efa:	d503      	bpl.n	8003f04 <__sfp+0x28>
 8003efc:	6833      	ldr	r3, [r6, #0]
 8003efe:	b30b      	cbz	r3, 8003f44 <__sfp+0x68>
 8003f00:	6836      	ldr	r6, [r6, #0]
 8003f02:	e7f7      	b.n	8003ef4 <__sfp+0x18>
 8003f04:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8003f08:	b9d5      	cbnz	r5, 8003f40 <__sfp+0x64>
 8003f0a:	4b16      	ldr	r3, [pc, #88]	; (8003f64 <__sfp+0x88>)
 8003f0c:	60e3      	str	r3, [r4, #12]
 8003f0e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8003f12:	6665      	str	r5, [r4, #100]	; 0x64
 8003f14:	f000 f847 	bl	8003fa6 <__retarget_lock_init_recursive>
 8003f18:	f7ff ff96 	bl	8003e48 <__sfp_lock_release>
 8003f1c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8003f20:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8003f24:	6025      	str	r5, [r4, #0]
 8003f26:	61a5      	str	r5, [r4, #24]
 8003f28:	2208      	movs	r2, #8
 8003f2a:	4629      	mov	r1, r5
 8003f2c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8003f30:	f7fd fc96 	bl	8001860 <memset>
 8003f34:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8003f38:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8003f3c:	4620      	mov	r0, r4
 8003f3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003f40:	3468      	adds	r4, #104	; 0x68
 8003f42:	e7d9      	b.n	8003ef8 <__sfp+0x1c>
 8003f44:	2104      	movs	r1, #4
 8003f46:	4638      	mov	r0, r7
 8003f48:	f7ff ff62 	bl	8003e10 <__sfmoreglue>
 8003f4c:	4604      	mov	r4, r0
 8003f4e:	6030      	str	r0, [r6, #0]
 8003f50:	2800      	cmp	r0, #0
 8003f52:	d1d5      	bne.n	8003f00 <__sfp+0x24>
 8003f54:	f7ff ff78 	bl	8003e48 <__sfp_lock_release>
 8003f58:	230c      	movs	r3, #12
 8003f5a:	603b      	str	r3, [r7, #0]
 8003f5c:	e7ee      	b.n	8003f3c <__sfp+0x60>
 8003f5e:	bf00      	nop
 8003f60:	08004330 	.word	0x08004330
 8003f64:	ffff0001 	.word	0xffff0001

08003f68 <_fwalk_reent>:
 8003f68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003f6c:	4606      	mov	r6, r0
 8003f6e:	4688      	mov	r8, r1
 8003f70:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003f74:	2700      	movs	r7, #0
 8003f76:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003f7a:	f1b9 0901 	subs.w	r9, r9, #1
 8003f7e:	d505      	bpl.n	8003f8c <_fwalk_reent+0x24>
 8003f80:	6824      	ldr	r4, [r4, #0]
 8003f82:	2c00      	cmp	r4, #0
 8003f84:	d1f7      	bne.n	8003f76 <_fwalk_reent+0xe>
 8003f86:	4638      	mov	r0, r7
 8003f88:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003f8c:	89ab      	ldrh	r3, [r5, #12]
 8003f8e:	2b01      	cmp	r3, #1
 8003f90:	d907      	bls.n	8003fa2 <_fwalk_reent+0x3a>
 8003f92:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003f96:	3301      	adds	r3, #1
 8003f98:	d003      	beq.n	8003fa2 <_fwalk_reent+0x3a>
 8003f9a:	4629      	mov	r1, r5
 8003f9c:	4630      	mov	r0, r6
 8003f9e:	47c0      	blx	r8
 8003fa0:	4307      	orrs	r7, r0
 8003fa2:	3568      	adds	r5, #104	; 0x68
 8003fa4:	e7e9      	b.n	8003f7a <_fwalk_reent+0x12>

08003fa6 <__retarget_lock_init_recursive>:
 8003fa6:	4770      	bx	lr

08003fa8 <__retarget_lock_acquire_recursive>:
 8003fa8:	4770      	bx	lr

08003faa <__retarget_lock_release_recursive>:
 8003faa:	4770      	bx	lr

08003fac <__swhatbuf_r>:
 8003fac:	b570      	push	{r4, r5, r6, lr}
 8003fae:	460e      	mov	r6, r1
 8003fb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003fb4:	2900      	cmp	r1, #0
 8003fb6:	b096      	sub	sp, #88	; 0x58
 8003fb8:	4614      	mov	r4, r2
 8003fba:	461d      	mov	r5, r3
 8003fbc:	da08      	bge.n	8003fd0 <__swhatbuf_r+0x24>
 8003fbe:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8003fc2:	2200      	movs	r2, #0
 8003fc4:	602a      	str	r2, [r5, #0]
 8003fc6:	061a      	lsls	r2, r3, #24
 8003fc8:	d410      	bmi.n	8003fec <__swhatbuf_r+0x40>
 8003fca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003fce:	e00e      	b.n	8003fee <__swhatbuf_r+0x42>
 8003fd0:	466a      	mov	r2, sp
 8003fd2:	f000 f8fb 	bl	80041cc <_fstat_r>
 8003fd6:	2800      	cmp	r0, #0
 8003fd8:	dbf1      	blt.n	8003fbe <__swhatbuf_r+0x12>
 8003fda:	9a01      	ldr	r2, [sp, #4]
 8003fdc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8003fe0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003fe4:	425a      	negs	r2, r3
 8003fe6:	415a      	adcs	r2, r3
 8003fe8:	602a      	str	r2, [r5, #0]
 8003fea:	e7ee      	b.n	8003fca <__swhatbuf_r+0x1e>
 8003fec:	2340      	movs	r3, #64	; 0x40
 8003fee:	2000      	movs	r0, #0
 8003ff0:	6023      	str	r3, [r4, #0]
 8003ff2:	b016      	add	sp, #88	; 0x58
 8003ff4:	bd70      	pop	{r4, r5, r6, pc}
	...

08003ff8 <__smakebuf_r>:
 8003ff8:	898b      	ldrh	r3, [r1, #12]
 8003ffa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003ffc:	079d      	lsls	r5, r3, #30
 8003ffe:	4606      	mov	r6, r0
 8004000:	460c      	mov	r4, r1
 8004002:	d507      	bpl.n	8004014 <__smakebuf_r+0x1c>
 8004004:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8004008:	6023      	str	r3, [r4, #0]
 800400a:	6123      	str	r3, [r4, #16]
 800400c:	2301      	movs	r3, #1
 800400e:	6163      	str	r3, [r4, #20]
 8004010:	b002      	add	sp, #8
 8004012:	bd70      	pop	{r4, r5, r6, pc}
 8004014:	ab01      	add	r3, sp, #4
 8004016:	466a      	mov	r2, sp
 8004018:	f7ff ffc8 	bl	8003fac <__swhatbuf_r>
 800401c:	9900      	ldr	r1, [sp, #0]
 800401e:	4605      	mov	r5, r0
 8004020:	4630      	mov	r0, r6
 8004022:	f7ff fb0d 	bl	8003640 <_malloc_r>
 8004026:	b948      	cbnz	r0, 800403c <__smakebuf_r+0x44>
 8004028:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800402c:	059a      	lsls	r2, r3, #22
 800402e:	d4ef      	bmi.n	8004010 <__smakebuf_r+0x18>
 8004030:	f023 0303 	bic.w	r3, r3, #3
 8004034:	f043 0302 	orr.w	r3, r3, #2
 8004038:	81a3      	strh	r3, [r4, #12]
 800403a:	e7e3      	b.n	8004004 <__smakebuf_r+0xc>
 800403c:	4b0d      	ldr	r3, [pc, #52]	; (8004074 <__smakebuf_r+0x7c>)
 800403e:	62b3      	str	r3, [r6, #40]	; 0x28
 8004040:	89a3      	ldrh	r3, [r4, #12]
 8004042:	6020      	str	r0, [r4, #0]
 8004044:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004048:	81a3      	strh	r3, [r4, #12]
 800404a:	9b00      	ldr	r3, [sp, #0]
 800404c:	6163      	str	r3, [r4, #20]
 800404e:	9b01      	ldr	r3, [sp, #4]
 8004050:	6120      	str	r0, [r4, #16]
 8004052:	b15b      	cbz	r3, 800406c <__smakebuf_r+0x74>
 8004054:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004058:	4630      	mov	r0, r6
 800405a:	f000 f8c9 	bl	80041f0 <_isatty_r>
 800405e:	b128      	cbz	r0, 800406c <__smakebuf_r+0x74>
 8004060:	89a3      	ldrh	r3, [r4, #12]
 8004062:	f023 0303 	bic.w	r3, r3, #3
 8004066:	f043 0301 	orr.w	r3, r3, #1
 800406a:	81a3      	strh	r3, [r4, #12]
 800406c:	89a0      	ldrh	r0, [r4, #12]
 800406e:	4305      	orrs	r5, r0
 8004070:	81a5      	strh	r5, [r4, #12]
 8004072:	e7cd      	b.n	8004010 <__smakebuf_r+0x18>
 8004074:	08003e05 	.word	0x08003e05

08004078 <_raise_r>:
 8004078:	291f      	cmp	r1, #31
 800407a:	b538      	push	{r3, r4, r5, lr}
 800407c:	4604      	mov	r4, r0
 800407e:	460d      	mov	r5, r1
 8004080:	d904      	bls.n	800408c <_raise_r+0x14>
 8004082:	2316      	movs	r3, #22
 8004084:	6003      	str	r3, [r0, #0]
 8004086:	f04f 30ff 	mov.w	r0, #4294967295
 800408a:	bd38      	pop	{r3, r4, r5, pc}
 800408c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800408e:	b112      	cbz	r2, 8004096 <_raise_r+0x1e>
 8004090:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004094:	b94b      	cbnz	r3, 80040aa <_raise_r+0x32>
 8004096:	4620      	mov	r0, r4
 8004098:	f000 f830 	bl	80040fc <_getpid_r>
 800409c:	462a      	mov	r2, r5
 800409e:	4601      	mov	r1, r0
 80040a0:	4620      	mov	r0, r4
 80040a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80040a6:	f000 b817 	b.w	80040d8 <_kill_r>
 80040aa:	2b01      	cmp	r3, #1
 80040ac:	d00a      	beq.n	80040c4 <_raise_r+0x4c>
 80040ae:	1c59      	adds	r1, r3, #1
 80040b0:	d103      	bne.n	80040ba <_raise_r+0x42>
 80040b2:	2316      	movs	r3, #22
 80040b4:	6003      	str	r3, [r0, #0]
 80040b6:	2001      	movs	r0, #1
 80040b8:	e7e7      	b.n	800408a <_raise_r+0x12>
 80040ba:	2400      	movs	r4, #0
 80040bc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80040c0:	4628      	mov	r0, r5
 80040c2:	4798      	blx	r3
 80040c4:	2000      	movs	r0, #0
 80040c6:	e7e0      	b.n	800408a <_raise_r+0x12>

080040c8 <raise>:
 80040c8:	4b02      	ldr	r3, [pc, #8]	; (80040d4 <raise+0xc>)
 80040ca:	4601      	mov	r1, r0
 80040cc:	6818      	ldr	r0, [r3, #0]
 80040ce:	f7ff bfd3 	b.w	8004078 <_raise_r>
 80040d2:	bf00      	nop
 80040d4:	20000000 	.word	0x20000000

080040d8 <_kill_r>:
 80040d8:	b538      	push	{r3, r4, r5, lr}
 80040da:	4d07      	ldr	r5, [pc, #28]	; (80040f8 <_kill_r+0x20>)
 80040dc:	2300      	movs	r3, #0
 80040de:	4604      	mov	r4, r0
 80040e0:	4608      	mov	r0, r1
 80040e2:	4611      	mov	r1, r2
 80040e4:	602b      	str	r3, [r5, #0]
 80040e6:	f000 f8d7 	bl	8004298 <_kill>
 80040ea:	1c43      	adds	r3, r0, #1
 80040ec:	d102      	bne.n	80040f4 <_kill_r+0x1c>
 80040ee:	682b      	ldr	r3, [r5, #0]
 80040f0:	b103      	cbz	r3, 80040f4 <_kill_r+0x1c>
 80040f2:	6023      	str	r3, [r4, #0]
 80040f4:	bd38      	pop	{r3, r4, r5, pc}
 80040f6:	bf00      	nop
 80040f8:	20000214 	.word	0x20000214

080040fc <_getpid_r>:
 80040fc:	f000 b8bc 	b.w	8004278 <_getpid>

08004100 <__sread>:
 8004100:	b510      	push	{r4, lr}
 8004102:	460c      	mov	r4, r1
 8004104:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004108:	f000 f894 	bl	8004234 <_read_r>
 800410c:	2800      	cmp	r0, #0
 800410e:	bfab      	itete	ge
 8004110:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8004112:	89a3      	ldrhlt	r3, [r4, #12]
 8004114:	181b      	addge	r3, r3, r0
 8004116:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800411a:	bfac      	ite	ge
 800411c:	6563      	strge	r3, [r4, #84]	; 0x54
 800411e:	81a3      	strhlt	r3, [r4, #12]
 8004120:	bd10      	pop	{r4, pc}

08004122 <__swrite>:
 8004122:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004126:	461f      	mov	r7, r3
 8004128:	898b      	ldrh	r3, [r1, #12]
 800412a:	05db      	lsls	r3, r3, #23
 800412c:	4605      	mov	r5, r0
 800412e:	460c      	mov	r4, r1
 8004130:	4616      	mov	r6, r2
 8004132:	d505      	bpl.n	8004140 <__swrite+0x1e>
 8004134:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004138:	2302      	movs	r3, #2
 800413a:	2200      	movs	r2, #0
 800413c:	f000 f868 	bl	8004210 <_lseek_r>
 8004140:	89a3      	ldrh	r3, [r4, #12]
 8004142:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004146:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800414a:	81a3      	strh	r3, [r4, #12]
 800414c:	4632      	mov	r2, r6
 800414e:	463b      	mov	r3, r7
 8004150:	4628      	mov	r0, r5
 8004152:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004156:	f000 b817 	b.w	8004188 <_write_r>

0800415a <__sseek>:
 800415a:	b510      	push	{r4, lr}
 800415c:	460c      	mov	r4, r1
 800415e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004162:	f000 f855 	bl	8004210 <_lseek_r>
 8004166:	1c43      	adds	r3, r0, #1
 8004168:	89a3      	ldrh	r3, [r4, #12]
 800416a:	bf15      	itete	ne
 800416c:	6560      	strne	r0, [r4, #84]	; 0x54
 800416e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8004172:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8004176:	81a3      	strheq	r3, [r4, #12]
 8004178:	bf18      	it	ne
 800417a:	81a3      	strhne	r3, [r4, #12]
 800417c:	bd10      	pop	{r4, pc}

0800417e <__sclose>:
 800417e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004182:	f000 b813 	b.w	80041ac <_close_r>
	...

08004188 <_write_r>:
 8004188:	b538      	push	{r3, r4, r5, lr}
 800418a:	4d07      	ldr	r5, [pc, #28]	; (80041a8 <_write_r+0x20>)
 800418c:	4604      	mov	r4, r0
 800418e:	4608      	mov	r0, r1
 8004190:	4611      	mov	r1, r2
 8004192:	2200      	movs	r2, #0
 8004194:	602a      	str	r2, [r5, #0]
 8004196:	461a      	mov	r2, r3
 8004198:	f000 f8a4 	bl	80042e4 <_write>
 800419c:	1c43      	adds	r3, r0, #1
 800419e:	d102      	bne.n	80041a6 <_write_r+0x1e>
 80041a0:	682b      	ldr	r3, [r5, #0]
 80041a2:	b103      	cbz	r3, 80041a6 <_write_r+0x1e>
 80041a4:	6023      	str	r3, [r4, #0]
 80041a6:	bd38      	pop	{r3, r4, r5, pc}
 80041a8:	20000214 	.word	0x20000214

080041ac <_close_r>:
 80041ac:	b538      	push	{r3, r4, r5, lr}
 80041ae:	4d06      	ldr	r5, [pc, #24]	; (80041c8 <_close_r+0x1c>)
 80041b0:	2300      	movs	r3, #0
 80041b2:	4604      	mov	r4, r0
 80041b4:	4608      	mov	r0, r1
 80041b6:	602b      	str	r3, [r5, #0]
 80041b8:	f000 f84e 	bl	8004258 <_close>
 80041bc:	1c43      	adds	r3, r0, #1
 80041be:	d102      	bne.n	80041c6 <_close_r+0x1a>
 80041c0:	682b      	ldr	r3, [r5, #0]
 80041c2:	b103      	cbz	r3, 80041c6 <_close_r+0x1a>
 80041c4:	6023      	str	r3, [r4, #0]
 80041c6:	bd38      	pop	{r3, r4, r5, pc}
 80041c8:	20000214 	.word	0x20000214

080041cc <_fstat_r>:
 80041cc:	b538      	push	{r3, r4, r5, lr}
 80041ce:	4d07      	ldr	r5, [pc, #28]	; (80041ec <_fstat_r+0x20>)
 80041d0:	2300      	movs	r3, #0
 80041d2:	4604      	mov	r4, r0
 80041d4:	4608      	mov	r0, r1
 80041d6:	4611      	mov	r1, r2
 80041d8:	602b      	str	r3, [r5, #0]
 80041da:	f000 f845 	bl	8004268 <_fstat>
 80041de:	1c43      	adds	r3, r0, #1
 80041e0:	d102      	bne.n	80041e8 <_fstat_r+0x1c>
 80041e2:	682b      	ldr	r3, [r5, #0]
 80041e4:	b103      	cbz	r3, 80041e8 <_fstat_r+0x1c>
 80041e6:	6023      	str	r3, [r4, #0]
 80041e8:	bd38      	pop	{r3, r4, r5, pc}
 80041ea:	bf00      	nop
 80041ec:	20000214 	.word	0x20000214

080041f0 <_isatty_r>:
 80041f0:	b538      	push	{r3, r4, r5, lr}
 80041f2:	4d06      	ldr	r5, [pc, #24]	; (800420c <_isatty_r+0x1c>)
 80041f4:	2300      	movs	r3, #0
 80041f6:	4604      	mov	r4, r0
 80041f8:	4608      	mov	r0, r1
 80041fa:	602b      	str	r3, [r5, #0]
 80041fc:	f000 f844 	bl	8004288 <_isatty>
 8004200:	1c43      	adds	r3, r0, #1
 8004202:	d102      	bne.n	800420a <_isatty_r+0x1a>
 8004204:	682b      	ldr	r3, [r5, #0]
 8004206:	b103      	cbz	r3, 800420a <_isatty_r+0x1a>
 8004208:	6023      	str	r3, [r4, #0]
 800420a:	bd38      	pop	{r3, r4, r5, pc}
 800420c:	20000214 	.word	0x20000214

08004210 <_lseek_r>:
 8004210:	b538      	push	{r3, r4, r5, lr}
 8004212:	4d07      	ldr	r5, [pc, #28]	; (8004230 <_lseek_r+0x20>)
 8004214:	4604      	mov	r4, r0
 8004216:	4608      	mov	r0, r1
 8004218:	4611      	mov	r1, r2
 800421a:	2200      	movs	r2, #0
 800421c:	602a      	str	r2, [r5, #0]
 800421e:	461a      	mov	r2, r3
 8004220:	f000 f842 	bl	80042a8 <_lseek>
 8004224:	1c43      	adds	r3, r0, #1
 8004226:	d102      	bne.n	800422e <_lseek_r+0x1e>
 8004228:	682b      	ldr	r3, [r5, #0]
 800422a:	b103      	cbz	r3, 800422e <_lseek_r+0x1e>
 800422c:	6023      	str	r3, [r4, #0]
 800422e:	bd38      	pop	{r3, r4, r5, pc}
 8004230:	20000214 	.word	0x20000214

08004234 <_read_r>:
 8004234:	b538      	push	{r3, r4, r5, lr}
 8004236:	4d07      	ldr	r5, [pc, #28]	; (8004254 <_read_r+0x20>)
 8004238:	4604      	mov	r4, r0
 800423a:	4608      	mov	r0, r1
 800423c:	4611      	mov	r1, r2
 800423e:	2200      	movs	r2, #0
 8004240:	602a      	str	r2, [r5, #0]
 8004242:	461a      	mov	r2, r3
 8004244:	f000 f838 	bl	80042b8 <_read>
 8004248:	1c43      	adds	r3, r0, #1
 800424a:	d102      	bne.n	8004252 <_read_r+0x1e>
 800424c:	682b      	ldr	r3, [r5, #0]
 800424e:	b103      	cbz	r3, 8004252 <_read_r+0x1e>
 8004250:	6023      	str	r3, [r4, #0]
 8004252:	bd38      	pop	{r3, r4, r5, pc}
 8004254:	20000214 	.word	0x20000214

08004258 <_close>:
 8004258:	4b02      	ldr	r3, [pc, #8]	; (8004264 <_close+0xc>)
 800425a:	2258      	movs	r2, #88	; 0x58
 800425c:	601a      	str	r2, [r3, #0]
 800425e:	f04f 30ff 	mov.w	r0, #4294967295
 8004262:	4770      	bx	lr
 8004264:	20000214 	.word	0x20000214

08004268 <_fstat>:
 8004268:	4b02      	ldr	r3, [pc, #8]	; (8004274 <_fstat+0xc>)
 800426a:	2258      	movs	r2, #88	; 0x58
 800426c:	601a      	str	r2, [r3, #0]
 800426e:	f04f 30ff 	mov.w	r0, #4294967295
 8004272:	4770      	bx	lr
 8004274:	20000214 	.word	0x20000214

08004278 <_getpid>:
 8004278:	4b02      	ldr	r3, [pc, #8]	; (8004284 <_getpid+0xc>)
 800427a:	2258      	movs	r2, #88	; 0x58
 800427c:	601a      	str	r2, [r3, #0]
 800427e:	f04f 30ff 	mov.w	r0, #4294967295
 8004282:	4770      	bx	lr
 8004284:	20000214 	.word	0x20000214

08004288 <_isatty>:
 8004288:	4b02      	ldr	r3, [pc, #8]	; (8004294 <_isatty+0xc>)
 800428a:	2258      	movs	r2, #88	; 0x58
 800428c:	601a      	str	r2, [r3, #0]
 800428e:	2000      	movs	r0, #0
 8004290:	4770      	bx	lr
 8004292:	bf00      	nop
 8004294:	20000214 	.word	0x20000214

08004298 <_kill>:
 8004298:	4b02      	ldr	r3, [pc, #8]	; (80042a4 <_kill+0xc>)
 800429a:	2258      	movs	r2, #88	; 0x58
 800429c:	601a      	str	r2, [r3, #0]
 800429e:	f04f 30ff 	mov.w	r0, #4294967295
 80042a2:	4770      	bx	lr
 80042a4:	20000214 	.word	0x20000214

080042a8 <_lseek>:
 80042a8:	4b02      	ldr	r3, [pc, #8]	; (80042b4 <_lseek+0xc>)
 80042aa:	2258      	movs	r2, #88	; 0x58
 80042ac:	601a      	str	r2, [r3, #0]
 80042ae:	f04f 30ff 	mov.w	r0, #4294967295
 80042b2:	4770      	bx	lr
 80042b4:	20000214 	.word	0x20000214

080042b8 <_read>:
 80042b8:	4b02      	ldr	r3, [pc, #8]	; (80042c4 <_read+0xc>)
 80042ba:	2258      	movs	r2, #88	; 0x58
 80042bc:	601a      	str	r2, [r3, #0]
 80042be:	f04f 30ff 	mov.w	r0, #4294967295
 80042c2:	4770      	bx	lr
 80042c4:	20000214 	.word	0x20000214

080042c8 <_sbrk>:
 80042c8:	4a04      	ldr	r2, [pc, #16]	; (80042dc <_sbrk+0x14>)
 80042ca:	6811      	ldr	r1, [r2, #0]
 80042cc:	4603      	mov	r3, r0
 80042ce:	b909      	cbnz	r1, 80042d4 <_sbrk+0xc>
 80042d0:	4903      	ldr	r1, [pc, #12]	; (80042e0 <_sbrk+0x18>)
 80042d2:	6011      	str	r1, [r2, #0]
 80042d4:	6810      	ldr	r0, [r2, #0]
 80042d6:	4403      	add	r3, r0
 80042d8:	6013      	str	r3, [r2, #0]
 80042da:	4770      	bx	lr
 80042dc:	2000021c 	.word	0x2000021c
 80042e0:	20000220 	.word	0x20000220

080042e4 <_write>:
 80042e4:	4b02      	ldr	r3, [pc, #8]	; (80042f0 <_write+0xc>)
 80042e6:	2258      	movs	r2, #88	; 0x58
 80042e8:	601a      	str	r2, [r3, #0]
 80042ea:	f04f 30ff 	mov.w	r0, #4294967295
 80042ee:	4770      	bx	lr
 80042f0:	20000214 	.word	0x20000214

080042f4 <_exit>:
 80042f4:	e7fe      	b.n	80042f4 <_exit>
	...

080042f8 <_init>:
 80042f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80042fa:	bf00      	nop
 80042fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80042fe:	bc08      	pop	{r3}
 8004300:	469e      	mov	lr, r3
 8004302:	4770      	bx	lr

08004304 <_fini>:
 8004304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004306:	bf00      	nop
 8004308:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800430a:	bc08      	pop	{r3}
 800430c:	469e      	mov	lr, r3
 800430e:	4770      	bx	lr
